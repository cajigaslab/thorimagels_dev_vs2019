<Window x:Class="BesselBeamGen.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ViewModel="clr-namespace:BesselBeamGen.ViewModel"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:validator="clr-namespace:Validations;assembly=Validations"
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        mc:Ignorable="d"
        Background="#FF333333"
        Title="Bessel Beam Generation">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ThemeControl;component/ThorStyleDark.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <Image Source=".\Icon\Thorlabs.png" Width="100" Margin="1"></Image>
        </StackPanel>
        <GroupBox Grid.Row="1" 
                  Header="Settings"
                  BorderThickness="1"
                  Margin="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TabControl Width="260"
                            Grid.Column="0"
                            Grid.Row="0"
                            HorizontalAlignment="Center"
                            SelectedIndex="{Binding Path=SelectedPeriodTab, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <TabItem Width="128" Header="D1, D2, λ" />
                    <TabItem Width="128" Header="Period" />
                </TabControl>
                <Border Grid.Column="0" Grid.Row="1" BorderBrush="White" BorderThickness="1">
                    <StackPanel Orientation="Vertical">
                        <StackPanel.Style>
                            <Style BasedOn="{StaticResource {x:Type StackPanel}}" TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=SelectedPeriodTab}" Value="1">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <StackPanel Orientation="Horizontal">
                            <Label HorizontalContentAlignment="Right" Width="30" Content="λ: "/>
                            <TextBox Width="40" Height="20" 
                                     validator:Validation.ValidationType="{x:Type system:Double}"
                                     validator:Validation.NoEmptyValue="False"
                                     validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                     validator:Validation.MinValue="1"
                                     Text="{Binding Path=Lambda, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                            <Label Content="[nm] "/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label HorizontalContentAlignment="Right" Width="30" Content="D0: "/>
                            <TextBox Width="40" Height="20" 
                                     validator:Validation.ValidationType="{x:Type system:Double}"
                                     validator:Validation.NoEmptyValue="False"
                                     validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                     validator:Validation.MinValue="0.01"
                                     Text="{Binding Path=D0, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                            <Label Content="[um] "/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label HorizontalContentAlignment="Right" Width="30" Content="D1: "/>
                            <TextBox Width="40" Height="20" 
                                     validator:Validation.ValidationType="{x:Type system:Double}"
                                     validator:Validation.NoEmptyValue="False"
                                     validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"                                
                                     validator:Validation.MinValue="0.01"
                                     Text="{Binding Path=D1, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                            <Label Content="[um] "/>
                        </StackPanel>
                        <Label Content="{Binding Path=PeriodString, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </Border>
                <Border Grid.Column="0" Grid.Row="1" BorderBrush="White" BorderThickness="1">
                    <StackPanel Orientation="Vertical">
                        <StackPanel.Style>
                            <Style BasedOn="{StaticResource {x:Type StackPanel}}" TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=SelectedPeriodTab}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <CheckBox Name="ckSweep" Margin="1" Foreground="White" Content="Period Sweep"
                                  IsChecked="{Binding Path=PeriodSweep, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <StackPanel Orientation="Horizontal">
                            <Label HorizontalContentAlignment="Right" Width="100" Content="Start Period: "/>
                            <TextBox Width="50" Height="20" 
                                     validator:Validation.ValidationType="{x:Type system:Double}"
                                     validator:Validation.NoEmptyValue="False"
                                     validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                     validator:Validation.MinValue="0.01"
                                     Text="{Binding Path=PeriodStart, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                            <Label Content="[Pixel] "/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Style>
                                <Style BasedOn="{StaticResource {x:Type StackPanel}}" TargetType="StackPanel">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ckSweep, Path=IsChecked}" Value="False">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <Label HorizontalContentAlignment="Right" Width="100" Content="Period Step: "/>
                            <TextBox Width="50" Height="20"
                                     validator:Validation.ValidationType="{x:Type system:Double}"
                                     validator:Validation.NoEmptyValue="False"
                                     validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                     validator:Validation.MinValue="0.01"
                                     Text="{Binding Path=PeriodStep, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                            <Label Content="[Pixel] "/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    ToolTip="End Period should be less than Maximum period of 256.">
                            <StackPanel.Style>
                                <Style BasedOn="{StaticResource {x:Type StackPanel}}" TargetType="StackPanel">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=ckSweep, Path=IsChecked}" Value="False">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <Label HorizontalContentAlignment="Right" Width="100" Content="End Period: "/>
                            <TextBox Width="50" Height="20"
                                     validator:Validation.ValidationType="{x:Type system:Double}"
                                     validator:Validation.NoEmptyValue="False"
                                     validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                     validator:Validation.MinValue="0.01"
                                     validator:Validation.MaxValue="256"
                                     Text="{Binding Path=PeriodEnd, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                            <Label Content="[Pixel] "/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label HorizontalContentAlignment="Right" Width="100" Content="Generate Mode: "/>
                            <ComboBox Margin="1"
                                      ItemsSource="{Binding Path=GenerateModeItems, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"                                       
                                      SelectedIndex="{Binding Path=GenerateModeIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
                <StackPanel Grid.Column="1" Grid.Row="1" Orientation="Vertical">
                    <!--<CheckBox Margin="1" Foreground="White" Content="Invert"
                              IsChecked="{Binding Path=Invert, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/> By adding % Black and White, Invert not needed-->
                    <StackPanel Orientation="Horizontal">
                        <Label HorizontalContentAlignment="Right" Content="Maximum: "/>
                        <TextBox Width="50" Height="20"
                                 validator:Validation.ValidationType="{x:Type system:Double}"
                                 validator:Validation.NoEmptyValue="False"
                                 validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                 validator:Validation.MinValue="0"
                                 Text="{Binding Path=ValuePercentBlack, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                        <Label Content="% of 2π Black"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label HorizontalContentAlignment="Right" Content="Maximum: "/>
                        <TextBox Width="50" Height="20"
                                 validator:Validation.ValidationType="{x:Type system:Double}"
                                 validator:Validation.NoEmptyValue="False"
                                 validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                 validator:Validation.MinValue="0"
                                 Text="{Binding Path=ValuePercentWhite, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                        <Label Content="% of 2π White"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.ColumnSpan="2" Grid.Row="2" Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <Label HorizontalContentAlignment="Right" Width="100" Content="Output Path: "/>
                        <TextBox Width="300" Height="20"
                                 Text="{Binding Path=OutputPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Margin="1" Width="50" Height="30" VerticalAlignment="Center"
                                Command="{Binding SetOutputPathCommand}"
                                ToolTip="Set output path"
                                Style="{StaticResource ButtonNoOutlineStyle}">
                            <Image Source=".\Icon\Open.png" Width="30" />
                        </Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label HorizontalContentAlignment="Right" Width="100" Content="Base FileName: "/>
                        <TextBox Width="200" Height="20"
                                 Text="{Binding Path=BaseFileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Width="80"/>
                        <Button Margin="1" Width="80" Height="30" VerticalAlignment="Center" Style="{x:Null}"
                                Content="Generate" Foreground="White" Background="LimeGreen"
                                Command="{Binding GenerateCommand}">
                        </Button>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </GroupBox>
        <StackPanel Grid.Row="2">
            <StackPanel Orientation="Horizontal">
                <Button Margin="1" Width="60" Height="30" VerticalAlignment="Center"
                        Command="{Binding OpenBitmapCommand}"
                        ToolTip="display selected bitmap"
                        Style="{StaticResource ButtonNoOutlineStyle}">
                    <Image Source=".\Icon\Open.png" Width="30" />
                </Button>
                <Label Content="{Binding Path=ImagePath, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        ToolTip="Slider to display available images based on selected base filename.">
                <Label Width="60" Content="Images"/>
                <Slider Margin="3" 
                        Width="300"
                        VerticalAlignment="Center"
                        Minimum="1" 
                        Maximum="{Binding Path=ImageIdMax, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                        Value="{Binding Path=ImageIdCurrent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsSnapToTickEnabled ="True" 
                        TickFrequency="1"
                        ToolTip="{Binding Path=ImageIdCurrent}" AutoToolTipPlacement="TopLeft" AutoToolTipPrecision="0" />
            </StackPanel>
            <Image Width="512" 
                   Height="512"
                   Source="{Binding Path=ImageSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Foreground="{Binding Path=LastErrorColor, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Content="{Binding Path=LastError, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel>
    </Grid>
</Window>
