<UserControl x:Class="HistogramControl.HistogramControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:SuffixedTextBoxControl="clr-namespace:SuffixedTextBoxControl;assembly=SuffixedTextBoxControl"
             xmlns:s="http://schemas.abtsoftware.co.uk/scichart"
             xmlns:sharedTypes="clr-namespace:ThorSharedTypes;assembly=ThorSharedTypes"
             mc:Ignorable="d" 
             d:DesignHeight="120" 
             d:DesignWidth="238">
    <UserControl.Resources>
        <ResourceDictionary>
            <sharedTypes:BooleanToVisibilityConverter x:Key="VisibilityOfBool"/>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ThemeControl;component/ThorStyleDark.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel Background="Transparent"
                Visibility="{Binding HistogramVisibility}">
        <StackPanel Orientation="Horizontal"
                    Background="Transparent">
            <StackPanel Background="Transparent">
                <StackPanel HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="Transparent"
                            Orientation="Vertical">
                    <ToggleButton Width="15"
                                  Height="13"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Bottom"
                                  HorizontalContentAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  Padding="0"
                                  ToolTip="Expand Histogram"
                                  IsChecked="{Binding LargeHistogram, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <Path Width="15"
                              Height="13"
                              Data="M 4 6 L 10 6 M 7 3 L 7 9"
                              Fill="{StaticResource ToolPathBrush}"
                              Stroke="{StaticResource ToolPathBrush}" />
                    </ToggleButton>
                    <ToggleButton Width="15"
                                  Height="13"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Bottom"
                                  HorizontalContentAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  Padding="0"
                                  ToolTip="Expand All Histograms"
                                  IsChecked="{Binding AllHistogramsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <Path Width="15"
                              Height="13"
                              Data="M 5 6 L 9 6 M 7 4 L 7 8 M 1 9 L 5 9 M 3 7 L 3 11 M 9 3 L 13 3 M 11 1 L 11 5"
                              Fill="{StaticResource ToolPathBrush}"
                              Stroke="{StaticResource ToolPathBrush}" />
                    </ToggleButton>
                    <ToggleButton Name="ChannelVisibilityButton" 
                            Width="20"
                            Height="15"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center"
                            Padding="0"
                            Margin="0"
                            Visibility="{Binding Path=IsChannelVisibilityVisible, ConverterParameter=false, Converter={StaticResource VisibilityOfBool}}"
                            ToolTip="Histogram Channel Visibility"
                            ContextMenuService.Placement="Right">
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                <Setter Property="IsHitTestVisible" Value="True"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=ChannelVisibilityPopup, Path=IsOpen}" Value="True">
                                        <Setter Property="IsHitTestVisible" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                        <Path Width="15"
                              Height="13"
                              Margin="0"
                              Data="M 3 5 A 1 1 0.0 0 0 12 5 M 3 5 A 1 1 0.0 0 1 12 5"
                              Stroke="{StaticResource ToolPathBrush}" />
                    </ToggleButton>
                    <Popup Name="ChannelVisibilityPopup"
                        Placement="Right"
                        StaysOpen="False"
                        PopupAnimation="Slide"
                        IsOpen="{Binding IsChecked, ElementName=ChannelVisibilityButton, Mode=TwoWay}"
                        PlacementTarget="{Binding ElementName=ChannelVisibilityButton}">
                        <Border BorderThickness="1">
                            <ItemsControl Name="ChannelVisibilityItems"
                                          Margin="4, 3, 4, 2"
                                          ItemsSource="{Binding HistogramChannels, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid VerticalAlignment="Center"
                                              HorizontalAlignment="Center">
                                            <CheckBox IsChecked="{Binding IsVisible}"
                                                      VerticalAlignment="Center">
                                                <CheckBox.Content>
                                                    <StackPanel Orientation="Horizontal"
                                                                VerticalAlignment="Center">
                                                        <Rectangle Width="10" Height="10">
                                                            <Rectangle.Fill>
                                                                <SolidColorBrush Color="{Binding FillColor}"/>
                                                            </Rectangle.Fill>
                                                        </Rectangle>
                                                        <Label Content="{Binding DataChannel}"
                                                               Margin="4,0,0,0"
                                                               Padding="0"/>
                                                    </StackPanel>
                                                </CheckBox.Content>
                                            </CheckBox>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Border>
                    </Popup>
                </StackPanel>
                <Label HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Background="Transparent"
                       Content="{Binding ChannelName}">
                    <Label.LayoutTransform>
                        <RotateTransform Angle="-90" />
                    </Label.LayoutTransform>
                </Label>
            </StackPanel>
            <!--  Shows the SciChartSurface and binds ZoomHistoryManager to the instance in the viewmodel  -->
            <!--  This is what we use to control zoom history as well as Undo Redo  -->
            <Grid Panel.ZIndex="1"
                  HorizontalAlignment="Center">
                <Border BorderBrush="Black">
                    <s:SciChartSurface x:Name="HistogramSciChart"
                                       RenderableSeries="{s:SeriesBinding RenderableSeriesViewModels}"
                                       s:VisualXcceleratorEngine.IsEnabled="True"
                                       s:VisualXcceleratorEngine.FallbackType="{x:Type s:HighSpeedRenderSurface}"
                                       s:VisualXcceleratorEngine.DowngradeWithoutException="False"
                                       s:VisualXcceleratorEngine.EnableImpossibleMode="True"
                                       RenderPriority="Normal"
                                       Width="{Binding ScichartSurfaceWidth}"
                                       Height="{Binding ScichartSurfaceHeight}"
                                       YAxis="{Binding HistogramYAxis}"
                                       XAxis="{Binding HistogramXAxis}"
                                       MouseLeave="HistogramSciChart_MouseLeave"
                                       MouseUp="HistogramSciChart_MouseUp"
                                       MouseMove="HistogramSciChart_MouseMove">
                        <s:SciChartSurface.Background>
                            <SolidColorBrush Opacity="1" 
                                             Color="#603E3E42"/>
                        </s:SciChartSurface.Background>
                        <s:SciChartSurface.Annotations>
                            <!--White point marker-->
                            <s:VerticalLineAnnotation VerticalAlignment="Stretch"
                                                      FontSize="11"
                                                      Foreground="White"
                                                      IsEditable="True"
                                                      Stroke="DarkGray"
                                                      StrokeThickness="3"
                                                      LabelTextFormatting="0"
                                                      Opacity="0.05"
                                                      X1="{Binding Path=ThresholdWP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <!--Black point marker-->
                            <s:VerticalLineAnnotation VerticalAlignment="Stretch"
                                                      FontSize="11"
                                                      Foreground="White"
                                                      IsEditable="True"
                                                      Stroke="DarkGray"
                                                      StrokeThickness="3"
                                                      LabelTextFormatting="0"
                                                      Opacity="0.05"
                                                      X1="{Binding Path=ThresholdBP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <s:LineAnnotation></s:LineAnnotation>
                            <!--Annotation for the bendable gamma line-->
                            <s:BoxAnnotation x:Name="customAnnotation"
                                             X1="{Binding Path=ThresholdBP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             X2="{Binding Path=ThresholdWP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Background="Transparent"
                                             BorderBrush="Transparent" 
                                             Padding="5">
                                <s:BoxAnnotation.Template>
                                    <ControlTemplate TargetType="s:BoxAnnotation">
                                        <Grid>
                                            <Border x:Name="PART_BoxAnnotationRoot"
                                                    Margin="{TemplateBinding Margin}"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="{TemplateBinding CornerRadius}"
                                                    SizeChanged="PART_BoxAnnotationRoot_SizeChanged">
                                                <Canvas Background="Transparent" >
                                                    <Path x:Name="bendableLine"
                                                          Loaded="bendableLine_Loaded"
                                                          Unloaded="bendableLine_Unloaded"
                                                          Data="{Binding BendableLineGeometry}" 
                                                          Stroke="White" 
                                                          Cursor="SizeNS"
                                                          IsHitTestVisible="True"
                                                          StrokeThickness="2"/>
                                                </Canvas>
                                            </Border>
                                        </Grid>
                                    </ControlTemplate>
                                </s:BoxAnnotation.Template>
                            </s:BoxAnnotation>
                            <!--Red circle marker annotation-->
                            <s:CustomAnnotation Margin="-9,0,0,0" 
                                                IsEditable="True"
                                                Cursor="SizeWE"
                                                X1="{Binding Path=ThresholdWP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <Path Data="M 3 5 A 1 1 0.0 0 0 12 5 M 3 5 A 1 1 0.0 0 1 12 5" 
                                      Fill="Red" 
                                      Stroke="White" 
                                      Opacity="0.8"
                                      StrokeThickness="1"/>
                            </s:CustomAnnotation>
                            <!--Blue circle marker annotation-->
                            <s:CustomAnnotation IsEditable="True"
                                                Cursor="SizeWE"
                                                Margin="{Binding Path=BPMarkerMargin, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                                X1="{Binding Path=ThresholdBP, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <Path Data="M 3 5 A 1 1 0.0 0 0 12 5 M 3 5 A 1 1 0.0 0 1 12 5" 
                                      Fill="Blue"
                                      Stroke="White" 
                                      Opacity="0.8"
                                      StrokeThickness="1"/>
                            </s:CustomAnnotation>
                        </s:SciChartSurface.Annotations>
                    </s:SciChartSurface>
                </Border>
            </Grid>
        </StackPanel>
        <Grid HorizontalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal"
                    Grid.Row="-0"
                    Background="Transparent"
                    Margin="0,-4,1,-1"
                    HorizontalAlignment="Center">
            <Label Content="B:"/>
            <SuffixedTextBoxControl:SuffixedTextBox x:Name="BlackPointTextBox"
                                                    VerticalContentAlignment="Center"
                                                    HorizontalContentAlignment="Center"
                                                    Height="20"
                                                    Width="39"
                                                    Text="{Binding BlackPoint, Mode=TwoWay}"
                                                    Suffix="{Binding UnitSymbol, Mode=OneWay}">
                <SuffixedTextBoxControl:SuffixedTextBox.Background>
                    <SolidColorBrush Opacity="0.5"
                                     Color="Blue"/>
                </SuffixedTextBoxControl:SuffixedTextBox.Background>
            </SuffixedTextBoxControl:SuffixedTextBox>
            <Button Width="20"
                    Height="20"
                    FontSize="10"
                    Content="✓">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=BlackPointTextBox}"
                                         Value="True">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <StackPanel Orientation="Horizontal"
                        Margin="8,0"
                        Background="Transparent">
                <Label Content="Gamma:"/>
                <TextBox x:Name="GammaTextBox"
                         VerticalContentAlignment="Center"
                         HorizontalContentAlignment="Center"
                         Height="20"
                         Width="40"
                         Text="{Binding Gamma, Mode=TwoWay, StringFormat={}{0:F2}}"/>
                <Button Width="20"
                        Height="20"
                        FontSize="10"
                        Content="✓">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsFocused, ElementName=GammaTextBox}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            <Label Content="W:"/>
            <SuffixedTextBoxControl:SuffixedTextBox x:Name="WhitePointTextBox"
                                                    VerticalContentAlignment="Center"
                                                    HorizontalContentAlignment="Center"
                                                    Height="20"
                                                    Width="39"
                                                    Text="{Binding WhitePoint, Mode=TwoWay}"
                                                    Suffix="{Binding UnitSymbol, Mode=OneWay}">
                <SuffixedTextBoxControl:SuffixedTextBox.Background>
                    <SolidColorBrush Opacity="0.5"
                                     Color="Red"/>
                </SuffixedTextBoxControl:SuffixedTextBox.Background>
            </SuffixedTextBoxControl:SuffixedTextBox>
            <Button Width="20"
                    Height="20"
                    FontSize="10"
                    Content="✓">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=WhitePointTextBox}"
                                         Value="True">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
        <StackPanel Background="Transparent"
                    Grid.Row="1"
                    HorizontalAlignment="Right">
            <Grid Width="215"
                  HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Left"
                            VerticalAlignment="top"
                            Background="Transparent"
                            Panel.ZIndex="1">
                    <RepeatButton Foreground="White"
                                  Width="19"
                                  Margin="2,0,0,0"
                                  Height="25"
                                  FontSize="12"
                                  FontWeight="UltraBold"
                                  VerticalContentAlignment="Center"
                                  Content="⟨" 
                                  Command="{Binding BPLeftCommand}">
                        <RepeatButton.Style>
                            <Style TargetType="RepeatButton"/>
                        </RepeatButton.Style>
                        <RepeatButton.Background>
                            <SolidColorBrush Opacity="0.5"
                                             Color="Blue"/>
                        </RepeatButton.Background>
                        <RepeatButton.BorderBrush>
                            <SolidColorBrush Opacity="0.5"
                                             Color="White"/>
                        </RepeatButton.BorderBrush>
                    </RepeatButton>
                    <RepeatButton Foreground="White"
                                  Width="19"
                                  Height="25"
                                  FontSize="12"
                                  Margin="1,0"
                                  FontWeight="UltraBold"
                                  Content="⟩" 
                                  Command="{Binding BPRightCommand}">
                        <RepeatButton.Style>
                            <Style TargetType="RepeatButton"/>
                        </RepeatButton.Style>
                        <RepeatButton.Background>
                            <SolidColorBrush Opacity="0.5"
                                             Color="Blue"/>
                        </RepeatButton.Background>
                        <RepeatButton.BorderBrush>
                            <SolidColorBrush Opacity="0.5"
                                             Color="White"/>
                        </RepeatButton.BorderBrush>
                    </RepeatButton>
                </StackPanel>
                <StackPanel HorizontalAlignment="Center"
                            VerticalAlignment="Top"
                            Background="Transparent">
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="0,1,0,0">
                        <Button Width="60"
                                Height="25"
                                Content="{Binding AutoButtonContent}" 
                                Command="{Binding AutoCommand}">
                            <Button.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Advanced Fitting Options"
                                              Command="{Binding OpenAutoAdvancedWindowCommand}"/>
                                </ContextMenu>
                            </Button.ContextMenu>
                        </Button>
                            <Button Width="60"
                                Content="Reset" 
                                Command="{Binding ResetCommand}">
                            </Button>
                        </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Background="Transparent">
                    <RepeatButton Foreground="White"
                                  Margin="2,0,0,0"
                                  Width="19"
                                  Height="25"
                                  FontSize="12"
                                  FontWeight="UltraBold"
                                  VerticalAlignment="Top"
                                  Content="⟨" 
                                  Command="{Binding WPLeftCommand}">
                        <RepeatButton.Style>
                            <Style TargetType="RepeatButton"/>
                        </RepeatButton.Style>
                        <RepeatButton.Background>
                            <SolidColorBrush Opacity="0.5"
                                             Color="Red"/>
                        </RepeatButton.Background>
                        <RepeatButton.BorderBrush>
                            <SolidColorBrush Opacity="0.5"
                                             Color="White"/>
                        </RepeatButton.BorderBrush>
                    </RepeatButton>
                    <RepeatButton Foreground="White"
                                  Margin="1,0"
                                  Width="19"
                                  Height="25"
                                  FontSize="12"
                                  FontWeight="UltraBold"
                                  Content="⟩" 
                                  Command="{Binding WPRightCommand}">
                        <RepeatButton.Style>
                            <Style TargetType="RepeatButton"/>
                        </RepeatButton.Style>
                        <RepeatButton.Background>
                            <SolidColorBrush Opacity="0.5"
                                             Color="Red"/>
                        </RepeatButton.Background>
                        <RepeatButton.BorderBrush>
                            <SolidColorBrush Opacity="0.5"
                                             Color="White"/>
                        </RepeatButton.BorderBrush>
                    </RepeatButton>
                </StackPanel>
            </Grid>
            <StackPanel Orientation="Horizontal"
                        Background="Transparent"
                        HorizontalAlignment="Center">
                <CheckBox Content="{Binding ContinuousAutoContent}" 
                          Margin="5,0"
                          VerticalContentAlignment="Center"
                          IsChecked="{Binding ContinuousAuto}"/>
                <CheckBox Content="Log" 
                          Margin="5,0"
                          VerticalContentAlignment="Center"
                          IsChecked="{Binding Log}"/>
            </StackPanel>
        </StackPanel>
        </Grid>
    </StackPanel>
</UserControl>
