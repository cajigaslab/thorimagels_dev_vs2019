<UserControl x:Class="ScanControl.ScanControlUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:roi="clr-namespace:ROIUserControl;assembly=ROIUserControl"
             xmlns:local="clr-namespace:ScanControl"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:b="clr-namespace:MyBehaviorAssembly"
             xmlns:sharedTypes="clr-namespace:ThorSharedTypes;assembly=ThorSharedTypes"
             mc:Ignorable="d"
             Height="Auto"
             Width="400">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ThemeControl;component/ThorStyleDark.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <local:BoolToOppositeBoolConverter x:Key="boolOppositeConverter" />
            <local:DoubleCultureConverter x:Key="doubleCulture" />
            <local:PMTOnBrushConverter x:Key="pmtOnConverter" />
            <local:MultiValConverter x:Key="multiValConverter" />
            <local:InputRangeConverter x:Key="inputRangeConverter" />
            <local:InputRangeConverter2 x:Key="inputRangeConverter2" />
            <local:InputRangeValConverter x:Key="inputRangeValConverter" />
            <local:RoundingConverter x:Key="RoundingConverter" />
            <local:InputRangeMaxToVisibilityConverter x:Key="inputRangeMaxToVisibilityConverter" />
            <sharedTypes:BooleanToVisibilityConverter x:Key="bool2Visibility" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Name="spGainA"
                  Grid.Column="0"
                  HorizontalAlignment="Stretch"
                  Grid.Row="0"
                  Margin="1"
                  ToolTip="PMT 1 gain settings"
                  Visibility="{Binding Path=IsChannelVisible[0], Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"
                            Grid.Column="0">
                    <ToggleButton x:Name="switch1"
                                  Style="{StaticResource SliderToggleSwitchStyle}"
                                  Margin="0,5,0,2"
                                  ToolTip="Enable PMT and Acquisition for Channel A"
                                  Width="48"
                                  IsChecked="{Binding Path=LSMChannelEnable0}"
                                  HorizontalContentAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  IsEnabled="{Binding LSMChannelDisableAll}"
                                  Height="34">
                        <ToggleButton.Background>
                            <MultiBinding Converter="{StaticResource multiValConverter}">
                                <Binding Path="PMTOn[0].Value"
                                         Mode="TwoWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                                <Binding Path="IsChecked"
                                         ElementName="switch1" />
                                <Binding Path="PMTGain[0].Value"
                                         Mode="TwoWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                                <Binding Path="PMTDetectorType[0].Value"
                                         Mode="OneWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                            </MultiBinding>
                        </ToggleButton.Background>
                    </ToggleButton>
                    <Label Content="A"
                           Foreground="White"
                           VerticalAlignment="Center" />
                    <Label Name="labGain1"
                           Content="Gain"
                           Foreground="White"
                           Visibility="{Binding Path=PMTGain[0].IsAvailable, Converter={StaticResource bool2Visibility}}"
                           VerticalAlignment="Center" />
                </StackPanel>
                <Slider Name="GainSlider1"
                        Grid.Column="1"
                        Visibility="{Binding Path=PMTGain[0].IsAvailable, Converter={StaticResource bool2Visibility}}"
                        Value="{Binding Path=PMTGain[0].Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Minimum="{Binding Path=PMTGain[0].Min, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Maximum="{Binding Path=PMTGain[0].Max, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        VerticalAlignment="Center"
                        ValueChanged="Slider_ValueChanged">
                    <!--Slider behaviors requires us to set the value binding of the slider to OneWay mode and the value binding of SliderDragEndValueBehavior to TwoWay mode-->
                    <i:Interaction.Behaviors>
                        <b:SliderDragEndValueBehavior Value="{Binding Path=PMTGain[0].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </i:Interaction.Behaviors>
                </Slider>
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding Path=PMTGain[0].IsAvailable, Converter={StaticResource bool2Visibility}}"
                            Grid.Column="2">
                    <TextBox Width="33"
                             Height="25"
                             Name="tbPMT1Gain"
                             Text="{Binding Path=PMTGain[0].Value, Mode=TwoWay, StringFormat='{}{0:0.##}'}" />
                    <Button Width="30"
                            Height="25"
                            Content="&#x2713;">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbPMT1Gain}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <StackPanel Orientation="Vertical">
                        <RepeatButton Content="+"
                                      Width="30"
                                      Height="20"
                                      Command="{Binding Path=PMTGainPlusCommand}"
                                      CommandParameter="0"
                                      Delay="500"
                                      Interval="100" />
                        <RepeatButton Content="-"
                                      Width="30"
                                      Height="20"
                                      Command="{Binding Path=PMTGainMinusCommand}"
                                      CommandParameter="0"
                                      Delay="500"
                                      Interval="100" />
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Grid.Column="3"
                            Visibility="{Binding PMT1VoltageVisibility}">
                    <Label Name="VoltagePMT1"
                           Content="{Binding Path=PMTVolt[0].Value, Converter={StaticResource RoundingConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           Foreground="White"
                           Width="42"
                           VerticalAlignment="Center" />
                    <Label Content="[V]"
                           Padding="0,3,3,3"
                           Foreground="White"
                           VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Grid.Column="4"
                            VerticalAlignment="Center"
                            Visibility="{Binding PMTSaturationsVisibility}"
                            ToolTip="PMT saturation count">
                    <Label Content="S:"
                           VerticalAlignment="Center"
                           Padding="3,3,1,3" />
                    <Label Content="{Binding PMT1Saturations}"
                           Foreground="Red"
                           Width="30"
                           VerticalAlignment="Center"
                           Padding="0,3,3,3" />
                </StackPanel>
            </Grid>
            <Grid Name="spGainB"
                  Grid.Row="1"
                  Margin="1"
                  ToolTip="PMT 2 gain settings"
                  Visibility="{Binding Path=IsChannelVisible[1], Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"
                            Grid.Column="0">
                    <ToggleButton x:Name="switch2"
                                  Style="{StaticResource SliderToggleSwitchStyle}"
                                  Margin="0,5,0,2"
                                  ToolTip="Enable PMT and Acquisition for Channel B"
                                  Width="48"
                                  IsChecked="{Binding Path=LSMChannelEnable1}"
                                  HorizontalContentAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  IsEnabled="{Binding LSMChannelDisableAll}"
                                  Height="34">
                        <ToggleButton.Background>
                            <MultiBinding Converter="{StaticResource multiValConverter}">
                                <Binding Path="PMTOn[1].Value"
                                         Mode="TwoWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                                <Binding Path="IsChecked"
                                         ElementName="switch2" />
                                <Binding Path="PMTGain[1].Value"
                                         Mode="TwoWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                                <Binding Path="PMTDetectorType[1].Value"
                                         Mode="OneWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                            </MultiBinding>
                        </ToggleButton.Background>
                    </ToggleButton>
                    <Label Content="B"
                           Foreground="White"
                           VerticalAlignment="Center" />
                    <Label Name="labGain2"
                           Content="Gain"
                           Foreground="White"
                           Visibility="{Binding Path=PMTGain[1].IsAvailable, Converter={StaticResource bool2Visibility}}"
                           VerticalAlignment="Center" />
                </StackPanel>
                <Slider Name="GainSlider2"
                        Grid.Column="1"
                        Visibility="{Binding Path=PMTGain[1].IsAvailable, Converter={StaticResource bool2Visibility}}"
                        Value="{Binding Path=PMTGain[1].Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Minimum="{Binding Path=PMTGain[1].Min, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Maximum="{Binding Path=PMTGain[1].Max, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        VerticalAlignment="Center"
                        ValueChanged="Slider_ValueChanged">
                    <!--Slider behaviors requires us to set the value binding of the slider to OneWay mode and the value binding of SliderDragEndValueBehavior to TwoWay mode-->
                    <i:Interaction.Behaviors>
                        <b:SliderDragEndValueBehavior Value="{Binding Path=PMTGain[1].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </i:Interaction.Behaviors>
                </Slider>
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding Path=PMTGain[1].IsAvailable, Converter={StaticResource bool2Visibility}}"
                            Grid.Column="2">
                    <TextBox Width="33"
                             Name="tbPMT2Gain"
                             Height="25"
                             Text="{Binding Path=PMTGain[1].Value, Mode=TwoWay, StringFormat='{}{0:0.##}'}" />
                    <Button Width="30"
                            Height="25"
                            Content="&#x2713;">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbPMT2Gain}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <StackPanel VerticalAlignment="Center">
                        <RepeatButton Content="+"
                                      Width="30"
                                      Height="20"
                                      Command="{Binding Path=PMTGainPlusCommand}"
                                      CommandParameter="1"
                                      Delay="500"
                                      Interval="100" />
                        <RepeatButton Content="-"
                                      Width="30"
                                      Height="20"
                                      Command="{Binding Path=PMTGainMinusCommand}"
                                      CommandParameter="1"
                                      Delay="500"
                                      Interval="100" />
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Grid.Column="3"
                            Visibility="{Binding PMT2VoltageVisibility}">
                    <Label Name="VoltagePMT2"
                           Content="{Binding Path=PMTVolt[1].Value, Converter={StaticResource RoundingConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           Foreground="White"
                           Width="42"
                           VerticalAlignment="Center" />
                    <Label Content="[V]"
                           Padding="0,3,3,3"
                           Foreground="White"
                           VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Grid.Column="4"
                            VerticalAlignment="Center"
                            Visibility="{Binding PMTSaturationsVisibility}"
                            ToolTip="PMT saturation count">
                    <Label Content="S:"
                           VerticalAlignment="Center"
                           Padding="3,3,1,3" />
                    <Label Content="{Binding PMT2Saturations}"
                           Padding="0,3,3,3"
                           Foreground="Red"
                           Width="30"
                           VerticalAlignment="Center" />
                </StackPanel>
            </Grid>
            <Grid Name="spGainC"
                  Grid.Row="2"
                  Margin="1"
                  ToolTip="PMT 3 gain settings"
                  Visibility="{Binding Path=IsChannelVisible[2], Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"
                            Grid.Column="0">
                    <ToggleButton x:Name="switch3"
                                  Style="{StaticResource SliderToggleSwitchStyle}"
                                  Margin="0,5,0,2"
                                  ToolTip="Enable PMT and Acquisition for Channel C"
                                  Width="48"
                                  IsChecked="{Binding Path=LSMChannelEnable2}"
                                  HorizontalContentAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  IsEnabled="{Binding LSMChannelDisableAll}"
                                  Height="34">
                        <ToggleButton.Background>
                            <MultiBinding Converter="{StaticResource multiValConverter}">
                                <Binding Path="PMTOn[2].Value"
                                         Mode="TwoWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                                <Binding Path="IsChecked"
                                         ElementName="switch3" />
                                <Binding Path="PMTGain[2].Value"
                                         Mode="TwoWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                                <Binding Path="PMTDetectorType[2].Value"
                                         Mode="OneWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                            </MultiBinding>
                        </ToggleButton.Background>
                    </ToggleButton>
                    <Label Content="C"
                           Foreground="White"
                           VerticalAlignment="Center" />
                    <Label Name="labGain3"
                           Content="Gain"
                           Foreground="White"
                           Visibility="{Binding Path=PMTGain[2].IsAvailable, Converter={StaticResource bool2Visibility}}"
                           VerticalAlignment="Center" />
                </StackPanel>
                <Slider Name="GainSlider3"
                        Grid.Column="1"
                        Visibility="{Binding Path=PMTGain[2].IsAvailable, Converter={StaticResource bool2Visibility}}"
                        Value="{Binding Path=PMTGain[2].Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Minimum="{Binding Path=PMTGain[2].Min, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Maximum="{Binding Path=PMTGain[2].Max, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        VerticalAlignment="Center"
                        ValueChanged="Slider_ValueChanged">
                    <!--Slider behaviors requires us to set the value binding of the slider to OneWay mode and the value binding of SliderDragEndValueBehavior to TwoWay mode-->
                    <i:Interaction.Behaviors>
                        <b:SliderDragEndValueBehavior Value="{Binding Path=PMTGain[2].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </i:Interaction.Behaviors>
                </Slider>
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding Path=PMTGain[2].IsAvailable, Converter={StaticResource bool2Visibility}}"
                            Grid.Column="2">
                    <TextBox Width="33"
                             Name="tbPMT3Gain"
                             Height="25"
                             Text="{Binding Path=PMTGain[2].Value, Mode=TwoWay, StringFormat='{}{0:0.##}'}" />
                    <Button Width="30"
                            Height="25"
                            Content="&#x2713;">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbPMT3Gain}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <StackPanel>
                        <RepeatButton Content="+"
                                      Width="30"
                                      Height="20"
                                      Command="{Binding Path=PMTGainPlusCommand}"
                                      CommandParameter="2"
                                      Delay="500"
                                      Interval="100" />
                        <RepeatButton Content="-"
                                      Width="30"
                                      Height="20"
                                      Command="{Binding Path=PMTGainMinusCommand}"
                                      CommandParameter="2"
                                      Delay="500"
                                      Interval="100" />
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Grid.Column="3"
                            Visibility="{Binding PMT3VoltageVisibility}">
                    <Label Name="VoltagePMT3"
                           Content="{Binding Path=PMTVolt[2].Value, Converter={StaticResource RoundingConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           Foreground="White"
                           Width="42"
                           VerticalAlignment="Center" />
                    <Label Content="[V]"
                           Padding="0,3,3,3"
                           Foreground="White"
                           VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Grid.Column="4"
                            VerticalAlignment="Center"
                            Visibility="{Binding PMTSaturationsVisibility}"
                            ToolTip="PMT saturation count">
                    <Label Content="S:"
                           VerticalAlignment="Center"
                           Padding="3,3,1,3" />
                    <Label Content="{Binding PMT3Saturations}"
                           Padding="0,3,3,3"
                           Foreground="Red"
                           Width="30"
                           VerticalAlignment="Center" />
                </StackPanel>
            </Grid>
            <Grid Name="spGainD"
                  Grid.Row="3"
                  Margin="1"
                  ToolTip="PMT 4 gain settings"
                  Visibility="{Binding Path=IsChannelVisible[3], Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"
                            Grid.Column="0">
                    <ToggleButton x:Name="switch4"
                                  Style="{StaticResource SliderToggleSwitchStyle}"
                                  Margin="0,5,0,2"
                                  ToolTip="Enable PMT and Acquisition for Channel D"
                                  Width="48"
                                  IsChecked="{Binding Path=LSMChannelEnable3}"
                                  HorizontalContentAlignment="Center"
                                  VerticalContentAlignment="Center"
                                  IsEnabled="{Binding LSMChannelDisableAll}"
                                  Height="34">
                        <ToggleButton.Background>
                            <MultiBinding Converter="{StaticResource multiValConverter}">
                                <Binding Path="PMTOn[3].Value"
                                         Mode="TwoWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                                <Binding Path="IsChecked"
                                         ElementName="switch4" />
                                <Binding Path="PMTGain[3].Value"
                                         Mode="TwoWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                                <Binding Path="PMTDetectorType[3].Value"
                                         Mode="OneWay"
                                         UpdateSourceTrigger="PropertyChanged" />
                            </MultiBinding>
                        </ToggleButton.Background>
                    </ToggleButton>
                    <Label Content="D"
                           Foreground="White"
                           VerticalAlignment="Center" />
                    <Label Name="labGain4"
                           Content="Gain"
                           Foreground="White"
                           Visibility="{Binding Path=PMTGain[3].IsAvailable, Converter={StaticResource bool2Visibility}}"
                           VerticalAlignment="Center" />
                </StackPanel>
                <Slider Name="GainSlider4"
                        Grid.Column="1"
                        Visibility="{Binding Path=PMTGain[3].IsAvailable, Converter={StaticResource bool2Visibility}}"
                        Value="{Binding Path=PMTGain[3].Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Minimum="{Binding Path=PMTGain[3].Min, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Maximum="{Binding Path=PMTGain[3].Max, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        VerticalAlignment="Center"
                        ValueChanged="Slider_ValueChanged">
                    <!--Slider behaviors requires us to set the value binding of the slider to OneWay mode and the value binding of SliderDragEndValueBehavior to TwoWay mode-->
                    <i:Interaction.Behaviors>
                        <b:SliderDragEndValueBehavior Value="{Binding Path=PMTGain[3].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </i:Interaction.Behaviors>
                </Slider>
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding Path=PMTGain[3].IsAvailable, Converter={StaticResource bool2Visibility}}"
                            Grid.Column="2">
                    <TextBox Width="33"
                             Name="tbPMT4Gain"
                             Height="25"
                             Text="{Binding Path=PMTGain[3].Value, Mode=TwoWay, StringFormat='{}{0:0.##}'}" />
                    <Button Width="30"
                            Height="25"
                            Content="&#x2713;">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbPMT4Gain}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <StackPanel>
                        <RepeatButton Content="+"
                                      Width="30"
                                      Height="20"
                                      Command="{Binding Path=PMTGainPlusCommand}"
                                      CommandParameter="3"
                                      Delay="500"
                                      Interval="100" />
                        <RepeatButton Content="-"
                                      Width="30"
                                      Height="20"
                                      Command="{Binding Path=PMTGainMinusCommand}"
                                      CommandParameter="3"
                                      Delay="500"
                                      Interval="100" />
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Grid.Column="3"
                            Visibility="{Binding PMT4VoltageVisibility}">
                    <Label Name="VoltagePMT4"
                           Content="{Binding Path=PMTVolt[3].Value, Converter={StaticResource RoundingConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                           Foreground="White"
                           Width="42"
                           VerticalAlignment="Center" />
                    <Label Content="[V]"
                           Padding="0,3,3,3"
                           Foreground="White"
                           VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Grid.Column="4"
                            VerticalAlignment="Center"
                            Visibility="{Binding PMTSaturationsVisibility}"
                            ToolTip="PMT saturation count">
                    <Label Content="S:"
                           VerticalAlignment="Center"
                           Padding="3,3,1,3" />
                    <Label Content="{Binding PMT4Saturations}"
                           VerticalAlignment="Center"
                           Foreground="Red"
                           Width="30"
                           Padding="0,3,3,3" />
                </StackPanel>
            </Grid>
        </Grid>
        <StackPanel Margin="1"
                    Grid.Row="1">
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        Margin="16,0">
                <StackPanel VerticalAlignment="Center">
                    <Label Foreground="White"
                           MinWidth="60"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center">
                        <TextBlock Text="Scan Mode"
                                   TextAlignment="Right" />
                    </Label>
                    <CheckBox Content="Rapid Scan"
                              Margin="3"
                              ToolTip="Interleave two-way or one-way scan"
                              IsChecked="{Binding LSMInterleaveScan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Visibility="{Binding RapidScanVisibility}" />
                </StackPanel>
                <ListView x:Name="lvScanMode"
                          Height="50"
                          VerticalAlignment="Center"
                          SelectedIndex="{Binding LSMScanMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ListView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}">SteelBlue</SolidColorBrush>
                    </ListView.Resources>
                    <ListView.Style>
                        <StaticResource ResourceKey="HorizontalListView" />
                    </ListView.Style>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <Label Width="40"
                           Height="40"
                           HorizontalAlignment="Center"
                           Background="#FF595959"
                           Visibility="{Binding TwoWayVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                           ToolTip="Two way scan(Fast mode). Capture data on the front and back scan.">
                        <StackPanel Style="{x:Null}">
                            <Path Stroke="LimeGreen"
                                  Fill="LimeGreen"
                                  Data="M 2 5 L 20 5 L 20 2 L 30 8 L 20 14 L 20 11 L 2 11 Z" />
                            <Path Stroke="LimeGreen"
                                  Fill="LimeGreen"
                                  Data="M 38 3 L 13 3 L 13 0 L 2 6 L 12 12 L 12 9 L 30 9 Z" />
                        </StackPanel>
                    </Label>
                    <Label Width="40"
                           Height="40"
                           HorizontalAlignment="Center"
                           Background="#FF595959"
                           ToolTip="One way scan(Slow mode). Capture data on the front scan only.">
                        <StackPanel Style="{x:Null}">
                            <Path Stroke="LimeGreen"
                                  Fill="LimeGreen"
                                  Data="M 2 5 L 20 5 L 20 2 L 30 8 L 20 14 L 20 11 L 2 11 Z" />
                            <Path Stroke="LimeGreen"
                                  Fill="LimeGreen"
                                  Data="M 2 5 L 20 5 L 20 2 L 30 8 L 20 14 L 20 11 L 2 11 Z" />
                        </StackPanel>
                    </Label>
                </ListView>
                <StackPanel Margin="0,-1,0,7"
                            Visibility="{Binding TwoWayAlignmentPanelVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            ToolTip="Adjustment for bringing the front and back scan into alignment for Two way scanning.">
                    <Label Foreground="White"
                           Content="Two Way Alignment" />
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Center">
                        <StackPanel>
                            <RepeatButton Content="+"
                                          Width="30"
                                          Height="20"
                                          Command="{Binding LSMAlignmentPlusCommand}"
                                          Delay="500"
                                          Interval="100" />
                            <RepeatButton Content="-"
                                          Width="30"
                                          Height="20"
                                          Command="{Binding LSMAlignmentMinusCommand}"
                                          Delay="500"
                                          Interval="100" />
                        </StackPanel>
                        <TextBox x:Name="txtTwoWay"
                                 Width="50"
                                 Height="25"
                                 Text="{Binding LSMTwoWayAlignment, Mode=TwoWay}" />
                        <Button Width="30"
                                Height="25"
                                Content="✓">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsFocused, ElementName=txtTwoWay}"
                                                     Value="True">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </StackPanel>
                <Button x:Name="butTwoWaySetup"
                        Margin="0,25,0,0"
                        Width="25"
                        Height="25"
                        Command="{Binding TwoWayCalibrationCommand}"
                        Visibility="{Binding TwoWayCalibrationVisibility}">
                    <Image Source="/ScanControl;component/Wrench.png" />
                </Button>
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        Margin="6,0,0,0"
                        Visibility="{Binding CoarsePanelVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <Label Content="Coarse Alignment"
                       VerticalAlignment="Center" />
                <StackPanel Orientation="Horizontal">
                    <StackPanel>
                        <RepeatButton Content="+"
                                      Width="30"
                                      Height="20"
                                      Command="{Binding LSMAlignmentPlusCoarseCommand}"
                                      Delay="500"
                                      Interval="100" />
                        <RepeatButton Content="-"
                                      Width="30"
                                      Height="20"
                                      Command="{Binding LSMAlignmentMinusCoarseCommand}"
                                      Delay="500"
                                      Interval="100" />
                    </StackPanel>
                    <TextBox x:Name="txtTwoWayCoarse"
                             Width="50"
                             Height="25"
                             Text="{Binding LSMTwoWayAlignmentCoarse, Mode=TwoWay}" />
                    <Button Width="30"
                            Height="25"
                            Content="✓">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsFocused, ElementName=txtTwoWayCoarse}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Margin="1">
                    <Label Height="25"
                           Content="Step Size"
                           Foreground="White" />
                    <TextBox Name="txtStepSize"
                             Width="50"
                             Height="20"
                             VerticalAlignment="Center"
                             VerticalContentAlignment="Center"
                             Text="{Binding Path=CoarseAlignmentStepSize, Mode=TwoWay, FallbackValue=1}"
                             ToolTip="Step size for the + and - buttons from the coarse alignment" />
                    <Button Width="30"
                            Height="25"
                            Content="✓">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtStepSize}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <StackPanel VerticalAlignment="Center"
                                ToolTip="Increase or decrease the step size tenfold">
                        <Button Margin="1"
                                Command="{Binding Path=CoarseStepIncreaseCommand}"
                                Content="increase"
                                MinWidth="30" />
                        <Button Margin="1"
                                Command="{Binding Path=CoarseStepDecreaseCommand}"
                                Content="decrease"
                                MinWidth="30" />
                    </StackPanel>
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        Visibility="{Binding PreImagingCalibrationCyclesVisibility}">
                <Label Content="Pre-Imaging Calibration Cycles"
                       VerticalAlignment="Center" />
                <TextBox Name="txtPreImagingCalibrationCycles"
                         Width="50"
                         Height="25"
                         Text="{Binding Path=PreImagingCalibrationCycles, Mode=TwoWay}"
                         ToolTip="Number of cycles to wait before we start imaging to allow mirrors to be in sync. Must be a multiple of 4."
                         VerticalAlignment="Center" />
                <Button Width="30"
                        Height="25"
                        Content="&#x2713;">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtPreImagingCalibrationCycles}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <StackPanel>
                    <RepeatButton Content="+"
                                  MinWidth="30"
                                  Command="{Binding Path=PreImagingCalibrationCyclesPlusCommand}"
                                  Delay="500"
                                  Interval="100" />
                    <RepeatButton Content="-"
                                  MinWidth="30"
                                  Command="{Binding Path=PreImagingCalibrationCyclesMinusCommand}"
                                  Delay="500"
                                  Interval="100" />
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        Visibility="{Binding ImagingRampExtensionCyclesVisibility}">
                <Label Content="Imaging Ramp Extension Cycles"
                       VerticalAlignment="Center" />
                <TextBox Name="txtImagingRampExtensionCycles"
                         Width="50"
                         Height="25"
                         Text="{Binding Path=ImagingRampExtensionCycles, Mode=TwoWay}"
                         ToolTip="Number of cycles to wait before we start imaging to allow mirrors to be in sync. Must be a multiple of 4."
                         VerticalAlignment="Center" />
                <Button Width="30"
                        Height="25"
                        Content="&#x2713;">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtImagingRampExtensionCycles}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <StackPanel>
                    <RepeatButton Content="+"
                                  MinWidth="30"
                                  Command="{Binding Path=ImagingRampExtensionCyclesPlusCommand}"
                                  Delay="500"
                                  Interval="100" />
                    <RepeatButton Content="-"
                                  MinWidth="30"
                                  Command="{Binding Path=ImagingRampExtensionCyclesMinusCommand}"
                                  Delay="500"
                                  Interval="100" />
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Margin="3"
                        Visibility="{Binding LSMImageDistortionCorrectionVisibility}">
                <CheckBox Content="Image Distortion Correction"
                          IsChecked="{Binding LSMImageDistortionCorrectionEnable}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        Visibility="{Binding LSMImageDistortionCorrectionVisibility}">
                <Label Content="LSM Calibration X-Angle Max"
                       VerticalAlignment="Center" />
                <TextBox Name="txtLSMImageDistortionCorrectionCalibrationXAngleMax"
                         Width="50"
                         Height="25"
                         Text="{Binding Path=LSMImageDistortionCorrectionCalibrationXAngleMax, Mode=TwoWay}"
                         ToolTip="Maximum X-angle for LSM calibration."
                         VerticalAlignment="Center" />
                <Button Width="30"
                        Height="25"
                        Content="&#x2713;">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtLSMImageDistortionCorrectionCalibrationXAngleMax}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <StackPanel>
                    <RepeatButton Content="+"
                                  MinWidth="30"
                                  Command="{Binding Path=LSMImageDistortionCorrectionCalibrationXAngleMaxPlusCommand}"
                                  Delay="500"
                                  Interval="100" />
                    <RepeatButton Content="-"
                                  MinWidth="30"
                                  Command="{Binding Path=LSMImageDistortionCorrectionCalibrationXAngleMaxMinusCommand}"
                                  Delay="500"
                                  Interval="100" />
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        Visibility="{Binding LSMImageDistortionCorrectionVisibility}">
                <Label Content="LSM Calibration Y-Angle Max"
                       VerticalAlignment="Center" />
                <TextBox Name="txtLSMImageDistortionCorrectionCalibrationYAngleMax"
                         Width="50"
                         Height="25"
                         Text="{Binding Path=LSMImageDistortionCorrectionCalibrationYAngleMax, Mode=TwoWay}"
                         ToolTip="Maximum Y-angle for LSM calibration."
                         VerticalAlignment="Center" />
                <Button Width="30"
                        Height="25"
                        Content="&#x2713;">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtLSMImageDistortionCorrectionCalibrationYAngleMax}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <StackPanel>
                    <RepeatButton Content="+"
                                  MinWidth="30"
                                  Command="{Binding Path=LSMImageDistortionCorrectionCalibrationYAngleMaxPlusCommand}"
                                  Delay="500"
                                  Interval="100" />
                    <RepeatButton Content="-"
                                  MinWidth="30"
                                  Command="{Binding Path=LSMImageDistortionCorrectionCalibrationYAngleMaxMinusCommand}"
                                  Delay="500"
                                  Interval="100" />
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        Visibility="{Binding LSMImageDistortionCorrectionVisibility}">
                <Label Content="LSM Calibration Angle In"
                       VerticalAlignment="Center" />
                <TextBox Name="txtLSMImageDistortionCorrectionCalibrationGalvoTiltAngle"
                         Width="50"
                         Height="25"
                         Text="{Binding Path=LSMImageDistortionCorrectionCalibrationGalvoTiltAngle, Mode=TwoWay}"
                         ToolTip="Galvo tilt angle for LSM calibration."
                         VerticalAlignment="Center" />
                <Button Width="30"
                        Height="25"
                        Content="&#x2713;">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtLSMImageDistortionCorrectionCalibrationGalvoTiltAngle}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <StackPanel>
                    <RepeatButton Content="+"
                                  MinWidth="30"
                                  Command="{Binding Path=LSMImageDistortionCorrectionCalibrationGalvoTiltAnglePlusCommand}"
                                  Delay="500"
                                  Interval="100" />
                    <RepeatButton Content="-"
                                  MinWidth="30"
                                  Command="{Binding Path=LSMImageDistortionCorrectionCalibrationGalvoTiltAngleMinusCommand}"
                                  Delay="500"
                                  Interval="100" />
                </StackPanel>
            </StackPanel>

            <StackPanel Name="spDwellTime"
                        HorizontalAlignment="Center"
                        Margin="1"
                        ToolTip="Pixel Dwell Time"
                        Visibility="{Binding Path=GGLSMScanVisibility,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center">
                    <Label Content="Pixel Dwell Time"
                           HorizontalContentAlignment="Center" />
                    <Label Name="lblDwellTime"
                           Foreground="White"
                           Content="{Binding Path=LSMPixelDwellTime, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                           ContentStringFormat="{}{0:0.00}" />
                    <Label Content="[us]"
                           Foreground="White" />
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding Path=PulsesPerPixelVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <Label Margin="10,0,0,0"
                               Content="Laser Pulses Per Pixel: " />
                        <Label Content="{Binding Path=NumberOfPulsesPerPixel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <RepeatButton Content="&#x27E8;"
                                  MinHeight="25"
                                  Command="{Binding Path=LSMDwellTimeMinusCommand}"
                                  IsEnabled="{Binding Path=DwellTimeSliderEnabled, UpdateSourceTrigger=PropertyChanged}" />
                    <Slider Name="slDwellTime"
                            IsSnapToTickEnabled="True"
                            TickFrequency="1"
                            Width="340"
                            VerticalAlignment="Center"
                            Minimum="{Binding Path=LSMPixelDwellTimeMinIndex, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="{Binding Path=LSMPixelDwellTimeMaxIndex, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            Value="{Binding Path=LSMPixelDwellTimeIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            PreviewMouseUp="slDwellTime_PreviewMouseUp"
                            GotMouseCapture="slDwellTime_GotMouseCapture"
                            IsEnabled="{Binding Path=DwellTimeSliderEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox IsChecked="{Binding Path=UpdateDwellTime, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                              Visibility="Collapsed" />
                    <RepeatButton Content="&#x27E9;"
                                  MinHeight="25"
                                  Command="{Binding Path=LSMDwellTimePlusCommand}"
                                  IsEnabled="{Binding Path=DwellTimeSliderEnabled, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        Visibility="{Binding LSMLineAveragingVisibility}">
                <CheckBox x:Name="CbLineAverating"
                          Content="Line Averaging"
                          VerticalAlignment="Center"
                          IsChecked="{Binding LSMLineAveragingEnable}" />
                <StackPanel Orientation="Horizontal"
                            IsEnabled="{Binding ElementName=CbLineAverating, Path=IsChecked}">
                    <TextBox Name="tbAverageLines"
                             Margin="1"
                             VerticalAlignment="Center"
                             Width="50"
                             Height="25"
                             Text="{Binding Path=LSMLineAveragingNumber, Mode=TwoWay}" />
                    <Button Width="30"
                            Height="25"
                            Content="&#x2713;">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbAverageLines}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <StackPanel>
                        <RepeatButton Content="+"
                                      Width="30"
                                      Height="20"
                                      Command="{Binding Path=AverageLineNumberPlusCommand}"
                                      Delay="500"
                                      Interval="100" />
                        <RepeatButton Content="-"
                                      Width="30"
                                      Height="20"
                                      Command="{Binding Path=AverageLineNumberMinusCommand}"
                                      Delay="500"
                                      Interval="100" />
                    </StackPanel>
                </StackPanel>
            </StackPanel>
            <StackPanel HorizontalAlignment="Center"
                        Orientation="Horizontal"
                        Margin="1"
                        ToolTip="Data averaging options">
                <StackPanel Orientation="Horizontal"
                            IsEnabled="{Binding ElementName=CbLineAverating, Path=IsChecked, Converter={StaticResource boolOppositeConverter}}">
                    <Label Content="Averaging Mode"
                           VerticalAlignment="Center" />
                    <ComboBox MinWidth="96"
                              Height="25"
                              SelectedIndex="{Binding Path=LSMSignalAverage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              IsEnabled="{Binding Path=LSMAverageEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBoxItem Content="None" />
                        <ComboBoxItem Content="Cumulative" />
                    </ComboBox>
                </StackPanel>
                <TextBox Name="tbLSMSignalAverageFrames"
                         Width="50"
                         Height="25"
                         Text="{Binding Path=LSMSignalAverageFrames, Mode=TwoWay}" />
                <Button Width="30"
                        Height="25"
                        Content="&#x2713;">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbLSMSignalAverageFrames}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <StackPanel>
                    <RepeatButton Content="+"
                                  Width="30"
                                  Height="20"
                                  Command="{Binding Path=AverageFramesPlusCommand}"
                                  Delay="500"
                                  Interval="100" />
                    <RepeatButton Content="-"
                                  Width="30"
                                  Height="20"
                                  Command="{Binding Path=AverageFramesMinusCommand}"
                                  Delay="500"
                                  Interval="100" />
                </StackPanel>
                <Label Content="[Frames]"
                       Height="25"
                       Foreground="White" />
                <Label Name="lblFPSAvg"
                       Focusable="True"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Width="51"
                       Content="{Binding Path=FramesPerSecondAverage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                       Foreground="White" />
            </StackPanel>
            <Border Name="signalAdvancedBorder">
                <Expander Name="signalAdvancedExpander"
                          Header="More"
                          Foreground="#FFFFFFFF"
                          IsExpanded="False"
                          Margin="9,1,0,1">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Left">
                            <Label Content="Input Range"
                                   Width="130"
                                   HorizontalContentAlignment="center" />
                            <Label Width="30"></Label>
                            <Label Content="Bandwidth"
                                   Width="70"
                                   Visibility="{Binding Path=PMTBandwidthLabelVisibility}" />
                            <Label Content="Output Offset"
                                   Margin="10,0,0,0"
                                   Visibility="{Binding Path=PMTOffsetLabelVisibility}" />
                            <Label Content="Polarity"
                                   Margin="10,0,0,0" />
                            <Label Content="{Binding Path=DigOffsetLabel, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   Margin="10,0,0,0"
                                   Visibility="{Binding Path=DigOffsetVisibility}" />
                        </StackPanel>
                        <StackPanel Name="spRangeA"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Left"
                                    Margin="1"
                                    Visibility="{Binding Path=IsChannelVisible[0], Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <Label Content="A"
                                   VerticalAlignment="Center" />
                            <StackPanel VerticalAlignment="Center">
                                <StackPanel Name="inputRange1sp"
                                            VerticalAlignment="Center"
                                            Orientation="Horizontal"
                                            Visibility="{Binding  Path=InputRangeMax, Converter={StaticResource inputRangeMaxToVisibilityConverter}, ConverterParameter=0}">
                                    <Slider Name="sliderInputRange1"
                                            ToolTip="Digitizer channel A input gain"
                                            VerticalAlignment="Center"
                                            Width="100"
                                            Value="{Binding  Path=InputRange[0].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeValConverter}}"
                                            Minimum="{Binding  Path=InputRangeMin, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeValConverter}}"
                                            Maximum="{Binding  Path=InputRangeMax, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeValConverter}}"
                                            TickFrequency="1"
                                            IsSnapToTickEnabled="True"
                                            IsDirectionReversed="True" />
                                    <Label Name="labelInputRange1"
                                           VerticalAlignment="Center"
                                           MinWidth="40"
                                           Content="{Binding Mode=OneWay, Path=InputRange[0].Value, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeConverter}}" />
                                </StackPanel>
                                <StackPanel VerticalAlignment="Center"
                                            Orientation="Horizontal"
                                            Visibility="{Binding  Path=InputRangeMax, Converter={StaticResource inputRangeMaxToVisibilityConverter}, ConverterParameter=1}">
                                    <Slider ToolTip="Digitizer channel A input gain"
                                            VerticalAlignment="Center"
                                            Width="100"
                                            Value="{Binding  Path=InputRange[0].Value, Mode=TwoWay}"
                                            Minimum="{Binding  Path=InputRangeMin, Mode=OneWay}"
                                            Maximum="{Binding  Path=InputRangeMax, Mode=OneWay}"
                                            TickFrequency="1"
                                            IsSnapToTickEnabled="True" />
                                    <Label VerticalAlignment="Center"
                                           MinWidth="40"
                                           Content="{Binding Mode=OneWay, Path=InputRange[0].Value, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeConverter2}}" />
                                </StackPanel>
                            </StackPanel>
                            <ComboBox Margin="1"
                                      ToolTip="PMT A Bandwidth"
                                      VerticalAlignment="Center"
                                      Visibility="{Binding Path=PmtBandwidthVisibility[0]}"
                                      MinWidth="70"
                                      SelectedItem="{Binding Path=Pmt1BandwidthSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ItemsSource="{Binding Path=BandwidthList[0]}">
                            </ComboBox>
                            <StackPanel Margin="3,1,1,1"
                                        Orientation="Horizontal"
                                        Visibility="{Binding Path=PMTOffsetVisibility[0]}">
                                <TextBox Name="tbPMT1Offset"
                                         MinWidth="40"
                                         VerticalAlignment="Center"
                                         Text="{Binding Path=PMTOffset[0].Value, Mode=TwoWay, StringFormat=F3}"
                                         ToolTip="Adjust offset horizontally" />
                                <Button Width="25"
                                        Height="25"
                                        Content="✓">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbPMT1Offset}"
                                                             Value="True">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Label Content="[V]"
                                       VerticalAlignment="Center" />
                                <StackPanel>
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=PMTOffsetPlusCommand}"
                                                  CommandParameter="0"
                                                  Content="+"
                                                  Delay="500"
                                                  Interval="100" />
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=PMTOffsetMinusCommand}"
                                                  CommandParameter="0"
                                                  Content="-"
                                                  Delay="500"
                                                  Interval="100" />
                                </StackPanel>
                            </StackPanel>
                            <StackPanel VerticalAlignment="Center">
                                <ComboBox MinWidth="50"
                                          SelectedIndex="{Binding Path=PMTPolarity[0].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem Content="Neg" />
                                    <ComboBoxItem Content="Pos" />
                                    <ComboBoxItem Content="Bi"
                                                  Visibility="{Binding Path=BipolarityVisibility, UpdateSourceTrigger=PropertyChanged}" />
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Margin="10,1,1,1"
                                        Orientation="Horizontal"
                                        Visibility="{Binding Path=ChanDigOffsetVisibility[0]}">
                                <TextBox Name="tbChan1DigOffset"
                                         MinWidth="40"
                                         VerticalAlignment="Center"
                                         Text="{Binding Path= ChanDigOffset[0].Value, Mode=TwoWay}"
                                         ToolTip="Adjust offset horizontally" />
                                <Button Width="25"
                                        Height="25"
                                        Content="✓">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbChan1DigOffset}"
                                                             Value="True">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <StackPanel>
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=ChanDigOffsetPlusCommand}"
                                                  CommandParameter="0"
                                                  Content="+"
                                                  Delay="500"
                                                  Interval="100" />
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=ChanDigOffsetMinusCommand}"
                                                  CommandParameter="0"
                                                  Content="-"
                                                  Delay="500"
                                                  Interval="100" />
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Name="spRangeB"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Left"
                                    Margin="1"
                                    Visibility="{Binding Path=IsChannelVisible[1], Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <Label Content="B"
                                   VerticalAlignment="Center" />
                            <StackPanel VerticalAlignment="Center">
                                <StackPanel Name="inputRange2sp"
                                            VerticalAlignment="Center"
                                            Orientation="Horizontal"
                                            Visibility="{Binding  Path=InputRangeMax, Converter={StaticResource inputRangeMaxToVisibilityConverter}, ConverterParameter=0}">
                                    <Slider Name="sliderInputRange2"
                                            ToolTip="Digitizer channel B input gain"
                                            VerticalAlignment="Center"
                                            Width="100"
                                            Value="{Binding  Path=InputRange[1].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeValConverter}}"
                                            Minimum="{Binding  Path=InputRangeMin, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeValConverter}}"
                                            Maximum="{Binding  Path=InputRangeMax, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeValConverter}}"
                                            TickFrequency="1"
                                            IsSnapToTickEnabled="True"
                                            IsDirectionReversed="True" />
                                    <Label Name="labelInputRange2"
                                           VerticalAlignment="Center"
                                           MinWidth="40"
                                           Content="{Binding Mode=OneWay, Path=InputRange[1].Value, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeConverter}}" />
                                </StackPanel>
                                <StackPanel VerticalAlignment="Center"
                                            Orientation="Horizontal"
                                            Visibility="{Binding  Path=InputRangeMax, Converter={StaticResource inputRangeMaxToVisibilityConverter}, ConverterParameter=1}">
                                    <Slider ToolTip="Digitizer channel B input gain"
                                            VerticalAlignment="Center"
                                            Width="100"
                                            Value="{Binding  Path=InputRange[1].Value, Mode=TwoWay}"
                                            Minimum="{Binding  Path=InputRangeMin, Mode=OneWay}"
                                            Maximum="{Binding  Path=InputRangeMax, Mode=OneWay}"
                                            TickFrequency="1"
                                            IsSnapToTickEnabled="True" />
                                    <Label VerticalAlignment="Center"
                                           MinWidth="40"
                                           Content="{Binding Mode=OneWay, Path=InputRange[1].Value, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeConverter2}}" />
                                </StackPanel>
                            </StackPanel>
                            <ComboBox Margin="1"
                                      ToolTip="PMT B Bandwidth"
                                      VerticalAlignment="Center"
                                      Visibility="{Binding Path=PmtBandwidthVisibility[1]}"
                                      MinWidth="70"
                                      SelectedItem="{Binding Path=Pmt2BandwidthSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ItemsSource="{Binding Path=BandwidthList[1]}">
                            </ComboBox>
                            <StackPanel Margin="3,1,1,1"
                                        Orientation="Horizontal"
                                        Visibility="{Binding Path=PMTOffsetVisibility[1]}">
                                <TextBox Name="tbPMT2Offset"
                                         MinWidth="40"
                                         VerticalAlignment="Center"
                                         Text="{Binding Path=PMTOffset[1].Value, Mode=TwoWay, StringFormat=F3}"
                                         ToolTip="Adjust offset horizontally" />
                                <Button Width="25"
                                        Height="25"
                                        Content="✓">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbPMT2Offset}"
                                                             Value="True">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Label Content="[V]"
                                       VerticalAlignment="Center" />
                                <StackPanel>
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=PMTOffsetPlusCommand}"
                                                  CommandParameter="1"
                                                  Content="+"
                                                  Delay="500"
                                                  Interval="100" />
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=PMTOffsetMinusCommand}"
                                                  CommandParameter="1"
                                                  Content="-"
                                                  Delay="500"
                                                  Interval="100" />
                                </StackPanel>
                            </StackPanel>
                            <StackPanel VerticalAlignment="Center">
                                <ComboBox MinWidth="50"
                                          SelectedIndex="{Binding Path=PMTPolarity[1].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem Content="Neg" />
                                    <ComboBoxItem Content="Pos" />
                                    <ComboBoxItem Content="Bi"
                                                  Visibility="{Binding Path=BipolarityVisibility, UpdateSourceTrigger=PropertyChanged}" />
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Margin="10,1,1,1"
                                        Orientation="Horizontal"
                                        Visibility="{Binding Path=ChanDigOffsetVisibility[1]}">
                                <TextBox Name="tbChan2DigOffset"
                                         MinWidth="40"
                                         VerticalAlignment="Center"
                                         Text="{Binding Path=ChanDigOffset[1].Value, Mode=TwoWay}"
                                         ToolTip="Adjust offset horizontally" />
                                <Button Width="25"
                                        Height="25"
                                        Content="✓">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbChan2DigOffset}"
                                                             Value="True">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <StackPanel>
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=ChanDigOffsetPlusCommand}"
                                                  CommandParameter="1"
                                                  Content="+"
                                                  Delay="500"
                                                  Interval="100" />
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=ChanDigOffsetMinusCommand}"
                                                  CommandParameter="1"
                                                  Content="-"
                                                  Delay="500"
                                                  Interval="100" />
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Name="spRangeC"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Left"
                                    Margin="1"
                                    Visibility="{Binding Path=IsChannelVisible[2], Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <Label Content="C"
                                   VerticalAlignment="Center" />
                            <StackPanel VerticalAlignment="Center">
                                <StackPanel Name="inputRange3sp"
                                            VerticalAlignment="Center"
                                            Orientation="Horizontal"
                                            Visibility="{Binding  Path=InputRangeMax, Converter={StaticResource inputRangeMaxToVisibilityConverter}, ConverterParameter=0}">
                                    <Slider Name="sliderInputRange3"
                                            ToolTip="Digitizer channel C input gain"
                                            VerticalAlignment="Center"
                                            Width="100"
                                            Value="{Binding  Path=InputRange[2].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeValConverter}}"
                                            Minimum="{Binding  Path=InputRangeMin, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeValConverter}}"
                                            Maximum="{Binding  Path=InputRangeMax, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeValConverter}}"
                                            TickFrequency="1"
                                            IsSnapToTickEnabled="True"
                                            IsDirectionReversed="True" />
                                    <Label Name="labelInputRange3"
                                           VerticalAlignment="Center"
                                           MinWidth="40"
                                           Content="{Binding Mode=OneWay, Path=InputRange[2].Value, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeConverter}}" />
                                </StackPanel>
                                <StackPanel VerticalAlignment="Center"
                                            Orientation="Horizontal"
                                            Visibility="{Binding  Path=InputRangeMax, Converter={StaticResource inputRangeMaxToVisibilityConverter}, ConverterParameter=1}">
                                    <Slider ToolTip="Digitizer channel C input gain"
                                            VerticalAlignment="Center"
                                            Width="100"
                                            Value="{Binding  Path=InputRange[2].Value, Mode=TwoWay}"
                                            Minimum="{Binding  Path=InputRangeMin, Mode=OneWay}"
                                            Maximum="{Binding  Path=InputRangeMax, Mode=OneWay}"
                                            TickFrequency="1"
                                            IsSnapToTickEnabled="True" />
                                    <Label VerticalAlignment="Center"
                                           MinWidth="40"
                                           Content="{Binding Mode=OneWay, Path=InputRange[2].Value, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeConverter2}}" />
                                </StackPanel>
                            </StackPanel>
                            <ComboBox Margin="1"
                                      ToolTip="PMT C Bandwidth"
                                      VerticalAlignment="Center"
                                      Visibility="{Binding Path=PmtBandwidthVisibility[2]}"
                                      MinWidth="70"
                                      SelectedItem="{Binding Path=Pmt3BandwidthSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ItemsSource="{Binding Path=BandwidthList[2]}">
                            </ComboBox>
                            <StackPanel Margin="3,1,1,1"
                                        Orientation="Horizontal"
                                        Visibility="{Binding Path=PMTOffsetVisibility[2]}">
                                <TextBox Name="tbPMT3Offset"
                                         MinWidth="40"
                                         VerticalAlignment="Center"
                                         Text="{Binding Path=PMTOffset[2].Value, Mode=TwoWay, StringFormat=F3}"
                                         ToolTip="Adjust offset horizontally" />
                                <Button Width="25"
                                        Height="25"
                                        Content="✓">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbPMT3Offset}"
                                                             Value="True">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Label Content="[V]"
                                       VerticalAlignment="Center" />
                                <StackPanel>
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=PMTOffsetPlusCommand}"
                                                  CommandParameter="2"
                                                  Content="+"
                                                  Delay="500"
                                                  Interval="100" />
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=PMTOffsetMinusCommand}"
                                                  CommandParameter="2"
                                                  Content="-"
                                                  Delay="500"
                                                  Interval="100" />
                                </StackPanel>
                            </StackPanel>
                            <StackPanel VerticalAlignment="Center">
                                <ComboBox MinWidth="50"
                                          SelectedIndex="{Binding Path=PMTPolarity[2].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem Content="Neg" />
                                    <ComboBoxItem Content="Pos" />
                                    <ComboBoxItem Content="Bi"
                                                  Visibility="{Binding Path=BipolarityVisibility, UpdateSourceTrigger=PropertyChanged}" />
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Margin="10,1,1,1"
                                        Orientation="Horizontal"
                                        Visibility="{Binding Path=ChanDigOffsetVisibility[2]}">
                                <TextBox Name="tbChan3DigOffset"
                                         MinWidth="40"
                                         VerticalAlignment="Center"
                                         Text="{Binding Path=ChanDigOffset[2].Value, Mode=TwoWay}"
                                         ToolTip="Adjust offset horizontally" />
                                <Button Width="25"
                                        Height="25"
                                        Content="✓">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbChan3DigOffset}"
                                                             Value="True">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <StackPanel>
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=ChanDigOffsetPlusCommand}"
                                                  CommandParameter="2"
                                                  Content="+"
                                                  Delay="500"
                                                  Interval="100" />
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=ChanDigOffsetMinusCommand}"
                                                  CommandParameter="2"
                                                  Content="-"
                                                  Delay="500"
                                                  Interval="100" />
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Name="spRangeD"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="left"
                                    Margin="1"
                                    Visibility="{Binding Path=IsChannelVisible[3], Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <Label Content="D"
                                   VerticalAlignment="Center" />
                            <StackPanel VerticalAlignment="Center">
                                <StackPanel Name="inputRange4sp"
                                            VerticalAlignment="Center"
                                            Orientation="Horizontal"
                                            Visibility="{Binding  Path=InputRangeMax, Converter={StaticResource inputRangeMaxToVisibilityConverter}, ConverterParameter=0}">
                                    <Slider Name="sliderInputRange4"
                                            ToolTip="Digitizer channel D input gain"
                                            VerticalAlignment="Center"
                                            Width="100"
                                            Value="{Binding  Path=InputRange[3].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeValConverter}}"
                                            Minimum="{Binding  Path=InputRangeMin, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeValConverter}}"
                                            Maximum="{Binding  Path=InputRangeMax, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeValConverter}}"
                                            TickFrequency="1"
                                            IsSnapToTickEnabled="True"
                                            IsDirectionReversed="True" />
                                    <Label Name="labelInputRange4"
                                           VerticalAlignment="Center"
                                           MinWidth="40"
                                           Content="{Binding Mode=OneWay, Path=InputRange[3].Value, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeConverter}}" />
                                </StackPanel>
                                <StackPanel VerticalAlignment="Center"
                                            Orientation="Horizontal"
                                            Visibility="{Binding  Path=InputRangeMax, Converter={StaticResource inputRangeMaxToVisibilityConverter}, ConverterParameter=1}">
                                    <Slider ToolTip="Digitizer channel D input gain"
                                            VerticalAlignment="Center"
                                            Width="100"
                                            Value="{Binding  Path=InputRange[3].Value, Mode=TwoWay}"
                                            Minimum="{Binding  Path=InputRangeMin, Mode=OneWay}"
                                            Maximum="{Binding  Path=InputRangeMax, Mode=OneWay}"
                                            TickFrequency="1"
                                            IsSnapToTickEnabled="True" />
                                    <Label VerticalAlignment="Center"
                                           MinWidth="40"
                                           Content="{Binding Mode=OneWay, Path=InputRange[3].Value, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource inputRangeConverter2}}" />
                                </StackPanel>
                            </StackPanel>
                            <ComboBox Margin="1"
                                      ToolTip="PMT D Bandwidth"
                                      VerticalAlignment="Center"
                                      Visibility="{Binding Path=PmtBandwidthVisibility[3]}"
                                      MinWidth="70"
                                      SelectedItem="{Binding Path=Pmt4BandwidthSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ItemsSource="{Binding Path=BandwidthList[3]}">
                            </ComboBox>
                            <StackPanel Margin="3,1,1,1"
                                        Orientation="Horizontal"
                                        Visibility="{Binding Path=PMTOffsetVisibility[3]}">
                                <TextBox Name="tbPMT4Offset"
                                         MinWidth="40"
                                         VerticalAlignment="Center"
                                         Text="{Binding Path=PMTOffset[3].Value, Mode=TwoWay, StringFormat=F3}"
                                         ToolTip="Adjust offset horizontally" />
                                <Button Width="25"
                                        Height="25"
                                        Content="✓">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbPMT4Offset}"
                                                             Value="True">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Label Content="[V]"
                                       VerticalAlignment="Center" />
                                <StackPanel>
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=PMTOffsetPlusCommand}"
                                                  CommandParameter="3"
                                                  Content="+"
                                                  Delay="500"
                                                  Interval="100" />
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=PMTOffsetMinusCommand}"
                                                  CommandParameter="3"
                                                  Content="-"
                                                  Delay="500"
                                                  Interval="100" />
                                </StackPanel>
                            </StackPanel>
                            <StackPanel VerticalAlignment="Center">
                                <ComboBox MinWidth="50"
                                          SelectedIndex="{Binding Path=PMTPolarity[3].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem Content="Neg" />
                                    <ComboBoxItem Content="Pos" />
                                    <ComboBoxItem Content="Bi"
                                                  Visibility="{Binding Path=BipolarityVisibility, UpdateSourceTrigger=PropertyChanged}" />
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Margin="10,1,1,1"
                                        Orientation="Horizontal"
                                        Visibility="{Binding Path=ChanDigOffsetVisibility[3]}">
                                <TextBox Name="tbChan4DigOffset"
                                         MinWidth="40"
                                         VerticalAlignment="Center"
                                         Text="{Binding Path=ChanDigOffset[3].Value, Mode=TwoWay}"
                                         ToolTip="Adjust offset horizontally" />
                                <Button Width="25"
                                        Height="25"
                                        Content="✓">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbChan4DigOffset}"
                                                             Value="True">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <StackPanel>
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=ChanDigOffsetPlusCommand}"
                                                  CommandParameter="3"
                                                  Content="+"
                                                  Delay="500"
                                                  Interval="100" />
                                    <RepeatButton Width="20"
                                                  Height="20"
                                                  Command="{Binding Path=ChanDigOffsetMinusCommand}"
                                                  CommandParameter="3"
                                                  Content="-"
                                                  Delay="500"
                                                  Interval="100" />
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Height="28"
                                    Name="spGRScanOptions"
                                    Orientation="Horizontal"
                                    Visibility="{Binding Path=GRLSMScanVisibility,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                            <CheckBox Content="Realtime Averaging"
                                      Margin="1"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      ToolTip="Realtime averaging enable"
                                      VerticalContentAlignment="Center"
                                      IsChecked="{Binding Path=LSMRealtimeAveraging, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    Visibility="{Binding Path=LSMPulseMultiplexingVisibility}">
                            <CheckBox Content="Pulse Multiplexing"
                                      Margin="1,1,10,1"
                                      ToolTip="Pulse Multiplexing"
                                      VerticalAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      IsChecked="{Binding Path=LSMPulseMultiplexing, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                        <StackPanel IsEnabled="{Binding Path=LsmClkPnlEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Left"
                                    Margin="1">
                            <CheckBox Name="ckExternalTrigger"
                                      Margin="0,0,10,0"
                                      Content="External Trigger"
                                      IsChecked="{Binding Path=LSMClockSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      ToolTip="Optionally supply acquisition triggers externally"
                                      VerticalAlignment="Center" />
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Clock Rate[MHz]"
                                       VerticalAlignment="Center" />
                                <TextBox Name="tbLSMExtClockRate"
                                         Width="65"
                                         Height="25"
                                         Text="{Binding Path=LSMExtClockRate, Mode=TwoWay, Converter={StaticResource doubleCulture}}"
                                         ToolTip="External pulse train clock rate in MHz"
                                         VerticalAlignment="Center" />
                                <Button Width="30"
                                        Content="&#x2713;">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbLSMExtClockRate}"
                                                             Value="True">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    Visibility="{Binding Path=LSMPhaseAdjusmentVisibility}">
                            <Label Content="Phase Adjustment %" />
                            <TextBox Name="tbExternalPulsePhase"
                                     Width="50"
                                     Height="25"
                                     Text="{Binding Path=LSMExternalClockPhaseOffset, Mode=TwoWay, Converter={StaticResource doubleCulture}}"
                                     ToolTip="Phase as a percentage of repetition rate"
                                     VerticalAlignment="Center"
                                     IsEnabled="{Binding Path=LSMClockSource, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Button Width="30"
                                    Content="&#x2713;">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbExternalPulsePhase}"
                                                         Value="True">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                        <DockPanel>
                            <Label Content="Flyback Cycles"
                                   VerticalAlignment="Center" />
                            <TextBox Name="tbFlybackCycles"
                                     Width="50"
                                     Height="25"
                                     Text="{Binding Path=LSMFlybackCycles, Mode=TwoWay}"
                                     ToolTip="Number of forward and backward line cycles for the flyback"
                                     VerticalAlignment="Center"
                                     IsEnabled="{Binding UseFastestSettingForFlybackCycles, Converter={StaticResource boolOppositeConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Button Width="30"
                                    Height="25"
                                    Content="&#x2713;">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbFlybackCycles}"
                                                         Value="True">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <StackPanel>
                                <RepeatButton Content="+"
                                              MinWidth="30"
                                              Command="{Binding Path=FlybackCyclesPlusCommand}"
                                              Delay="500"
                                              Interval="100"
                                              IsEnabled="{Binding UseFastestSettingForFlybackCycles, Converter={StaticResource boolOppositeConverter}, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                                <RepeatButton Content="-"
                                              MinWidth="30"
                                              Command="{Binding Path=FlybackCyclesMinusCommand}"
                                              Delay="500"
                                              Interval="100"
                                              IsEnabled="{Binding UseFastestSettingForFlybackCycles, Converter={StaticResource boolOppositeConverter},  Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                            <Label Content="{Binding Path=LSMFlybackTime}"
                                   VerticalAlignment="Center" />
                            <Label Content="[s]"
                                   VerticalAlignment="Center" />
                            <CheckBox Content="Always Use Fastest"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding UseFastestSettingForFlybackCycles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      IsEnabled="{Binding Path=UseFastestFlybackEnabled, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                        <StackPanel HorizontalAlignment="Left"
                                    Orientation="Horizontal"
                                    Visibility="{Binding Path=LSMImageOnFlybackVisibility}"
                                    Margin="0,1"
                                    ToolTip="research0">
                            <CheckBox Content="Image On Flyback"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding LSMImageOnFlyback, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                        <StackPanel  Orientation="Horizontal"
                                     Margin="0,1"
                                     HorizontalAlignment="Left"
                                     Visibility="{Binding Path=TurnAroundOptionVisibility}"
                                     ToolTip="Default microseconds to use as a starting value. Software will recalculate the turnaround based on this value.">
                            <Label Content="Turn Around Time"
                                   VerticalAlignment="Center" />
                            <TextBox Name="tbTurnAroundTime"
                                     Width="50"
                                     Height="25"
                                     Text="{Binding Path=TurnAroundTimeUS, Mode=TwoWay}"
                                     VerticalAlignment="Center" />
                            <Button Width="30"
                                    Height="25"
                                    Content="&#x2713;">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbTurnAroundTime}"
                                                         Value="True">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Label Content="[us]"
                                   VerticalAlignment="Center" />
                        </StackPanel>
                        <StackPanel HorizontalAlignment="Left"
                                    Orientation="Horizontal"
                                    Margin="0,1"
                                    ToolTip="Pixel processing mode"
                                    Visibility="{Binding Path=FastOneWayImagingModeEnableVisibility}">
                            <CheckBox Content="Fast One-Way Imaging"
                                      IsChecked="{Binding LSMFastOneWayImagingModeEnable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                        <StackPanel HorizontalAlignment="Left"
                                    Orientation="Horizontal"
                                    Margin="0,1"
                                    ToolTip="Pixel processing mode"
                                    Visibility="{Binding Path=LSMPixelProcessVisibility}">
                            <Label Content="Pixel Processing Mode"
                                   VerticalAlignment="Center" />
                            <ComboBox MinWidth="80"
                                      Height="25"
                                      SelectedIndex="{Binding Path=LSMPixelProcess, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBoxItem Content="Sum" />
                                <ComboBoxItem Content="Average" />
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    Visibility="{Binding Path=DisplayedCRSFrequencyVisibility}"
                                    Margin="0,0">
                            <Label Content="CRS Frequency:"
                                   VerticalAlignment="Center" />
                            <Label Height="25"
                                   Content="{Binding Path=DisplayedCRSFrequency}"
                                   ToolTip="Current Resonant Scanner Frequency"
                                   VerticalAlignment="Center" />
                        </StackPanel>
                        <StackPanel HorizontalAlignment="Left"
                                    Orientation="Horizontal"
                                    Margin="0,1"
                                    ToolTip="research0">
                            <CheckBox Content="Moving Average Filter"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding MovingAvarageFilterEnable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>
                    </StackPanel>
                </Expander>
            </Border>
        </StackPanel>
    </Grid>
</UserControl>
