<UserControl x:Class="PowerControl.PowerControlUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:RSlider="clr-namespace:RangeSliderWPF;assembly=RangeSliderWPF"
             xmlns:Valid="clr-namespace:Validations;assembly=Validations"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:pc="clr-namespace:PowerControl"
             xmlns:ts="clr-namespace:ThorSharedTypes;assembly=ThorSharedTypes"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <pc:BooleanToVisibilityConverter x:Key="VisibilityOfBool" />
            <pc:PowerModeToVisibility x:Key="powerModeToVis" />
            <ts:DoubleScaledCultureConverter x:Key="doubleCultureUnitConverter" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ThemeControl;component/ThorStyleDark.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot">
        <StackPanel Orientation="Horizontal"
                    Margin="3">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Row="0"
                            Grid.Column="1"
                            Grid.RowSpan="2"
                            VerticalAlignment="Top"
                            Margin="1">
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Center">
                        <Label Content="Power Level "
                               HorizontalAlignment="Center"
                               Foreground="White"
                               VerticalAlignment="Center" />
                        <Label Content="{Binding Path=Power, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               HorizontalAlignment="Center"
                               Foreground="White"
                               Width="85"
                               VerticalAlignment="Center" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Center"
                                Margin="1">
                        <TextBox Text="{Binding Path=PowerGo, Mode=TwoWay, StringFormat={}{0.0000}, FallbackValue=0.00, UpdateSourceTrigger=PropertyChanged}"
                                 ToolTip="Enter the power value to go to"
                                 Width="50"
                                 VerticalAlignment="Center"
                                 Valid:Validation.ValidationType="{x:Type System:Double}"
                                 Valid:Validation.NoEmptyValue="False"
                                 Valid:Validation.MinValue="0.0"
                                 Valid:Validation.MaxValue="100.0" />
                        <Button Content="Go"
                                ToolTip="Command to set the Power"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Command="{Binding Path=SetPowerCommand}"
                                CommandParameter="{Binding Path=PCTabIndex}"
                                MinWidth="50"
                                Margin="1"></Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Center"
                                Margin="1"
                                Visibility="{Binding Path=PowerStepSizeVisibility}">
                        <Label Height="25"
                               Content="Slider Step Size"
                               Foreground="White" />
                        <TextBox Name="txtStepSize"
                                 Width="50"
                                 Height="20"
                                 VerticalAlignment="Center"
                                 VerticalContentAlignment="Center"
                                 Text="{Binding Path=PowerStepSize,
                                                Mode=TwoWay,
                                                FallbackValue=1.0}"
                                 ToolTip="Enter the StepSize value" />
                        <Button Width="30"
                                Height="25"
                                Content="✓">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtStepSize}"
                                                     Value="True">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <StackPanel VerticalAlignment="Center"
                                    ToolTip="Select slider step type">
                            <Button Name="rbCoarse"
                                    Margin="1"
                                    Command="{Binding Path=StepCoarseCommand}"
                                    CommandParameter="{Binding Path=PCTabIndex}"
                                    Content="increase"
                                    MinWidth="30" />
                            <Button Name="rbFine"
                                    Margin="1"
                                    Command="{Binding Path=StepFineCommand}"
                                    CommandParameter="{Binding Path=PCTabIndex}"
                                    Content="decrease"
                                    MinWidth="30" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Visibility="{Binding Path=MaskAndBlankingVisibility}">
                        <StackPanel Orientation="Horizontal"
                                    Margin="1">
                            <Label Content="Line Blanking "
                                   HorizontalAlignment="Center"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   Width="110" />
                            <TextBox Name="tbPockelsBlank0"
                                     ToolTip="Enter the percentage (per side) of line scan to blank"
                                     Width="60"
                                     VerticalAlignment="Center"
                                     Text="{Binding Path=PockelsBlankPercentage, Mode=TwoWay}"
                                     Valid:Validation.ValidationType="{x:Type System:Int32}"
                                     Valid:Validation.MinValue="0"
                                     Valid:Validation.MaxValue="49" />
                            <Button Width="25"
                                    Height="25"
                                    Content="&#x2713;">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbPockelsBlank0}"
                                                         Value="True">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Label Content="%"
                                   HorizontalAlignment="Center"
                                   Foreground="White"
                                   VerticalAlignment="Center" />
                        </StackPanel>
                        <StackPanel Margin="1"
                                    Name="PockelsMaskOptionControl"
                                    Visibility="{Binding Path=PockelsMaskOptionsAvailable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
														 ConverterParameter=False, Converter={StaticResource VisibilityOfBool}}">
                            <StackPanel Orientation="Horizontal">

                                <CheckBox Content="Enable Mask"
                                          Margin="1"
                                          Name="cbMaskEnable"
                                          Foreground="White"
                                          IsChecked="{Binding Path=EnablePockelsMask, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <CheckBox Content="Invert Mask"
                                          Margin="10,1,1,1"
                                          Foreground="White"
                                          IsEnabled="{Binding Path=cbMaskEnable, ElementName=IsChecked}"
                                          IsChecked="{Binding Path=PockelsMaskInvert, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                            <Button Content="Update to ROI Mask"
                                    Name="UpdateROIButton"
                                    HorizontalAlignment="Left"
                                    Command="{Binding Path=UpdatePockelsMaskToROIMaskCommand}"
                                    Margin="1" />
                            <StackPanel Orientation="Horizontal"
                                        Margin="1">
                                <TextBox Text="{Binding Path=PockelsMaskFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         Width="195"
                                         ToolTip="{Binding Path=PockelsMaskFile, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <Button Content="Select"
                                        MinWidth="50"
                                        Command="{Binding Path=SelectPockelsMaskCommand}" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"
                                Margin="1">
                        <Label Content="Ramping Mode"
                               Foreground="White"
                               Width="110" />
                        <ComboBox VerticalAlignment="Center"
                                  ToolTip="Power adjustment for Z stack"
                                  SelectedIndex="{Binding Path=PowerMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Width="100"
                                  Margin="1">
                            <ComboBoxItem>None</ComboBoxItem>
                            <ComboBoxItem>Custom</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"
                                Visibility="{Binding Path=PowerMode,Converter={StaticResource powerModeToVis}}">
                        <ListBox Width="150"
                                 HorizontalAlignment="Left"
                                 Height="85"
                                 ItemsSource="{Binding Path=PowerRampsCustom, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                 SelectedIndex="{Binding Path=PowerRampSelected,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ListBox.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}">SteelBlue</SolidColorBrush>
                            </ListBox.Resources>
                        </ListBox>
                        <StackPanel>
                            <Button Content="Edit"
                                    Margin="1"
                                    Command="{Binding Path=PowerRampEditCommand}"
                                    CommandParameter="{Binding Path=PCTabIndex}"
                                    MinWidth="50" />
                            <Button Content="Add"
                                    Margin="1"
                                    Command="{Binding Path=PowerRampAddCommand}"
                                    CommandParameter="{Binding Path=PCTabIndex}"
                                    MinWidth="50" />
                            <Button Content="Delete"
                                    Margin="1"
                                    Command="{Binding Path=PowerRampDeleteCommand}"
                                    CommandParameter="{Binding Path=PCTabIndex}"
                                    MinWidth="50" />
                        </StackPanel>
                    </StackPanel>

                </StackPanel>
                <StackPanel Grid.RowSpan="2"
                            Margin="1">
                    <TextBox  HorizontalAlignment="Left"
                              Margin="15,0,0,0"
                              VerticalAlignment="Top"
                              ToolTip="Max Power value"
                              Width="36"
                              Height="20"
                              Text="{Binding Path=PowerMax, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                              TextWrapping="Wrap"
                              IsReadOnly="true" />
                    <DockPanel>
                        <StackPanel Width="55"
                                    DockPanel.Dock="Left">
                            <RSlider:FormattedSlider Value="{Binding Path=Power, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                                     Minimum="{Binding Path=PowerMin, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                     Maximum="{Binding Path=PowerMax, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                     TickPlacement="None"
                                                     AutoToolTipPlacement="BottomRight"
                                                     Margin="1"
                                                     Orientation="Vertical"
                                                     Height="150"
                                                     Width="Auto"
                                                     ToolTip="Adjust laser power"
                                                     HorizontalAlignment="Left"
                                                     TickFrequency="1"
                                                     MouseWheel="FormattedSlider_MouseWheel"
                                                     Thumb.DragCompleted="FormattedSlider_DragCompleted"
                                                     Thumb.DragStarted="FormattedSlider_DragStarted">
                                <RSlider:FormattedSlider.RenderTransform>
                                    <ScaleTransform ScaleX="3.0"
                                                    ScaleY="1.0" />
                                </RSlider:FormattedSlider.RenderTransform>
                                <RSlider:FormattedSlider.Background>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="White"
                                                          Offset="0" />
                                            <GradientStop Color="Transparent"
                                                          Offset="{Binding Path=PowerThreshold}" />
                                            <GradientStop Color="Transparent"
                                                          Offset="{Binding Path=PowerThreshold}" />
                                            <GradientStop Color="Red"
                                                          Offset="{Binding Path=PowerThreshold}" />
                                            <GradientStop Color="Red"
                                                          Offset="1" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </RSlider:FormattedSlider.Background>
                            </RSlider:FormattedSlider>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Right"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center">
                            <StackPanel Orientation="Vertical">
                                <RepeatButton Content="+"
                                              Width="30"
                                              Height="20"
                                              Command="{Binding Path=PowerPlusCommand}"
                                              CommandParameter="{Binding Path=PCTabIndex}"
                                              Delay="500"
                                              Interval="100" />
                                <RepeatButton Content="-"
                                              Width="30"
                                              Height="20"
                                              Command="{Binding Path=PowerMinusCommand}"
                                              CommandParameter="{Binding Path=PCTabIndex}"
                                              Delay="500"
                                              Interval="100" />
                            </StackPanel>
                        </StackPanel>
                    </DockPanel>
                    <TextBox HorizontalAlignment="Left"
                             Margin="15,0,0,0"
                             VerticalAlignment="Bottom"
                             ToolTip="Min Power value"
                             Width="36"
                             Height="20"
                             Text="{Binding Path=PowerMin, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                             TextWrapping="Wrap"
                             IsReadOnly="true" />
                </StackPanel>
                <Border Grid.Row="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Visibility="{Binding Path=PockelsCalibrationVisibility}">
                    <Expander Name="CalibrationExpander"
                              Foreground="White">
                        <Expander.Header>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Calibration"
                                       Foreground="White" />
                                <StackPanel Orientation="Horizontal"
                                            Visibility="{Binding ElementName=CalibrationExpander, Path=IsExpanded, ConverterParameter=True, Converter={StaticResource VisibilityOfBool}}">
                                    <Label Content="Min:"
                                           Foreground="White"
                                           Margin="10,0,0,0" />
                                    <Label Content="{Binding Path=VoltageMin, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                           Foreground="White" />
                                    <Label Content="[V]"
                                           Foreground="White" />
                                    <Label Content="Max:"
                                           Foreground="White"
                                           Margin="10,0,0,0" />
                                    <Label Content="{Binding Path=VoltageMax, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                           Foreground="White" />
                                    <Label Content="[V]"
                                           Foreground="White" />
                                </StackPanel>
                            </StackPanel>
                        </Expander.Header>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="1">
                                        <Label Content="Min"
                                               Foreground="White"
                                               Width="35" />
                                        <TextBox Text="{Binding Path=VoltageMin,Mode=TwoWay, UpdateSourceTrigger=LostFocus,NotifyOnValidationError=True,ValidatesOnDataErrors=True}"
                                                 Valid:Validation.ValidationType="{x:Type System:Double}"
                                                 Valid:Validation.MinValue="-10"
                                                 Valid:Validation.MaxValue="10"
                                                 Valid:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                                 Width="50" />
                                        <Label Content="[V]"
                                               Foreground="White" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="1">
                                        <Label Content="Max"
                                               Foreground="White"
                                               Width="35" />
                                        <TextBox Text="{Binding Path=VoltageMax,Mode=TwoWay, UpdateSourceTrigger=LostFocus,NotifyOnValidationError=True,ValidatesOnDataErrors=True}"
                                                 Valid:Validation.ValidationType="{x:Type System:Double}"
                                                 Valid:Validation.MinValue="-10"
                                                 Valid:Validation.MaxValue="10"
                                                 Valid:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                                 Width="50" />
                                        <Label Content="[V]"
                                               Foreground="White" />
                                    </StackPanel>
                                </StackPanel>
                                <Button Content="Calibrate"
                                        Width="70"
                                        Height="30"
                                        Margin="1"
                                        IsEnabled="{Binding Path=PockelsCalibrateAgainEnable, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Command="{Binding Path=CalibrateCommand}"
                                        CommandParameter="{Binding Path=PCTabIndex}"></Button>

                            </StackPanel>
                            <StackPanel Orientation="Horizontal"
                                        Visibility="{Binding PockelsBlankingPhaseShiftPercentVisibility}">
                                <Label Content="Blanking Phase Shift"
                                       Width="110"
                                       HorizontalContentAlignment="Right" />
                                <TextBox Text="{Binding Path=PockelsBlankingPhaseShiftPercent,Mode=TwoWay, UpdateSourceTrigger=LostFocus,NotifyOnValidationError=True,ValidatesOnDataErrors=True}"
                                         Name="pockelsBlankingPhaseShiftPercentTxt"
                                         Valid:Validation.ValidationType="{x:Type System:Double}"
                                         Valid:Validation.MinValue="0"
                                         Valid:Validation.MaxValue="100"
                                         Valid:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                         Width="50" />
                                <Button Width="25"
                                        Height="25"
                                        Content="&#x2713;">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=pockelsBlankingPhaseShiftPercentTxt}"
                                                             Value="True">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Label Content="%" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal"
                                        Visibility="{Binding PockelsDelayVisibility}">
                                <Label Content="Pockels Line Delay"
                                       Width="110"
                                       HorizontalContentAlignment="Right" />
                                <TextBox Text="{Binding Path=PockelsDelayUS,Mode=TwoWay, UpdateSourceTrigger=LostFocus,NotifyOnValidationError=True,ValidatesOnDataErrors=True}"
                                         Name="pockelsLineDelayTxt"
                                         Valid:Validation.ValidationType="{x:Type System:Double}"
                                         Valid:Validation.MinValue="-200"
                                         Valid:Validation.MaxValue="200"
                                         Valid:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                         Width="50" />
                                <Button Width="25"
                                        Height="25"
                                        Content="&#x2713;">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=pockelsLineDelayTxt}"
                                                             Value="True">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <Label Content="µs" />
                            </StackPanel>
                        </StackPanel>
                    </Expander>
                </Border>
                <Border Grid.Row="3"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Visibility="{Binding Path=PowerRegCalibrationVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                    <Expander Name="CalibrationExpanderPowerReg"
                              Foreground="White">
                        <Expander.Header>
                            <StackPanel Orientation="Horizontal">
                                <Label Content="Zero Calibration"
                                       Foreground="White" />
                                <StackPanel Orientation="Horizontal"
                                            Visibility="{Binding Path=EncoderPositionVisibility}">
                                    <Label Content="Position:"
                                           Foreground="White"
                                           Margin="10,0,0,0" />
                                    <Label Content="{Binding Path=PowerRegEncoderPosition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                           Foreground="White" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal"
                                            Visibility="{Binding ElementName=CalibrationExpanderPowerReg, Path=IsExpanded, ConverterParameter=True, Converter={StaticResource VisibilityOfBool}}">
                                    <Label Content="Offset:"
                                           Foreground="White"
                                           Margin="10,0,0,0" />
                                    <Label Content="{Binding Path=PowerRegZero, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                           Foreground="White" />
                                </StackPanel>
                            </StackPanel>
                        </Expander.Header>
                        <StackPanel Margin="5">
                            <WrapPanel Orientation="Horizontal">
                                <Button Name="btnPRCal1"
                                        Content="{Binding Path=PowerRegCalName1, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="1"
                                        Command="{Binding Path=PowerRegCalCommand}"
                                        CommandParameter="1"
                                        MinWidth="50">
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Name="btnPRCalSave1"
                                                      Header="Save"
                                                      Command="{Binding Path=PowerRegCalSaveCommand}"
                                                      CommandParameter="1" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                                <Button Name="btnPRCal2"
                                        Content="{Binding Path=PowerRegCalName2, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="1"
                                        Command="{Binding Path=PowerRegCalCommand}"
                                        CommandParameter="2"
                                        MinWidth="50">
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Name="btnPRCalSave2"
                                                      Header="Save"
                                                      Command="{Binding Path=PowerRegCalSaveCommand}"
                                                      CommandParameter="2" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                                <Button Name="btnPRCal3"
                                        Content="{Binding Path=PowerRegCalName3, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="1"
                                        Command="{Binding Path=PowerRegCalCommand}"
                                        CommandParameter="3"
                                        MinWidth="50">
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Name="btnPRCalSave3"
                                                      Header="Save"
                                                      Command="{Binding Path=PowerRegCalSaveCommand}"
                                                      CommandParameter="3" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                                <Button Name="btnPRCal4"
                                        Content="{Binding Path=PowerRegCalName4, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="1"
                                        Command="{Binding Path=PowerRegCalCommand}"
                                        CommandParameter="4"
                                        MinWidth="50">
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Name="btnPRCalSave4"
                                                      Header="Save"
                                                      Command="{Binding Path=PowerRegCalSaveCommand}"
                                                      CommandParameter="4" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                                <Button Name="btnPRCal5"
                                        Content="{Binding Path=PowerRegCalName5, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="1"
                                        Command="{Binding Path=PowerRegCalCommand}"
                                        CommandParameter="5"
                                        MinWidth="50">
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Name="btnPRCalSave5"
                                                      Header="Save"
                                                      Command="{Binding Path=PowerRegCalSaveCommand}"
                                                      CommandParameter="5" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                                <Button Name="btnPRCal6"
                                        Content="{Binding Path=PowerRegCalName6, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Margin="1"
                                        Command="{Binding Path=PowerRegCalCommand}"
                                        CommandParameter="6"
                                        MinWidth="50">
                                    <Button.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Name="btnPRCalSave6"
                                                      Header="Save"
                                                      Command="{Binding Path=PowerRegCalSaveCommand}"
                                                      CommandParameter="6" />
                                        </ContextMenu>
                                    </Button.ContextMenu>
                                </Button>
                            </WrapPanel>
                        </StackPanel>
                    </Expander>
                </Border>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
