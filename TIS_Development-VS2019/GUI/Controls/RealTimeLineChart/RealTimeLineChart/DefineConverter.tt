<#@ template language="C#" hostspecific="True" debug="True" #>
<#@ output extension="cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>

<#
string input_file = this.Host.ResolvePath(@"..\..\..\..\Hardware\Devices\ThorRealTimeData\ThorRealTimeData\ConstDefinition.h");
StreamReader defines = new StreamReader(input_file);
#>
//------------------------------------------------------------------------------
//     This code was generated by template for T4 on <#=System.IO.Path.GetFileName(input_file)#>
//     Generated at <#=DateTime.Now#>
//------------------------------------------------------------------------------

namespace Constants
{
    public class ThorRealTimeData
    {
<#
    // constants definitions

    while (defines.Peek() >= 0)
    {
        string def = defines.ReadLine();
        string[] parts;
        if (def.Length > 3 && def.StartsWith("#define"))
        {
            parts = def.Split(null as char[], StringSplitOptions.RemoveEmptyEntries);
            try 
			{
				int iVal; 
				double dVal;
                if(Int32.TryParse(parts[2], out iVal))
				{
#>
		public const int <#=parts[1]#> = <#=parts[2]#>;
<#
				}
				else if(Double.TryParse(parts[2], out dVal))
				{
#>
		public const double <#=parts[1]#> = <#=parts[2]#>;
<#
				}
				else
				{
#>
		public const string <#=parts[1]#> = <#=parts[2]#>;
<#
				}
            }
            catch (FormatException e) 
			{
				Console.Write(e.Message);
#>
		public const string <#=parts[1]#> = "<#=parts[2]#>";
<#
            }
        }
    }#> 
    }
}