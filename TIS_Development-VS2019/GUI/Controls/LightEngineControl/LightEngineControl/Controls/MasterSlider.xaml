<UserControl x:Class="LightEngineControl.Controls.MasterSlider"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:LightEngineControl.Controls"
             xmlns:conv="clr-namespace:LightEngineControl.Converter"
             xmlns:sharedTypes="clr-namespace:ThorSharedTypes;assembly=ThorSharedTypes"
             xmlns:val="clr-namespace:Validations;assembly=Validations"

             mc:Ignorable="d"
             d:DesignHeight="35" d:DesignWidth="378"
             SnapsToDevicePixels="True"
             MinHeight="35" MinWidth="378"
             Background="Transparent"
             x:Name="ControlRoot">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ThemeControl;component/ThorStyleDark.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <sharedTypes:BooleanToVisibilityConverter x:Key="VisibilityConverter" />
            <ControlTemplate x:Key="ButtonContentTemplate" TargetType="{x:Type Button}">
                <Border x:Name="Border"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="1"
                        Margin="0"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter x:Name="IconContent"
                                          Grid.Column="0"
                                          Content="{DynamicResource FloppyDisk}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          Visibility="Collapsed"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentPresenter x:Name="CustomContent"
                                          Grid.Column="1"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </Border>
            </ControlTemplate>
            <DataTemplate x:Key="ButtonDataTemplate">
                <StackPanel Orientation="Horizontal">
                    <ContentPresenter x:Name="CustomContent"
                                      Content="{TemplateBinding Content}"
                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </StackPanel>
            </DataTemplate>
            <Style x:Key="ThorlabsButtonStyle" TargetType="{x:Type Button}">
                <!--<Setter Property="Background" Value="#201F22" />-->
                <Setter Property="Background" Value="{DynamicResource FlatButtonBackgroundBrush}" />
                <Setter Property="FontFamily" Value="{DynamicResource UsedFontFamily}" />
                <Setter Property="FontSize" Value="{DynamicResource UsedFontSize}" />
                <!--<Setter Property="Foreground" Value="{DynamicResource UsedFontColor}" />-->
                <Setter Property="Foreground" Value="{DynamicResource FlatButtonForegroundBrush}" />
                <Setter Property="Margin" Value="0 0 0 0" />
                <Setter Property="Padding" Value="0 0 0 0" />
                <Setter Property="BorderThickness" Value="0" />
                <!--<Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />-->
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="1"
                                    Margin="{TemplateBinding Margin}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="DarkGray" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource FlatButtonPressedBackgroundBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource GrayBrush2}" />
                        <Setter Property="Opacity" Value="0.5" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="ControlRootLayout"
          ClipToBounds="{Binding ClipToBounds, ElementName=ControlRoot}"
          DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MasterSlider}}"
          d:DataContext="{d:DesignInstance Type=local:MasterSlider, IsDesignTimeCreatable=True}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" SharedSizeGroup="HeaderColumn" />
            <ColumnDefinition Width="Auto" SharedSizeGroup="ConfigColumn" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" SharedSizeGroup="InputColumn" />
            <ColumnDefinition Width="Auto" SharedSizeGroup="TemperatureColumn" />
        </Grid.ColumnDefinitions>
        <!-- Header -->
        <Grid x:Name="HEADER_PART"
              Grid.Column="1"
              Margin="17 0 0 0"
              Grid.Row="1">
            <TextBox x:Name="NAME_PART"
                     Margin="0"
                     TabIndex="2"
                     Foreground="White"
                     VerticalContentAlignment="Center"
                     VerticalAlignment="Center"
                     HorizontalContentAlignment="Center"
                     Width="58"
                     Height="22"
                     Background="{Binding LightColor}"
                     BorderBrush="{Binding BorderBrush, ElementName=MASTER_COMBOBOX}"
                     BorderThickness="{Binding BorderThickness, ElementName=MASTER_COMBOBOX}"
                     Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                     KeyUp="NAME_PART_KeyUp"
                     GotFocus="NAME_PART_GotFocus"
                     MouseDoubleClick="NAME_PART_DoubleClick" />
            <Label x:Name="NAME_PART_LBL"
                   Foreground="{Binding Foreground, ElementName=ControlRoot}"
                   Background="{Binding Background, ElementName=MASTER_COMBOBOX}"
                   Content="{Binding ElementName=NAME_PART, Path=Text}"
                   VerticalAlignment="{Binding ElementName=NAME_PART, Path=VerticalAlignment}"
                   HorizontalContentAlignment="{Binding ElementName=NAME_PART, Path=HorizontalContentAlignment}"
                   Margin="{Binding ElementName=NAME_PART, Path=Margin}"
                   Visibility="{Binding ElementName=NAME_PART, Path=IsVisible, ConverterParameter=true, Converter={StaticResource VisibilityConverter}}" />
        </Grid>
        <!-- Slider -->
        <Slider x:Name="RANGE_SLIDER_PART"
                Grid.Column="2"
                Grid.Row="1"
                Margin="10,0"
                IsTabStop="True"
                SnapsToDevicePixels="True"
                VerticalAlignment="Center"
                Orientation="Horizontal"
                TabIndex="3"
                Minimum="0"
                Maximum="100"
                ToolTip="Adjusts LED Power"
                Value="{Binding Value, Mode=TwoWay}"
                 Background="{Binding LightColor}"
                TickFrequency="20">
        </Slider>
        <!-- Plus/Minus -->
        <StackPanel Orientation="Horizontal"
                    Grid.Column="3"
                    Grid.Row="1">
            <TextBox Name="NUMERIC_INPUT_PART"
                     VerticalAlignment="Center"
                     Width="40"
                     val:Validation.MaxValue="100.0"
                     val:Validation.MinValue="0.0"
                     ToolTip="Set LED Power"
                     IsEnabled="{Binding ElementName=SWITCH_PART, Path=IsChecked}"
                     Text="{Binding Value, Mode=TwoWay}">
            </TextBox>
            <Button Width="30"
                    Height="25"
                    Content="✓">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Visibility"
                                Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsFocused, ElementName=NUMERIC_INPUT_PART}"
                                         Value="True">
                                <Setter Property="Visibility"
                                        Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <StackPanel VerticalAlignment="Center">
                <RepeatButton Content="+"
                              Width="30"
                              Height="20"
                              Command="{Binding Path=LampPowerPlusCommand}"
                              Delay="500"
                              Interval="100" />
                                <!--IsEnabled="{Binding ElementName=SWITCH_PART, Path=IsChecked}"-->
                <RepeatButton Content="-"
                              Width="30"
                              Height="20"
                              Command="{Binding Path=LampPowerMinusCommand}"
                              Delay="500"
                              Interval="100" />
                                <!--IsEnabled="{Binding ElementName=SWITCH_PART, Path=IsChecked}"-->
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>