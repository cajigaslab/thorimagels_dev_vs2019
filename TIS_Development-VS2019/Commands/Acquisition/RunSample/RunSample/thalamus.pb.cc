// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: thalamus.proto
// Protobuf C++ Version: 5.27.2

#include "thalamus.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace thalamus_grpc {

inline constexpr XsensSegment::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{0u},
        x_{0},
        y_{0},
        z_{0},
        q0_{0},
        q1_{0},
        q2_{0},
        q3_{0},
        frame_{0u},
        time_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR XsensSegment::XsensSegment(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct XsensSegmentDefaultTypeInternal {
  PROTOBUF_CONSTEXPR XsensSegmentDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~XsensSegmentDefaultTypeInternal() {}
  union {
    XsensSegment _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 XsensSegmentDefaultTypeInternal _XsensSegment_default_instance_;

inline constexpr Text::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : text_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Text::Text(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TextDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TextDefaultTypeInternal() {}
  union {
    Text _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TextDefaultTypeInternal _Text_default_instance_;

inline constexpr StringMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StringMessage::StringMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StringMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringMessageDefaultTypeInternal() {}
  union {
    StringMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringMessageDefaultTypeInternal _StringMessage_default_instance_;

inline constexpr StringListMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StringListMessage::StringListMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StringListMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StringListMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StringListMessageDefaultTypeInternal() {}
  union {
    StringListMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StringListMessageDefaultTypeInternal _StringListMessage_default_instance_;

inline constexpr Span::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        begin_{0u},
        end_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Span::Span(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SpanDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpanDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpanDefaultTypeInternal() {}
  union {
    Span _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpanDefaultTypeInternal _Span_default_instance_;

inline constexpr ReplayRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : nodes_{},
        filename_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReplayRequest::ReplayRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReplayRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReplayRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReplayRequestDefaultTypeInternal() {}
  union {
    ReplayRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReplayRequestDefaultTypeInternal _ReplayRequest_default_instance_;

inline constexpr Pong::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Pong::Pong(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PongDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PongDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PongDefaultTypeInternal() {}
  union {
    Pong _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PongDefaultTypeInternal _Pong_default_instance_;

inline constexpr Ping::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Ping::Ping(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingDefaultTypeInternal() {}
  union {
    Ping _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingDefaultTypeInternal _Ping_default_instance_;

inline constexpr ObservableChange::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{::uint64_t{0u}},
        acknowledged_{::uint64_t{0u}},
        action_{static_cast< ::thalamus_grpc::ObservableChange_Action >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ObservableChange::ObservableChange(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ObservableChangeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ObservableChangeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ObservableChangeDefaultTypeInternal() {}
  union {
    ObservableChange _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ObservableChangeDefaultTypeInternal _ObservableChange_default_instance_;

inline constexpr Notification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : title_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::thalamus_grpc::Notification_Type >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Notification::Notification(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NotificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NotificationDefaultTypeInternal() {}
  union {
    Notification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NotificationDefaultTypeInternal _Notification_default_instance_;

inline constexpr NodeSelector::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeSelector::NodeSelector(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeSelectorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeSelectorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeSelectorDefaultTypeInternal() {}
  union {
    NodeSelector _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeSelectorDefaultTypeInternal _NodeSelector_default_instance_;

inline constexpr NodeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : json_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeResponse::NodeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeResponseDefaultTypeInternal() {}
  union {
    NodeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeResponseDefaultTypeInternal _NodeResponse_default_instance_;

inline constexpr NodeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        json_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NodeRequest::NodeRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NodeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NodeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NodeRequestDefaultTypeInternal() {}
  union {
    NodeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NodeRequestDefaultTypeInternal _NodeRequest_default_instance_;

inline constexpr ModalitiesMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _values_cached_byte_size_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ModalitiesMessage::ModalitiesMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ModalitiesMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ModalitiesMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ModalitiesMessageDefaultTypeInternal() {}
  union {
    ModalitiesMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ModalitiesMessageDefaultTypeInternal _ModalitiesMessage_default_instance_;

inline constexpr Image::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        width_{0u},
        height_{0u},
        frame_interval_{::uint64_t{0u}},
        format_{static_cast< ::thalamus_grpc::Image_Format >(0)},
        last_{false},
        bigendian_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Image::Image(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ImageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImageDefaultTypeInternal() {}
  union {
    Image _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImageDefaultTypeInternal _Image_default_instance_;

inline constexpr Event::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Event::Event(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventDefaultTypeInternal() {}
  union {
    Event _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventDefaultTypeInternal _Event_default_instance_;

inline constexpr EvalResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EvalResponse::EvalResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EvalResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvalResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvalResponseDefaultTypeInternal() {}
  union {
    EvalResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvalResponseDefaultTypeInternal _EvalResponse_default_instance_;

inline constexpr EvalRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EvalRequest::EvalRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EvalRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EvalRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EvalRequestDefaultTypeInternal() {}
  union {
    EvalRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EvalRequestDefaultTypeInternal _EvalRequest_default_instance_;

inline constexpr ChannelId::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        index_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ChannelId::ChannelId(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ChannelIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChannelIdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChannelIdDefaultTypeInternal() {}
  union {
    ChannelId _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChannelIdDefaultTypeInternal _ChannelId_default_instance_;

inline constexpr XsensResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : segments_{},
        pose_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR XsensResponse::XsensResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct XsensResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR XsensResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~XsensResponseDefaultTypeInternal() {}
  union {
    XsensResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 XsensResponseDefaultTypeInternal _XsensResponse_default_instance_;

inline constexpr SpectrogramRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channels_{},
        node_{nullptr},
        window_s_{0},
        hop_s_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SpectrogramRequest::SpectrogramRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SpectrogramRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpectrogramRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpectrogramRequestDefaultTypeInternal() {}
  union {
    SpectrogramRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpectrogramRequestDefaultTypeInternal _SpectrogramRequest_default_instance_;

inline constexpr Spectrogram::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{},
        channel_{nullptr},
        max_frequency_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Spectrogram::Spectrogram(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SpectrogramDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpectrogramDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpectrogramDefaultTypeInternal() {}
  union {
    Spectrogram _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpectrogramDefaultTypeInternal _Spectrogram_default_instance_;

inline constexpr InjectTextRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : body_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR InjectTextRequest::InjectTextRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InjectTextRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InjectTextRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InjectTextRequestDefaultTypeInternal() {}
  union {
    InjectTextRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InjectTextRequestDefaultTypeInternal _InjectTextRequest_default_instance_;

inline constexpr ImageRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        node_{nullptr},
        framerate_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ImageRequest::ImageRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ImageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ImageRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ImageRequestDefaultTypeInternal() {}
  union {
    ImageRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ImageRequestDefaultTypeInternal _ImageRequest_default_instance_;

inline constexpr GraphResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bins_{},
        spans_{},
        channels_changed_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphResponse::GraphResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GraphResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphResponseDefaultTypeInternal() {}
  union {
    GraphResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphResponseDefaultTypeInternal _GraphResponse_default_instance_;

inline constexpr GraphRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channels_{},
        _channels_cached_byte_size_{0},
        channel_names_{},
        node_{nullptr},
        bin_ns_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR GraphRequest::GraphRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct GraphRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphRequestDefaultTypeInternal() {}
  union {
    GraphRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphRequestDefaultTypeInternal _GraphRequest_default_instance_;

inline constexpr AnalogResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_{},
        spans_{},
        sample_intervals_{},
        _sample_intervals_cached_byte_size_{0},
        channels_changed_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AnalogResponse::AnalogResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AnalogResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalogResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalogResponseDefaultTypeInternal() {}
  union {
    AnalogResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalogResponseDefaultTypeInternal _AnalogResponse_default_instance_;

inline constexpr AnalogRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        channels_{},
        _channels_cached_byte_size_{0},
        channel_names_{},
        node_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AnalogRequest::AnalogRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AnalogRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AnalogRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AnalogRequestDefaultTypeInternal() {}
  union {
    AnalogRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AnalogRequestDefaultTypeInternal _AnalogRequest_default_instance_;

inline constexpr StorageRecord::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : node_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{::uint64_t{0u}},
        body_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR StorageRecord::StorageRecord(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct StorageRecordDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StorageRecordDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StorageRecordDefaultTypeInternal() {}
  union {
    StorageRecord _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StorageRecordDefaultTypeInternal _StorageRecord_default_instance_;

inline constexpr SpectrogramResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : spectrograms_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SpectrogramResponse::SpectrogramResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SpectrogramResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpectrogramResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpectrogramResponseDefaultTypeInternal() {}
  union {
    SpectrogramResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpectrogramResponseDefaultTypeInternal _SpectrogramResponse_default_instance_;

inline constexpr RemoteNodeMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : body_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR RemoteNodeMessage::RemoteNodeMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RemoteNodeMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoteNodeMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoteNodeMessageDefaultTypeInternal() {}
  union {
    RemoteNodeMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoteNodeMessageDefaultTypeInternal _RemoteNodeMessage_default_instance_;

inline constexpr InjectAnalogRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : body_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR InjectAnalogRequest::InjectAnalogRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct InjectAnalogRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InjectAnalogRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InjectAnalogRequestDefaultTypeInternal() {}
  union {
    InjectAnalogRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InjectAnalogRequestDefaultTypeInternal _InjectAnalogRequest_default_instance_;
}  // namespace thalamus_grpc
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_thalamus_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_thalamus_2eproto = nullptr;
const ::uint32_t
    TableStruct_thalamus_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ChannelId, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ChannelId, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ChannelId, _impl_.index_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Spectrogram, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Spectrogram, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Spectrogram, _impl_.channel_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Spectrogram, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Spectrogram, _impl_.max_frequency_),
        0,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::SpectrogramRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::SpectrogramRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::SpectrogramRequest, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::SpectrogramRequest, _impl_.channels_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::SpectrogramRequest, _impl_.window_s_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::SpectrogramRequest, _impl_.hop_s_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::SpectrogramResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::SpectrogramResponse, _impl_.spectrograms_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::NodeSelector, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::NodeSelector, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::NodeSelector, _impl_.type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::NodeRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::NodeRequest, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::NodeRequest, _impl_.json_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::NodeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::NodeResponse, _impl_.json_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Text, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Text, _impl_.text_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Text, _impl_.time_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::StorageRecord, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::StorageRecord, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::StorageRecord, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::StorageRecord, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::StorageRecord, _impl_.body_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ImageRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ImageRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ImageRequest, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ImageRequest, _impl_.framerate_),
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Image, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Image, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Image, _impl_.width_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Image, _impl_.height_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Image, _impl_.format_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Image, _impl_.frame_interval_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Image, _impl_.last_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Image, _impl_.bigendian_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Ping, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Ping, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Ping, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Pong, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Pong, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Pong, _impl_.payload_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::RemoteNodeMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::RemoteNodeMessage, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::RemoteNodeMessage, _impl_.body_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ReplayRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ReplayRequest, _impl_.filename_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ReplayRequest, _impl_.nodes_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensSegment, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensSegment, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensSegment, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensSegment, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensSegment, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensSegment, _impl_.q0_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensSegment, _impl_.q1_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensSegment, _impl_.q2_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensSegment, _impl_.q3_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensSegment, _impl_.frame_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensSegment, _impl_.time_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensResponse, _impl_.segments_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::XsensResponse, _impl_.pose_name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::StringMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::StringMessage, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ModalitiesMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ModalitiesMessage, _impl_.values_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::StringListMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::StringListMessage, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::EvalResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::EvalResponse, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::EvalResponse, _impl_.id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::EvalRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::EvalRequest, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::EvalRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::AnalogRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::AnalogRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::AnalogRequest, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::AnalogRequest, _impl_.channels_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::AnalogRequest, _impl_.channel_names_),
        0,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::InjectAnalogRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::InjectAnalogRequest, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::InjectAnalogRequest, _impl_.body_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::InjectTextRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::InjectTextRequest, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::InjectTextRequest, _impl_.body_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::AnalogResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::AnalogResponse, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::AnalogResponse, _impl_.spans_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::AnalogResponse, _impl_.sample_intervals_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::AnalogResponse, _impl_.channels_changed_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::GraphRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::GraphRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::GraphRequest, _impl_.node_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::GraphRequest, _impl_.channels_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::GraphRequest, _impl_.bin_ns_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::GraphRequest, _impl_.channel_names_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Span, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Span, _impl_.begin_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Span, _impl_.end_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Span, _impl_.name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::GraphResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::GraphResponse, _impl_.bins_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::GraphResponse, _impl_.spans_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::GraphResponse, _impl_.channels_changed_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Event, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Event, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Event, _impl_.time_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ObservableChange, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ObservableChange, _impl_.address_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ObservableChange, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ObservableChange, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ObservableChange, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::ObservableChange, _impl_.acknowledged_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Notification, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Notification, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Notification, _impl_.title_),
        PROTOBUF_FIELD_OFFSET(::thalamus_grpc::Notification, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::thalamus_grpc::ChannelId)},
        {10, 21, -1, sizeof(::thalamus_grpc::Spectrogram)},
        {24, 36, -1, sizeof(::thalamus_grpc::SpectrogramRequest)},
        {40, -1, -1, sizeof(::thalamus_grpc::SpectrogramResponse)},
        {49, -1, -1, sizeof(::thalamus_grpc::NodeSelector)},
        {59, -1, -1, sizeof(::thalamus_grpc::NodeRequest)},
        {69, -1, -1, sizeof(::thalamus_grpc::NodeResponse)},
        {78, -1, -1, sizeof(::thalamus_grpc::Text)},
        {88, -1, -1, sizeof(::thalamus_grpc::StorageRecord)},
        {104, 114, -1, sizeof(::thalamus_grpc::ImageRequest)},
        {116, -1, -1, sizeof(::thalamus_grpc::Image)},
        {131, -1, -1, sizeof(::thalamus_grpc::Ping)},
        {141, -1, -1, sizeof(::thalamus_grpc::Pong)},
        {151, -1, -1, sizeof(::thalamus_grpc::RemoteNodeMessage)},
        {164, -1, -1, sizeof(::thalamus_grpc::ReplayRequest)},
        {174, -1, -1, sizeof(::thalamus_grpc::XsensSegment)},
        {192, -1, -1, sizeof(::thalamus_grpc::XsensResponse)},
        {202, -1, -1, sizeof(::thalamus_grpc::StringMessage)},
        {211, -1, -1, sizeof(::thalamus_grpc::ModalitiesMessage)},
        {220, -1, -1, sizeof(::thalamus_grpc::StringListMessage)},
        {229, -1, -1, sizeof(::thalamus_grpc::EvalResponse)},
        {239, -1, -1, sizeof(::thalamus_grpc::EvalRequest)},
        {249, 260, -1, sizeof(::thalamus_grpc::AnalogRequest)},
        {263, -1, -1, sizeof(::thalamus_grpc::InjectAnalogRequest)},
        {274, -1, -1, sizeof(::thalamus_grpc::InjectTextRequest)},
        {285, -1, -1, sizeof(::thalamus_grpc::AnalogResponse)},
        {297, 309, -1, sizeof(::thalamus_grpc::GraphRequest)},
        {313, -1, -1, sizeof(::thalamus_grpc::Span)},
        {324, -1, -1, sizeof(::thalamus_grpc::GraphResponse)},
        {335, -1, -1, sizeof(::thalamus_grpc::Event)},
        {345, -1, -1, sizeof(::thalamus_grpc::ObservableChange)},
        {358, -1, -1, sizeof(::thalamus_grpc::Notification)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::thalamus_grpc::_ChannelId_default_instance_._instance,
    &::thalamus_grpc::_Spectrogram_default_instance_._instance,
    &::thalamus_grpc::_SpectrogramRequest_default_instance_._instance,
    &::thalamus_grpc::_SpectrogramResponse_default_instance_._instance,
    &::thalamus_grpc::_NodeSelector_default_instance_._instance,
    &::thalamus_grpc::_NodeRequest_default_instance_._instance,
    &::thalamus_grpc::_NodeResponse_default_instance_._instance,
    &::thalamus_grpc::_Text_default_instance_._instance,
    &::thalamus_grpc::_StorageRecord_default_instance_._instance,
    &::thalamus_grpc::_ImageRequest_default_instance_._instance,
    &::thalamus_grpc::_Image_default_instance_._instance,
    &::thalamus_grpc::_Ping_default_instance_._instance,
    &::thalamus_grpc::_Pong_default_instance_._instance,
    &::thalamus_grpc::_RemoteNodeMessage_default_instance_._instance,
    &::thalamus_grpc::_ReplayRequest_default_instance_._instance,
    &::thalamus_grpc::_XsensSegment_default_instance_._instance,
    &::thalamus_grpc::_XsensResponse_default_instance_._instance,
    &::thalamus_grpc::_StringMessage_default_instance_._instance,
    &::thalamus_grpc::_ModalitiesMessage_default_instance_._instance,
    &::thalamus_grpc::_StringListMessage_default_instance_._instance,
    &::thalamus_grpc::_EvalResponse_default_instance_._instance,
    &::thalamus_grpc::_EvalRequest_default_instance_._instance,
    &::thalamus_grpc::_AnalogRequest_default_instance_._instance,
    &::thalamus_grpc::_InjectAnalogRequest_default_instance_._instance,
    &::thalamus_grpc::_InjectTextRequest_default_instance_._instance,
    &::thalamus_grpc::_AnalogResponse_default_instance_._instance,
    &::thalamus_grpc::_GraphRequest_default_instance_._instance,
    &::thalamus_grpc::_Span_default_instance_._instance,
    &::thalamus_grpc::_GraphResponse_default_instance_._instance,
    &::thalamus_grpc::_Event_default_instance_._instance,
    &::thalamus_grpc::_ObservableChange_default_instance_._instance,
    &::thalamus_grpc::_Notification_default_instance_._instance,
};
const char descriptor_table_protodef_thalamus_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016thalamus.proto\022\rthalamus_grpc\032\nutil.pr"
    "oto\"(\n\tChannelId\022\014\n\004name\030\001 \001(\t\022\r\n\005index\030"
    "\002 \001(\005\"]\n\013Spectrogram\022)\n\007channel\030\001 \001(\0132\030."
    "thalamus_grpc.ChannelId\022\014\n\004data\030\002 \003(\001\022\025\n"
    "\rmax_frequency\030\003 \001(\001\"\214\001\n\022SpectrogramRequ"
    "est\022)\n\004node\030\001 \001(\0132\033.thalamus_grpc.NodeSe"
    "lector\022*\n\010channels\030\002 \003(\0132\030.thalamus_grpc"
    ".ChannelId\022\020\n\010window_s\030\003 \001(\001\022\r\n\005hop_s\030\004 "
    "\001(\001\"G\n\023SpectrogramResponse\0220\n\014spectrogra"
    "ms\030\001 \003(\0132\032.thalamus_grpc.Spectrogram\"*\n\014"
    "NodeSelector\022\014\n\004name\030\001 \001(\t\022\014\n\004type\030\002 \001(\t"
    "\")\n\013NodeRequest\022\014\n\004node\030\001 \001(\t\022\014\n\004json\030\002 "
    "\001(\t\"\034\n\014NodeResponse\022\014\n\004json\030\001 \001(\t\"\"\n\004Tex"
    "t\022\014\n\004text\030\001 \001(\t\022\014\n\004time\030\002 \001(\004\"\206\002\n\rStorag"
    "eRecord\022/\n\006analog\030\001 \001(\0132\035.thalamus_grpc."
    "AnalogResponseH\000\022-\n\005xsens\030\002 \001(\0132\034.thalam"
    "us_grpc.XsensResponseH\000\022%\n\005event\030\003 \001(\0132\024"
    ".thalamus_grpc.EventH\000\022%\n\005image\030\006 \001(\0132\024."
    "thalamus_grpc.ImageH\000\022#\n\004text\030\007 \001(\0132\023.th"
    "alamus_grpc.TextH\000\022\014\n\004time\030\004 \001(\004\022\014\n\004node"
    "\030\005 \001(\tB\006\n\004body\"L\n\014ImageRequest\022)\n\004node\030\001"
    " \001(\0132\033.thalamus_grpc.NodeSelector\022\021\n\tfra"
    "merate\030\002 \001(\001\"\366\001\n\005Image\022\014\n\004data\030\001 \003(\014\022\r\n\005"
    "width\030\002 \001(\r\022\016\n\006height\030\003 \001(\r\022+\n\006format\030\004 "
    "\001(\0162\033.thalamus_grpc.Image.Format\022\026\n\016fram"
    "e_interval\030\005 \001(\004\022\014\n\004last\030\006 \001(\010\022\021\n\tbigend"
    "ian\030\007 \001(\010\"Z\n\006Format\022\010\n\004Gray\020\000\022\007\n\003RGB\020\001\022\013"
    "\n\007YUYV422\020\002\022\013\n\007YUV420P\020\003\022\014\n\010YUVJ420P\020\004\022\n"
    "\n\006Gray16\020\005\022\t\n\005RGB16\020\006\"#\n\004Ping\022\n\n\002id\030\001 \001("
    "\r\022\017\n\007payload\030\002 \001(\014\"#\n\004Pong\022\n\n\002id\030\002 \001(\r\022\017"
    "\n\007payload\030\003 \001(\014\"\305\001\n\021RemoteNodeMessage\022/\n"
    "\007request\030\001 \001(\0132\034.thalamus_grpc.AnalogReq"
    "uestH\000\022-\n\004data\030\002 \001(\0132\035.thalamus_grpc.Ana"
    "logResponseH\000\022#\n\004ping\030\003 \001(\0132\023.thalamus_g"
    "rpc.PingH\000\022#\n\004pong\030\004 \001(\0132\023.thalamus_grpc"
    ".PongH\000B\006\n\004body\"0\n\rReplayRequest\022\020\n\010file"
    "name\030\001 \001(\t\022\r\n\005nodes\030\002 \003(\t\"\210\001\n\014XsensSegme"
    "nt\022\n\n\002id\030\001 \001(\r\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\t\n\001"
    "z\030\004 \001(\002\022\n\n\002q0\030\005 \001(\002\022\n\n\002q1\030\006 \001(\002\022\n\n\002q2\030\007 "
    "\001(\002\022\n\n\002q3\030\010 \001(\002\022\r\n\005frame\030\t \001(\r\022\014\n\004time\030\n"
    " \001(\r\"Q\n\rXsensResponse\022-\n\010segments\030\001 \003(\0132"
    "\033.thalamus_grpc.XsensSegment\022\021\n\tpose_nam"
    "e\030\002 \001(\t\"\036\n\rStringMessage\022\r\n\005value\030\001 \001(\t\""
    ">\n\021ModalitiesMessage\022)\n\006values\030\001 \003(\0162\031.t"
    "halamus_grpc.Modalities\"\"\n\021StringListMes"
    "sage\022\r\n\005value\030\001 \003(\t\")\n\014EvalResponse\022\r\n\005v"
    "alue\030\001 \001(\t\022\n\n\002id\030\002 \001(\004\"\'\n\013EvalRequest\022\014\n"
    "\004code\030\001 \001(\t\022\n\n\002id\030\002 \001(\004\"c\n\rAnalogRequest"
    "\022)\n\004node\030\001 \001(\0132\033.thalamus_grpc.NodeSelec"
    "tor\022\020\n\010channels\030\002 \003(\005\022\025\n\rchannel_names\030\003"
    " \003(\t\"^\n\023InjectAnalogRequest\022\016\n\004node\030\001 \001("
    "\tH\000\022/\n\006signal\030\002 \001(\0132\035.thalamus_grpc.Anal"
    "ogResponseH\000B\006\n\004body\"P\n\021InjectTextReques"
    "t\022\016\n\004node\030\001 \001(\tH\000\022#\n\004text\030\002 \001(\0132\023.thalam"
    "us_grpc.TextH\000B\006\n\004body\"v\n\016AnalogResponse"
    "\022\014\n\004data\030\001 \003(\001\022\"\n\005spans\030\002 \003(\0132\023.thalamus"
    "_grpc.Span\022\030\n\020sample_intervals\030\003 \003(\004\022\030\n\020"
    "channels_changed\030\004 \001(\010\"r\n\014GraphRequest\022)"
    "\n\004node\030\001 \001(\0132\033.thalamus_grpc.NodeSelecto"
    "r\022\020\n\010channels\030\002 \003(\005\022\016\n\006bin_ns\030\003 \001(\004\022\025\n\rc"
    "hannel_names\030\004 \003(\t\"0\n\004Span\022\r\n\005begin\030\001 \001("
    "\r\022\013\n\003end\030\002 \001(\r\022\014\n\004name\030\003 \001(\t\"[\n\rGraphRes"
    "ponse\022\014\n\004bins\030\001 \003(\001\022\"\n\005spans\030\002 \003(\0132\023.tha"
    "lamus_grpc.Span\022\030\n\020channels_changed\030\003 \001("
    "\010\"&\n\005Event\022\017\n\007payload\030\001 \001(\014\022\014\n\004time\030\002 \001("
    "\004\"\253\001\n\020ObservableChange\022\017\n\007address\030\001 \001(\t\022"
    "\r\n\005value\030\002 \001(\t\0226\n\006action\030\003 \001(\0162&.thalamu"
    "s_grpc.ObservableChange.Action\022\n\n\002id\030\004 \001"
    "(\004\022\024\n\014acknowledged\030\005 \001(\004\"\035\n\006Action\022\007\n\003Se"
    "t\020\000\022\n\n\006Delete\020\001\"\210\001\n\014Notification\022.\n\004type"
    "\030\001 \001(\0162 .thalamus_grpc.Notification.Type"
    "\022\r\n\005title\030\002 \001(\t\022\017\n\007message\030\003 \001(\t\"(\n\004Type"
    "\022\t\n\005Error\020\000\022\013\n\007Warning\020\001\022\010\n\004Info\020\002*X\n\nMo"
    "dalities\022\022\n\016AnalogModality\020\000\022\021\n\rMocapMod"
    "ality\020\001\022\021\n\rImageModality\020\002\022\020\n\014TextModali"
    "ty\020\0032\315\013\n\010Thalamus\0224\n\006events\022\024.thalamus_g"
    "rpc.Event\032\020.util_grpc.Empty\"\000(\001\0220\n\003log\022\023"
    ".thalamus_grpc.Text\032\020.util_grpc.Empty\"\000("
    "\001\022[\n\021observable_bridge\022\037.thalamus_grpc.O"
    "bservableChange\032\037.thalamus_grpc.Observab"
    "leChange\"\000(\0010\001\022F\n\005graph\022\033.thalamus_grpc."
    "GraphRequest\032\034.thalamus_grpc.GraphRespon"
    "se\"\0000\001\022I\n\006analog\022\034.thalamus_grpc.AnalogR"
    "equest\032\035.thalamus_grpc.AnalogResponse\"\0000"
    "\001\022X\n\013spectrogram\022!.thalamus_grpc.Spectro"
    "gramRequest\032\".thalamus_grpc.SpectrogramR"
    "esponse\"\0000\001\022O\n\014channel_info\022\034.thalamus_g"
    "rpc.AnalogRequest\032\035.thalamus_grpc.Analog"
    "Response\"\0000\001\022F\n\005xsens\022\033.thalamus_grpc.No"
    "deSelector\032\034.thalamus_grpc.XsensResponse"
    "\"\0000\001\022>\n\005image\022\033.thalamus_grpc.ImageReque"
    "st\032\024.thalamus_grpc.Image\"\0000\001\022E\n\004eval\022\033.t"
    "halamus_grpc.EvalResponse\032\032.thalamus_grp"
    "c.EvalRequest\"\000(\0010\001\022M\n\rget_type_name\022\034.t"
    "halamus_grpc.StringMessage\032\034.thalamus_gr"
    "pc.StringMessage\"\000\022[\n\030get_recommended_ch"
    "annels\022\033.thalamus_grpc.NodeSelector\032 .th"
    "alamus_grpc.StringListMessage\"\000\022:\n\006repla"
    "y\022\034.thalamus_grpc.ReplayRequest\032\020.util_g"
    "rpc.Empty\"\000\022W\n\013remote_node\022 .thalamus_gr"
    "pc.RemoteNodeMessage\032 .thalamus_grpc.Rem"
    "oteNodeMessage\"\000(\0010\001\022A\n\014notification\022\020.u"
    "til_grpc.Empty\032\033.thalamus_grpc.Notificat"
    "ion\"\0000\001\022I\n\014node_request\022\032.thalamus_grpc."
    "NodeRequest\032\033.thalamus_grpc.NodeResponse"
    "\"\000\022I\n\rinject_analog\022\".thalamus_grpc.Inje"
    "ctAnalogRequest\032\020.util_grpc.Empty\"\000(\001\022Q\n"
    "\016get_modalities\022\033.thalamus_grpc.NodeSele"
    "ctor\032 .thalamus_grpc.ModalitiesMessage\"\000"
    "\0226\n\004ping\022\023.thalamus_grpc.Ping\032\023.thalamus"
    "_grpc.Pong\"\000(\0010\001\022J\n\013inject_text\022 .thalam"
    "us_grpc.InjectTextRequest\032\023.thalamus_grp"
    "c.Pong\"\000(\0010\001b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_thalamus_2eproto_deps[1] =
    {
        &::descriptor_table_util_2eproto,
};
static ::absl::once_flag descriptor_table_thalamus_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_thalamus_2eproto = {
    false,
    false,
    4500,
    descriptor_table_protodef_thalamus_2eproto,
    "thalamus.proto",
    &descriptor_table_thalamus_2eproto_once,
    descriptor_table_thalamus_2eproto_deps,
    1,
    32,
    schemas,
    file_default_instances,
    TableStruct_thalamus_2eproto::offsets,
    file_level_enum_descriptors_thalamus_2eproto,
    file_level_service_descriptors_thalamus_2eproto,
};
namespace thalamus_grpc {
const ::google::protobuf::EnumDescriptor* Image_Format_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_thalamus_2eproto);
  return file_level_enum_descriptors_thalamus_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Image_Format_internal_data_[] = {
    458752u, 0u, };
bool Image_Format_IsValid(int value) {
  return 0 <= value && value <= 6;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Image_Format Image::Gray;
constexpr Image_Format Image::RGB;
constexpr Image_Format Image::YUYV422;
constexpr Image_Format Image::YUV420P;
constexpr Image_Format Image::YUVJ420P;
constexpr Image_Format Image::Gray16;
constexpr Image_Format Image::RGB16;
constexpr Image_Format Image::Format_MIN;
constexpr Image_Format Image::Format_MAX;
constexpr int Image::Format_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* ObservableChange_Action_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_thalamus_2eproto);
  return file_level_enum_descriptors_thalamus_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ObservableChange_Action_internal_data_[] = {
    131072u, 0u, };
bool ObservableChange_Action_IsValid(int value) {
  return 0 <= value && value <= 1;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr ObservableChange_Action ObservableChange::Set;
constexpr ObservableChange_Action ObservableChange::Delete;
constexpr ObservableChange_Action ObservableChange::Action_MIN;
constexpr ObservableChange_Action ObservableChange::Action_MAX;
constexpr int ObservableChange::Action_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Notification_Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_thalamus_2eproto);
  return file_level_enum_descriptors_thalamus_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t Notification_Type_internal_data_[] = {
    196608u, 0u, };
bool Notification_Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Notification_Type Notification::Error;
constexpr Notification_Type Notification::Warning;
constexpr Notification_Type Notification::Info;
constexpr Notification_Type Notification::Type_MIN;
constexpr Notification_Type Notification::Type_MAX;
constexpr int Notification::Type_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* Modalities_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_thalamus_2eproto);
  return file_level_enum_descriptors_thalamus_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t Modalities_internal_data_[] = {
    262144u, 0u, };
bool Modalities_IsValid(int value) {
  return 0 <= value && value <= 3;
}
// ===================================================================

class ChannelId::_Internal {
 public:
};

ChannelId::ChannelId(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.ChannelId)
}
inline PROTOBUF_NDEBUG_INLINE ChannelId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::ChannelId& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

ChannelId::ChannelId(
    ::google::protobuf::Arena* arena,
    const ChannelId& from)
    : ::google::protobuf::Message(arena) {
  ChannelId* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.index_ = from._impl_.index_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.ChannelId)
}
inline PROTOBUF_NDEBUG_INLINE ChannelId::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void ChannelId::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.index_ = {};
}
ChannelId::~ChannelId() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.ChannelId)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChannelId::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ChannelId::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ChannelId, _impl_._cached_size_),
              false,
          },
          &ChannelId::MergeImpl,
          &ChannelId::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 36, 2> ChannelId::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ChannelId_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::ChannelId>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ChannelId, _impl_.index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelId, _impl_.index_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ChannelId, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(ChannelId, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 index = 2;
    {PROTOBUF_FIELD_OFFSET(ChannelId, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\27\4\0\0\0\0\0\0"
    "thalamus_grpc.ChannelId"
    "name"
  }},
};

PROTOBUF_NOINLINE void ChannelId::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.ChannelId)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.index_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ChannelId::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.ChannelId)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.ChannelId.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 index = 2;
  if (this->_internal_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_index(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.ChannelId)
  return target;
}

::size_t ChannelId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.ChannelId)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // int32 index = 2;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ChannelId::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChannelId*>(&to_msg);
  auto& from = static_cast<const ChannelId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.ChannelId)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_index() != 0) {
    _this->_impl_.index_ = from._impl_.index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChannelId::CopyFrom(const ChannelId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.ChannelId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChannelId::InternalSwap(ChannelId* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
        swap(_impl_.index_, other->_impl_.index_);
}

::google::protobuf::Metadata ChannelId::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Spectrogram::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Spectrogram>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Spectrogram, _impl_._has_bits_);
};

Spectrogram::Spectrogram(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.Spectrogram)
}
inline PROTOBUF_NDEBUG_INLINE Spectrogram::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::Spectrogram& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_{visibility, arena, from.data_} {}

Spectrogram::Spectrogram(
    ::google::protobuf::Arena* arena,
    const Spectrogram& from)
    : ::google::protobuf::Message(arena) {
  Spectrogram* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.channel_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::ChannelId>(
                              arena, *from._impl_.channel_)
                        : nullptr;
  _impl_.max_frequency_ = from._impl_.max_frequency_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.Spectrogram)
}
inline PROTOBUF_NDEBUG_INLINE Spectrogram::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        data_{visibility, arena} {}

inline void Spectrogram::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, channel_),
           0,
           offsetof(Impl_, max_frequency_) -
               offsetof(Impl_, channel_) +
               sizeof(Impl_::max_frequency_));
}
Spectrogram::~Spectrogram() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.Spectrogram)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Spectrogram::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.channel_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Spectrogram::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Spectrogram, _impl_._cached_size_),
              false,
          },
          &Spectrogram::MergeImpl,
          &Spectrogram::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> Spectrogram::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Spectrogram, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Spectrogram_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::Spectrogram>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .thalamus_grpc.ChannelId channel = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Spectrogram, _impl_.channel_)}},
    // repeated double data = 2;
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Spectrogram, _impl_.data_)}},
    // double max_frequency = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Spectrogram, _impl_.max_frequency_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .thalamus_grpc.ChannelId channel = 1;
    {PROTOBUF_FIELD_OFFSET(Spectrogram, _impl_.channel_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated double data = 2;
    {PROTOBUF_FIELD_OFFSET(Spectrogram, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // double max_frequency = 3;
    {PROTOBUF_FIELD_OFFSET(Spectrogram, _impl_.max_frequency_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::ChannelId>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Spectrogram::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.Spectrogram)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.channel_ != nullptr);
    _impl_.channel_->Clear();
  }
  _impl_.max_frequency_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Spectrogram::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.Spectrogram)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .thalamus_grpc.ChannelId channel = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.channel_, _impl_.channel_->GetCachedSize(), target, stream);
  }

  // repeated double data = 2;
  if (this->_internal_data_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_data(), target);
  }

  // double max_frequency = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max_frequency = this->_internal_max_frequency();
  ::uint64_t raw_max_frequency;
  memcpy(&raw_max_frequency, &tmp_max_frequency, sizeof(tmp_max_frequency));
  if (raw_max_frequency != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_max_frequency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.Spectrogram)
  return target;
}

::size_t Spectrogram::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.Spectrogram)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated double data = 2;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_data_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // .thalamus_grpc.ChannelId channel = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.channel_);
  }

  // double max_frequency = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max_frequency = this->_internal_max_frequency();
  ::uint64_t raw_max_frequency;
  memcpy(&raw_max_frequency, &tmp_max_frequency, sizeof(tmp_max_frequency));
  if (raw_max_frequency != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Spectrogram::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Spectrogram*>(&to_msg);
  auto& from = static_cast<const Spectrogram&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.Spectrogram)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.channel_ != nullptr);
    if (_this->_impl_.channel_ == nullptr) {
      _this->_impl_.channel_ =
          ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::ChannelId>(arena, *from._impl_.channel_);
    } else {
      _this->_impl_.channel_->MergeFrom(*from._impl_.channel_);
    }
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_max_frequency = from._internal_max_frequency();
  ::uint64_t raw_max_frequency;
  memcpy(&raw_max_frequency, &tmp_max_frequency, sizeof(tmp_max_frequency));
  if (raw_max_frequency != 0) {
    _this->_impl_.max_frequency_ = from._impl_.max_frequency_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Spectrogram::CopyFrom(const Spectrogram& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.Spectrogram)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Spectrogram::InternalSwap(Spectrogram* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Spectrogram, _impl_.max_frequency_)
      + sizeof(Spectrogram::_impl_.max_frequency_)
      - PROTOBUF_FIELD_OFFSET(Spectrogram, _impl_.channel_)>(
          reinterpret_cast<char*>(&_impl_.channel_),
          reinterpret_cast<char*>(&other->_impl_.channel_));
}

::google::protobuf::Metadata Spectrogram::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpectrogramRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SpectrogramRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_._has_bits_);
};

SpectrogramRequest::SpectrogramRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.SpectrogramRequest)
}
inline PROTOBUF_NDEBUG_INLINE SpectrogramRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::SpectrogramRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        channels_{visibility, arena, from.channels_} {}

SpectrogramRequest::SpectrogramRequest(
    ::google::protobuf::Arena* arena,
    const SpectrogramRequest& from)
    : ::google::protobuf::Message(arena) {
  SpectrogramRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::NodeSelector>(
                              arena, *from._impl_.node_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, window_s_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, window_s_),
           offsetof(Impl_, hop_s_) -
               offsetof(Impl_, window_s_) +
               sizeof(Impl_::hop_s_));

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.SpectrogramRequest)
}
inline PROTOBUF_NDEBUG_INLINE SpectrogramRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        channels_{visibility, arena} {}

inline void SpectrogramRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_),
           0,
           offsetof(Impl_, hop_s_) -
               offsetof(Impl_, node_) +
               sizeof(Impl_::hop_s_));
}
SpectrogramRequest::~SpectrogramRequest() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.SpectrogramRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SpectrogramRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.node_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SpectrogramRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_._cached_size_),
              false,
          },
          &SpectrogramRequest::MergeImpl,
          &SpectrogramRequest::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> SpectrogramRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SpectrogramRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::SpectrogramRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double hop_s = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_.hop_s_)}},
    // .thalamus_grpc.NodeSelector node = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_.node_)}},
    // repeated .thalamus_grpc.ChannelId channels = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_.channels_)}},
    // double window_s = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_.window_s_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .thalamus_grpc.NodeSelector node = 1;
    {PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_.node_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .thalamus_grpc.ChannelId channels = 2;
    {PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_.channels_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // double window_s = 3;
    {PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_.window_s_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double hop_s = 4;
    {PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_.hop_s_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::NodeSelector>()},
    {::_pbi::TcParser::GetTable<::thalamus_grpc::ChannelId>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SpectrogramRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.SpectrogramRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channels_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_ != nullptr);
    _impl_.node_->Clear();
  }
  ::memset(&_impl_.window_s_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.hop_s_) -
      reinterpret_cast<char*>(&_impl_.window_s_)) + sizeof(_impl_.hop_s_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SpectrogramRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.SpectrogramRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .thalamus_grpc.NodeSelector node = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.node_, _impl_.node_->GetCachedSize(), target, stream);
  }

  // repeated .thalamus_grpc.ChannelId channels = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_channels_size());
       i < n; i++) {
    const auto& repfield = this->_internal_channels().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // double window_s = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_window_s = this->_internal_window_s();
  ::uint64_t raw_window_s;
  memcpy(&raw_window_s, &tmp_window_s, sizeof(tmp_window_s));
  if (raw_window_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_window_s(), target);
  }

  // double hop_s = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_hop_s = this->_internal_hop_s();
  ::uint64_t raw_hop_s;
  memcpy(&raw_hop_s, &tmp_hop_s, sizeof(tmp_hop_s));
  if (raw_hop_s != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        4, this->_internal_hop_s(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.SpectrogramRequest)
  return target;
}

::size_t SpectrogramRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.SpectrogramRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .thalamus_grpc.ChannelId channels = 2;
  total_size += 1UL * this->_internal_channels_size();
  for (const auto& msg : this->_internal_channels()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .thalamus_grpc.NodeSelector node = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.node_);
  }

  // double window_s = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_window_s = this->_internal_window_s();
  ::uint64_t raw_window_s;
  memcpy(&raw_window_s, &tmp_window_s, sizeof(tmp_window_s));
  if (raw_window_s != 0) {
    total_size += 9;
  }

  // double hop_s = 4;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_hop_s = this->_internal_hop_s();
  ::uint64_t raw_hop_s;
  memcpy(&raw_hop_s, &tmp_hop_s, sizeof(tmp_hop_s));
  if (raw_hop_s != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SpectrogramRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpectrogramRequest*>(&to_msg);
  auto& from = static_cast<const SpectrogramRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.SpectrogramRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channels()->MergeFrom(
      from._internal_channels());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_ != nullptr);
    if (_this->_impl_.node_ == nullptr) {
      _this->_impl_.node_ =
          ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::NodeSelector>(arena, *from._impl_.node_);
    } else {
      _this->_impl_.node_->MergeFrom(*from._impl_.node_);
    }
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_window_s = from._internal_window_s();
  ::uint64_t raw_window_s;
  memcpy(&raw_window_s, &tmp_window_s, sizeof(tmp_window_s));
  if (raw_window_s != 0) {
    _this->_impl_.window_s_ = from._impl_.window_s_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_hop_s = from._internal_hop_s();
  ::uint64_t raw_hop_s;
  memcpy(&raw_hop_s, &tmp_hop_s, sizeof(tmp_hop_s));
  if (raw_hop_s != 0) {
    _this->_impl_.hop_s_ = from._impl_.hop_s_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpectrogramRequest::CopyFrom(const SpectrogramRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.SpectrogramRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpectrogramRequest::InternalSwap(SpectrogramRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.channels_.InternalSwap(&other->_impl_.channels_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_.hop_s_)
      + sizeof(SpectrogramRequest::_impl_.hop_s_)
      - PROTOBUF_FIELD_OFFSET(SpectrogramRequest, _impl_.node_)>(
          reinterpret_cast<char*>(&_impl_.node_),
          reinterpret_cast<char*>(&other->_impl_.node_));
}

::google::protobuf::Metadata SpectrogramRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SpectrogramResponse::_Internal {
 public:
};

SpectrogramResponse::SpectrogramResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.SpectrogramResponse)
}
inline PROTOBUF_NDEBUG_INLINE SpectrogramResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::SpectrogramResponse& from_msg)
      : spectrograms_{visibility, arena, from.spectrograms_},
        _cached_size_{0} {}

SpectrogramResponse::SpectrogramResponse(
    ::google::protobuf::Arena* arena,
    const SpectrogramResponse& from)
    : ::google::protobuf::Message(arena) {
  SpectrogramResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.SpectrogramResponse)
}
inline PROTOBUF_NDEBUG_INLINE SpectrogramResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : spectrograms_{visibility, arena},
        _cached_size_{0} {}

inline void SpectrogramResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SpectrogramResponse::~SpectrogramResponse() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.SpectrogramResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SpectrogramResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SpectrogramResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(SpectrogramResponse, _impl_._cached_size_),
              false,
          },
          &SpectrogramResponse::MergeImpl,
          &SpectrogramResponse::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> SpectrogramResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SpectrogramResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::SpectrogramResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .thalamus_grpc.Spectrogram spectrograms = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SpectrogramResponse, _impl_.spectrograms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .thalamus_grpc.Spectrogram spectrograms = 1;
    {PROTOBUF_FIELD_OFFSET(SpectrogramResponse, _impl_.spectrograms_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::Spectrogram>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SpectrogramResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.SpectrogramResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.spectrograms_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* SpectrogramResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.SpectrogramResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .thalamus_grpc.Spectrogram spectrograms = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_spectrograms_size());
       i < n; i++) {
    const auto& repfield = this->_internal_spectrograms().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.SpectrogramResponse)
  return target;
}

::size_t SpectrogramResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.SpectrogramResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .thalamus_grpc.Spectrogram spectrograms = 1;
  total_size += 1UL * this->_internal_spectrograms_size();
  for (const auto& msg : this->_internal_spectrograms()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SpectrogramResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SpectrogramResponse*>(&to_msg);
  auto& from = static_cast<const SpectrogramResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.SpectrogramResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_spectrograms()->MergeFrom(
      from._internal_spectrograms());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpectrogramResponse::CopyFrom(const SpectrogramResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.SpectrogramResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SpectrogramResponse::InternalSwap(SpectrogramResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.spectrograms_.InternalSwap(&other->_impl_.spectrograms_);
}

::google::protobuf::Metadata SpectrogramResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeSelector::_Internal {
 public:
};

NodeSelector::NodeSelector(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.NodeSelector)
}
inline PROTOBUF_NDEBUG_INLINE NodeSelector::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::NodeSelector& from_msg)
      : name_(arena, from.name_),
        type_(arena, from.type_),
        _cached_size_{0} {}

NodeSelector::NodeSelector(
    ::google::protobuf::Arena* arena,
    const NodeSelector& from)
    : ::google::protobuf::Message(arena) {
  NodeSelector* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.NodeSelector)
}
inline PROTOBUF_NDEBUG_INLINE NodeSelector::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        type_(arena),
        _cached_size_{0} {}

inline void NodeSelector::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeSelector::~NodeSelector() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.NodeSelector)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeSelector::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.type_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NodeSelector::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NodeSelector, _impl_._cached_size_),
              false,
          },
          &NodeSelector::MergeImpl,
          &NodeSelector::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> NodeSelector::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeSelector_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::NodeSelector>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string type = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeSelector, _impl_.type_)}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeSelector, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(NodeSelector, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 2;
    {PROTOBUF_FIELD_OFFSET(NodeSelector, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\4\4\0\0\0\0\0"
    "thalamus_grpc.NodeSelector"
    "name"
    "type"
  }},
};

PROTOBUF_NOINLINE void NodeSelector::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.NodeSelector)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NodeSelector::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.NodeSelector)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.NodeSelector.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.NodeSelector.type");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.NodeSelector)
  return target;
}

::size_t NodeSelector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.NodeSelector)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string type = 2;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NodeSelector::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeSelector*>(&to_msg);
  auto& from = static_cast<const NodeSelector&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.NodeSelector)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeSelector::CopyFrom(const NodeSelector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.NodeSelector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeSelector::InternalSwap(NodeSelector* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
}

::google::protobuf::Metadata NodeSelector::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeRequest::_Internal {
 public:
};

NodeRequest::NodeRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.NodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::NodeRequest& from_msg)
      : node_(arena, from.node_),
        json_(arena, from.json_),
        _cached_size_{0} {}

NodeRequest::NodeRequest(
    ::google::protobuf::Arena* arena,
    const NodeRequest& from)
    : ::google::protobuf::Message(arena) {
  NodeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.NodeRequest)
}
inline PROTOBUF_NDEBUG_INLINE NodeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_(arena),
        json_(arena),
        _cached_size_{0} {}

inline void NodeRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeRequest::~NodeRequest() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.NodeRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.node_.Destroy();
  _impl_.json_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NodeRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NodeRequest, _impl_._cached_size_),
              false,
          },
          &NodeRequest::MergeImpl,
          &NodeRequest::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 42, 2> NodeRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::NodeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string json = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NodeRequest, _impl_.json_)}},
    // string node = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeRequest, _impl_.node_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string node = 1;
    {PROTOBUF_FIELD_OFFSET(NodeRequest, _impl_.node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string json = 2;
    {PROTOBUF_FIELD_OFFSET(NodeRequest, _impl_.json_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\4\4\0\0\0\0\0"
    "thalamus_grpc.NodeRequest"
    "node"
    "json"
  }},
};

PROTOBUF_NOINLINE void NodeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.NodeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_.ClearToEmpty();
  _impl_.json_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NodeRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.NodeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string node = 1;
  if (!this->_internal_node().empty()) {
    const std::string& _s = this->_internal_node();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.NodeRequest.node");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string json = 2;
  if (!this->_internal_json().empty()) {
    const std::string& _s = this->_internal_json();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.NodeRequest.json");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.NodeRequest)
  return target;
}

::size_t NodeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.NodeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string node = 1;
  if (!this->_internal_node().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_node());
  }

  // string json = 2;
  if (!this->_internal_json().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_json());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NodeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeRequest*>(&to_msg);
  auto& from = static_cast<const NodeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.NodeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node().empty()) {
    _this->_internal_set_node(from._internal_node());
  }
  if (!from._internal_json().empty()) {
    _this->_internal_set_json(from._internal_json());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeRequest::CopyFrom(const NodeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.NodeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeRequest::InternalSwap(NodeRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_, &other->_impl_.node_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.json_, &other->_impl_.json_, arena);
}

::google::protobuf::Metadata NodeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NodeResponse::_Internal {
 public:
};

NodeResponse::NodeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.NodeResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::NodeResponse& from_msg)
      : json_(arena, from.json_),
        _cached_size_{0} {}

NodeResponse::NodeResponse(
    ::google::protobuf::Arena* arena,
    const NodeResponse& from)
    : ::google::protobuf::Message(arena) {
  NodeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.NodeResponse)
}
inline PROTOBUF_NDEBUG_INLINE NodeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : json_(arena),
        _cached_size_{0} {}

inline void NodeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NodeResponse::~NodeResponse() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.NodeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NodeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.json_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
NodeResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(NodeResponse, _impl_._cached_size_),
              false,
          },
          &NodeResponse::MergeImpl,
          &NodeResponse::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 39, 2> NodeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NodeResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::NodeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string json = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NodeResponse, _impl_.json_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string json = 1;
    {PROTOBUF_FIELD_OFFSET(NodeResponse, _impl_.json_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\4\0\0\0\0\0\0"
    "thalamus_grpc.NodeResponse"
    "json"
  }},
};

PROTOBUF_NOINLINE void NodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.NodeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.json_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* NodeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.NodeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string json = 1;
  if (!this->_internal_json().empty()) {
    const std::string& _s = this->_internal_json();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.NodeResponse.json");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.NodeResponse)
  return target;
}

::size_t NodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.NodeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string json = 1;
  if (!this->_internal_json().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_json());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void NodeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NodeResponse*>(&to_msg);
  auto& from = static_cast<const NodeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.NodeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_json().empty()) {
    _this->_internal_set_json(from._internal_json());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NodeResponse::CopyFrom(const NodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.NodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NodeResponse::InternalSwap(NodeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.json_, &other->_impl_.json_, arena);
}

::google::protobuf::Metadata NodeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Text::_Internal {
 public:
};

Text::Text(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.Text)
}
inline PROTOBUF_NDEBUG_INLINE Text::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::Text& from_msg)
      : text_(arena, from.text_),
        _cached_size_{0} {}

Text::Text(
    ::google::protobuf::Arena* arena,
    const Text& from)
    : ::google::protobuf::Message(arena) {
  Text* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.time_ = from._impl_.time_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.Text)
}
inline PROTOBUF_NDEBUG_INLINE Text::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : text_(arena),
        _cached_size_{0} {}

inline void Text::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
Text::~Text() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.Text)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Text::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.text_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Text::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Text, _impl_._cached_size_),
              false,
          },
          &Text::MergeImpl,
          &Text::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 31, 2> Text::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Text_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::Text>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Text, _impl_.time_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Text, _impl_.time_)}},
    // string text = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Text, _impl_.text_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string text = 1;
    {PROTOBUF_FIELD_OFFSET(Text, _impl_.text_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 time = 2;
    {PROTOBUF_FIELD_OFFSET(Text, _impl_.time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\22\4\0\0\0\0\0\0"
    "thalamus_grpc.Text"
    "text"
  }},
};

PROTOBUF_NOINLINE void Text::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.Text)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.text_.ClearToEmpty();
  _impl_.time_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Text::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.Text)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string text = 1;
  if (!this->_internal_text().empty()) {
    const std::string& _s = this->_internal_text();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.Text.text");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 time = 2;
  if (this->_internal_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.Text)
  return target;
}

::size_t Text::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.Text)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string text = 1;
  if (!this->_internal_text().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_text());
  }

  // uint64 time = 2;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Text::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Text*>(&to_msg);
  auto& from = static_cast<const Text&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.Text)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_text().empty()) {
    _this->_internal_set_text(from._internal_text());
  }
  if (from._internal_time() != 0) {
    _this->_impl_.time_ = from._impl_.time_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Text::CopyFrom(const Text& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.Text)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Text::InternalSwap(Text* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.text_, &other->_impl_.text_, arena);
        swap(_impl_.time_, other->_impl_.time_);
}

::google::protobuf::Metadata Text::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StorageRecord::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::thalamus_grpc::StorageRecord, _impl_._oneof_case_);
};

void StorageRecord::set_allocated_analog(::thalamus_grpc::AnalogResponse* analog) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (analog) {
    ::google::protobuf::Arena* submessage_arena = analog->GetArena();
    if (message_arena != submessage_arena) {
      analog = ::google::protobuf::internal::GetOwnedMessage(message_arena, analog, submessage_arena);
    }
    set_has_analog();
    _impl_.body_.analog_ = analog;
  }
  // @@protoc_insertion_point(field_set_allocated:thalamus_grpc.StorageRecord.analog)
}
void StorageRecord::set_allocated_xsens(::thalamus_grpc::XsensResponse* xsens) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (xsens) {
    ::google::protobuf::Arena* submessage_arena = xsens->GetArena();
    if (message_arena != submessage_arena) {
      xsens = ::google::protobuf::internal::GetOwnedMessage(message_arena, xsens, submessage_arena);
    }
    set_has_xsens();
    _impl_.body_.xsens_ = xsens;
  }
  // @@protoc_insertion_point(field_set_allocated:thalamus_grpc.StorageRecord.xsens)
}
void StorageRecord::set_allocated_event(::thalamus_grpc::Event* event) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (event) {
    ::google::protobuf::Arena* submessage_arena = event->GetArena();
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(message_arena, event, submessage_arena);
    }
    set_has_event();
    _impl_.body_.event_ = event;
  }
  // @@protoc_insertion_point(field_set_allocated:thalamus_grpc.StorageRecord.event)
}
void StorageRecord::set_allocated_image(::thalamus_grpc::Image* image) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (image) {
    ::google::protobuf::Arena* submessage_arena = image->GetArena();
    if (message_arena != submessage_arena) {
      image = ::google::protobuf::internal::GetOwnedMessage(message_arena, image, submessage_arena);
    }
    set_has_image();
    _impl_.body_.image_ = image;
  }
  // @@protoc_insertion_point(field_set_allocated:thalamus_grpc.StorageRecord.image)
}
void StorageRecord::set_allocated_text(::thalamus_grpc::Text* text) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (text) {
    ::google::protobuf::Arena* submessage_arena = text->GetArena();
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(message_arena, text, submessage_arena);
    }
    set_has_text();
    _impl_.body_.text_ = text;
  }
  // @@protoc_insertion_point(field_set_allocated:thalamus_grpc.StorageRecord.text)
}
StorageRecord::StorageRecord(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.StorageRecord)
}
inline PROTOBUF_NDEBUG_INLINE StorageRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::StorageRecord& from_msg)
      : node_(arena, from.node_),
        body_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

StorageRecord::StorageRecord(
    ::google::protobuf::Arena* arena,
    const StorageRecord& from)
    : ::google::protobuf::Message(arena) {
  StorageRecord* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.time_ = from._impl_.time_;
  switch (body_case()) {
    case BODY_NOT_SET:
      break;
      case kAnalog:
        _impl_.body_.analog_ = ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::AnalogResponse>(arena, *from._impl_.body_.analog_);
        break;
      case kXsens:
        _impl_.body_.xsens_ = ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::XsensResponse>(arena, *from._impl_.body_.xsens_);
        break;
      case kEvent:
        _impl_.body_.event_ = ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::Event>(arena, *from._impl_.body_.event_);
        break;
      case kImage:
        _impl_.body_.image_ = ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::Image>(arena, *from._impl_.body_.image_);
        break;
      case kText:
        _impl_.body_.text_ = ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::Text>(arena, *from._impl_.body_.text_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.StorageRecord)
}
inline PROTOBUF_NDEBUG_INLINE StorageRecord::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : node_(arena),
        body_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void StorageRecord::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
StorageRecord::~StorageRecord() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.StorageRecord)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StorageRecord::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.node_.Destroy();
  if (has_body()) {
    clear_body();
  }
  _impl_.~Impl_();
}

void StorageRecord::clear_body() {
// @@protoc_insertion_point(one_of_clear_start:thalamus_grpc.StorageRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (body_case()) {
    case kAnalog: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.analog_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.analog_);
      }
      break;
    }
    case kXsens: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.xsens_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.xsens_);
      }
      break;
    }
    case kEvent: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.event_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.event_);
      }
      break;
    }
    case kImage: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.image_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.image_);
      }
      break;
    }
    case kText: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.text_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.text_);
      }
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BODY_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
StorageRecord::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StorageRecord, _impl_._cached_size_),
              false,
          },
          &StorageRecord::MergeImpl,
          &StorageRecord::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 7, 5, 40, 2> StorageRecord::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_StorageRecord_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::StorageRecord>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 time = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StorageRecord, _impl_.time_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(StorageRecord, _impl_.time_)}},
    // string node = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(StorageRecord, _impl_.node_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .thalamus_grpc.AnalogResponse analog = 1;
    {PROTOBUF_FIELD_OFFSET(StorageRecord, _impl_.body_.analog_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .thalamus_grpc.XsensResponse xsens = 2;
    {PROTOBUF_FIELD_OFFSET(StorageRecord, _impl_.body_.xsens_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .thalamus_grpc.Event event = 3;
    {PROTOBUF_FIELD_OFFSET(StorageRecord, _impl_.body_.event_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint64 time = 4;
    {PROTOBUF_FIELD_OFFSET(StorageRecord, _impl_.time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string node = 5;
    {PROTOBUF_FIELD_OFFSET(StorageRecord, _impl_.node_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .thalamus_grpc.Image image = 6;
    {PROTOBUF_FIELD_OFFSET(StorageRecord, _impl_.body_.image_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .thalamus_grpc.Text text = 7;
    {PROTOBUF_FIELD_OFFSET(StorageRecord, _impl_.body_.text_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::AnalogResponse>()},
    {::_pbi::TcParser::GetTable<::thalamus_grpc::XsensResponse>()},
    {::_pbi::TcParser::GetTable<::thalamus_grpc::Event>()},
    {::_pbi::TcParser::GetTable<::thalamus_grpc::Image>()},
    {::_pbi::TcParser::GetTable<::thalamus_grpc::Text>()},
  }}, {{
    "\33\0\0\0\0\4\0\0"
    "thalamus_grpc.StorageRecord"
    "node"
  }},
};

PROTOBUF_NOINLINE void StorageRecord::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.StorageRecord)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.node_.ClearToEmpty();
  _impl_.time_ = ::uint64_t{0u};
  clear_body();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StorageRecord::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.StorageRecord)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (body_case()) {
    case kAnalog: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.body_.analog_, _impl_.body_.analog_->GetCachedSize(), target, stream);
      break;
    }
    case kXsens: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.body_.xsens_, _impl_.body_.xsens_->GetCachedSize(), target, stream);
      break;
    }
    case kEvent: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.body_.event_, _impl_.body_.event_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  // uint64 time = 4;
  if (this->_internal_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_time(), target);
  }

  // string node = 5;
  if (!this->_internal_node().empty()) {
    const std::string& _s = this->_internal_node();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.StorageRecord.node");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  switch (body_case()) {
    case kImage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, *_impl_.body_.image_, _impl_.body_.image_->GetCachedSize(), target, stream);
      break;
    }
    case kText: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, *_impl_.body_.text_, _impl_.body_.text_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.StorageRecord)
  return target;
}

::size_t StorageRecord::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.StorageRecord)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string node = 5;
  if (!this->_internal_node().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_node());
  }

  // uint64 time = 4;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_time());
  }

  switch (body_case()) {
    // .thalamus_grpc.AnalogResponse analog = 1;
    case kAnalog: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_.analog_);
      break;
    }
    // .thalamus_grpc.XsensResponse xsens = 2;
    case kXsens: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_.xsens_);
      break;
    }
    // .thalamus_grpc.Event event = 3;
    case kEvent: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_.event_);
      break;
    }
    // .thalamus_grpc.Image image = 6;
    case kImage: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_.image_);
      break;
    }
    // .thalamus_grpc.Text text = 7;
    case kText: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_.text_);
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StorageRecord::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StorageRecord*>(&to_msg);
  auto& from = static_cast<const StorageRecord&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.StorageRecord)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_node().empty()) {
    _this->_internal_set_node(from._internal_node());
  }
  if (from._internal_time() != 0) {
    _this->_impl_.time_ = from._impl_.time_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_body();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kAnalog: {
        if (oneof_needs_init) {
          _this->_impl_.body_.analog_ =
              ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::AnalogResponse>(arena, *from._impl_.body_.analog_);
        } else {
          _this->_impl_.body_.analog_->MergeFrom(from._internal_analog());
        }
        break;
      }
      case kXsens: {
        if (oneof_needs_init) {
          _this->_impl_.body_.xsens_ =
              ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::XsensResponse>(arena, *from._impl_.body_.xsens_);
        } else {
          _this->_impl_.body_.xsens_->MergeFrom(from._internal_xsens());
        }
        break;
      }
      case kEvent: {
        if (oneof_needs_init) {
          _this->_impl_.body_.event_ =
              ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::Event>(arena, *from._impl_.body_.event_);
        } else {
          _this->_impl_.body_.event_->MergeFrom(from._internal_event());
        }
        break;
      }
      case kImage: {
        if (oneof_needs_init) {
          _this->_impl_.body_.image_ =
              ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::Image>(arena, *from._impl_.body_.image_);
        } else {
          _this->_impl_.body_.image_->MergeFrom(from._internal_image());
        }
        break;
      }
      case kText: {
        if (oneof_needs_init) {
          _this->_impl_.body_.text_ =
              ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::Text>(arena, *from._impl_.body_.text_);
        } else {
          _this->_impl_.body_.text_->MergeFrom(from._internal_text());
        }
        break;
      }
      case BODY_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StorageRecord::CopyFrom(const StorageRecord& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.StorageRecord)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StorageRecord::InternalSwap(StorageRecord* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.node_, &other->_impl_.node_, arena);
        swap(_impl_.time_, other->_impl_.time_);
  swap(_impl_.body_, other->_impl_.body_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata StorageRecord::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ImageRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ImageRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ImageRequest, _impl_._has_bits_);
};

ImageRequest::ImageRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.ImageRequest)
}
inline PROTOBUF_NDEBUG_INLINE ImageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::ImageRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ImageRequest::ImageRequest(
    ::google::protobuf::Arena* arena,
    const ImageRequest& from)
    : ::google::protobuf::Message(arena) {
  ImageRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::NodeSelector>(
                              arena, *from._impl_.node_)
                        : nullptr;
  _impl_.framerate_ = from._impl_.framerate_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.ImageRequest)
}
inline PROTOBUF_NDEBUG_INLINE ImageRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ImageRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_),
           0,
           offsetof(Impl_, framerate_) -
               offsetof(Impl_, node_) +
               sizeof(Impl_::framerate_));
}
ImageRequest::~ImageRequest() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.ImageRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ImageRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.node_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ImageRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ImageRequest, _impl_._cached_size_),
              false,
          },
          &ImageRequest::MergeImpl,
          &ImageRequest::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> ImageRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ImageRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ImageRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::ImageRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double framerate = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(ImageRequest, _impl_.framerate_)}},
    // .thalamus_grpc.NodeSelector node = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ImageRequest, _impl_.node_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .thalamus_grpc.NodeSelector node = 1;
    {PROTOBUF_FIELD_OFFSET(ImageRequest, _impl_.node_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double framerate = 2;
    {PROTOBUF_FIELD_OFFSET(ImageRequest, _impl_.framerate_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::NodeSelector>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.ImageRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_ != nullptr);
    _impl_.node_->Clear();
  }
  _impl_.framerate_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ImageRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.ImageRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .thalamus_grpc.NodeSelector node = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.node_, _impl_.node_->GetCachedSize(), target, stream);
  }

  // double framerate = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_framerate = this->_internal_framerate();
  ::uint64_t raw_framerate;
  memcpy(&raw_framerate, &tmp_framerate, sizeof(tmp_framerate));
  if (raw_framerate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_framerate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.ImageRequest)
  return target;
}

::size_t ImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.ImageRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .thalamus_grpc.NodeSelector node = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.node_);
  }

  // double framerate = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_framerate = this->_internal_framerate();
  ::uint64_t raw_framerate;
  memcpy(&raw_framerate, &tmp_framerate, sizeof(tmp_framerate));
  if (raw_framerate != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ImageRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ImageRequest*>(&to_msg);
  auto& from = static_cast<const ImageRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.ImageRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_ != nullptr);
    if (_this->_impl_.node_ == nullptr) {
      _this->_impl_.node_ =
          ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::NodeSelector>(arena, *from._impl_.node_);
    } else {
      _this->_impl_.node_->MergeFrom(*from._impl_.node_);
    }
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_framerate = from._internal_framerate();
  ::uint64_t raw_framerate;
  memcpy(&raw_framerate, &tmp_framerate, sizeof(tmp_framerate));
  if (raw_framerate != 0) {
    _this->_impl_.framerate_ = from._impl_.framerate_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ImageRequest::CopyFrom(const ImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.ImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ImageRequest::InternalSwap(ImageRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ImageRequest, _impl_.framerate_)
      + sizeof(ImageRequest::_impl_.framerate_)
      - PROTOBUF_FIELD_OFFSET(ImageRequest, _impl_.node_)>(
          reinterpret_cast<char*>(&_impl_.node_),
          reinterpret_cast<char*>(&other->_impl_.node_));
}

::google::protobuf::Metadata ImageRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Image::_Internal {
 public:
};

Image::Image(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.Image)
}
inline PROTOBUF_NDEBUG_INLINE Image::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::Image& from_msg)
      : data_{visibility, arena, from.data_},
        _cached_size_{0} {}

Image::Image(
    ::google::protobuf::Arena* arena,
    const Image& from)
    : ::google::protobuf::Message(arena) {
  Image* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, width_),
           offsetof(Impl_, bigendian_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::bigendian_));

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.Image)
}
inline PROTOBUF_NDEBUG_INLINE Image::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        _cached_size_{0} {}

inline void Image::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, width_),
           0,
           offsetof(Impl_, bigendian_) -
               offsetof(Impl_, width_) +
               sizeof(Impl_::bigendian_));
}
Image::~Image() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.Image)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Image::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Image::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Image, _impl_._cached_size_),
              false,
          },
          &Image::MergeImpl,
          &Image::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 0, 2> Image::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Image_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::Image>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated bytes data = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.data_)}},
    // uint32 width = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Image, _impl_.width_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.width_)}},
    // uint32 height = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Image, _impl_.height_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.height_)}},
    // .thalamus_grpc.Image.Format format = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Image, _impl_.format_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.format_)}},
    // uint64 frame_interval = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Image, _impl_.frame_interval_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.frame_interval_)}},
    // bool last = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Image, _impl_.last_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.last_)}},
    // bool bigendian = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Image, _impl_.bigendian_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(Image, _impl_.bigendian_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // uint32 width = 2;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 height = 3;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .thalamus_grpc.Image.Format format = 4;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.format_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 frame_interval = 5;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.frame_interval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bool last = 6;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.last_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool bigendian = 7;
    {PROTOBUF_FIELD_OFFSET(Image, _impl_.bigendian_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Image::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.Image)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  ::memset(&_impl_.width_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bigendian_) -
      reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.bigendian_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Image::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.Image)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated bytes data = 1;
  for (int i = 0, n = this->_internal_data_size(); i < n; ++i) {
    const auto& s = this->_internal_data().Get(i);
    target = stream->WriteBytes(1, s, target);
  }

  // uint32 width = 2;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_width(), target);
  }

  // uint32 height = 3;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_height(), target);
  }

  // .thalamus_grpc.Image.Format format = 4;
  if (this->_internal_format() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_format(), target);
  }

  // uint64 frame_interval = 5;
  if (this->_internal_frame_interval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_frame_interval(), target);
  }

  // bool last = 6;
  if (this->_internal_last() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_last(), target);
  }

  // bool bigendian = 7;
  if (this->_internal_bigendian() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_bigendian(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.Image)
  return target;
}

::size_t Image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.Image)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated bytes data = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_data().size());
  for (int i = 0, n = _internal_data().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
        _internal_data().Get(i));
  }
  // uint32 width = 2;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_width());
  }

  // uint32 height = 3;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_height());
  }

  // uint64 frame_interval = 5;
  if (this->_internal_frame_interval() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_frame_interval());
  }

  // .thalamus_grpc.Image.Format format = 4;
  if (this->_internal_format() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_format());
  }

  // bool last = 6;
  if (this->_internal_last() != 0) {
    total_size += 2;
  }

  // bool bigendian = 7;
  if (this->_internal_bigendian() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Image::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Image*>(&to_msg);
  auto& from = static_cast<const Image&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.Image)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  if (from._internal_width() != 0) {
    _this->_impl_.width_ = from._impl_.width_;
  }
  if (from._internal_height() != 0) {
    _this->_impl_.height_ = from._impl_.height_;
  }
  if (from._internal_frame_interval() != 0) {
    _this->_impl_.frame_interval_ = from._impl_.frame_interval_;
  }
  if (from._internal_format() != 0) {
    _this->_impl_.format_ = from._impl_.format_;
  }
  if (from._internal_last() != 0) {
    _this->_impl_.last_ = from._impl_.last_;
  }
  if (from._internal_bigendian() != 0) {
    _this->_impl_.bigendian_ = from._impl_.bigendian_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Image::CopyFrom(const Image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.Image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Image::InternalSwap(Image* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Image, _impl_.bigendian_)
      + sizeof(Image::_impl_.bigendian_)
      - PROTOBUF_FIELD_OFFSET(Image, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata Image::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Ping::_Internal {
 public:
};

Ping::Ping(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.Ping)
}
inline PROTOBUF_NDEBUG_INLINE Ping::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::Ping& from_msg)
      : payload_(arena, from.payload_),
        _cached_size_{0} {}

Ping::Ping(
    ::google::protobuf::Arena* arena,
    const Ping& from)
    : ::google::protobuf::Message(arena) {
  Ping* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.Ping)
}
inline PROTOBUF_NDEBUG_INLINE Ping::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_(arena),
        _cached_size_{0} {}

inline void Ping::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
Ping::~Ping() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.Ping)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Ping::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.payload_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Ping::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Ping, _impl_._cached_size_),
              false,
          },
          &Ping::MergeImpl,
          &Ping::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Ping::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Ping_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::Ping>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes payload = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Ping, _impl_.payload_)}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Ping, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Ping, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Ping, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes payload = 2;
    {PROTOBUF_FIELD_OFFSET(Ping, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Ping::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.Ping)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  _impl_.id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Ping::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.Ping)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    const std::string& _s = this->_internal_payload();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.Ping)
  return target;
}

::size_t Ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.Ping)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_payload());
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Ping::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Ping*>(&to_msg);
  auto& from = static_cast<const Ping&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.Ping)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Ping::CopyFrom(const Ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.Ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Ping::InternalSwap(Ping* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata Ping::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Pong::_Internal {
 public:
};

Pong::Pong(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.Pong)
}
inline PROTOBUF_NDEBUG_INLINE Pong::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::Pong& from_msg)
      : payload_(arena, from.payload_),
        _cached_size_{0} {}

Pong::Pong(
    ::google::protobuf::Arena* arena,
    const Pong& from)
    : ::google::protobuf::Message(arena) {
  Pong* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.Pong)
}
inline PROTOBUF_NDEBUG_INLINE Pong::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_(arena),
        _cached_size_{0} {}

inline void Pong::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
Pong::~Pong() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.Pong)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Pong::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.payload_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Pong::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Pong, _impl_._cached_size_),
              false,
          },
          &Pong::MergeImpl,
          &Pong::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Pong::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967289,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Pong_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::Pong>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Pong, _impl_.id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Pong, _impl_.id_)}},
    // bytes payload = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Pong, _impl_.payload_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 2;
    {PROTOBUF_FIELD_OFFSET(Pong, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes payload = 3;
    {PROTOBUF_FIELD_OFFSET(Pong, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Pong::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.Pong)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  _impl_.id_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Pong::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.Pong)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_id(), target);
  }

  // bytes payload = 3;
  if (!this->_internal_payload().empty()) {
    const std::string& _s = this->_internal_payload();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.Pong)
  return target;
}

::size_t Pong::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.Pong)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes payload = 3;
  if (!this->_internal_payload().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_payload());
  }

  // uint32 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Pong::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Pong*>(&to_msg);
  auto& from = static_cast<const Pong&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.Pong)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Pong::CopyFrom(const Pong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.Pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Pong::InternalSwap(Pong* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata Pong::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoteNodeMessage::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::thalamus_grpc::RemoteNodeMessage, _impl_._oneof_case_);
};

void RemoteNodeMessage::set_allocated_request(::thalamus_grpc::AnalogRequest* request) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (request) {
    ::google::protobuf::Arena* submessage_arena = request->GetArena();
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(message_arena, request, submessage_arena);
    }
    set_has_request();
    _impl_.body_.request_ = request;
  }
  // @@protoc_insertion_point(field_set_allocated:thalamus_grpc.RemoteNodeMessage.request)
}
void RemoteNodeMessage::set_allocated_data(::thalamus_grpc::AnalogResponse* data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (data) {
    ::google::protobuf::Arena* submessage_arena = data->GetArena();
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(message_arena, data, submessage_arena);
    }
    set_has_data();
    _impl_.body_.data_ = data;
  }
  // @@protoc_insertion_point(field_set_allocated:thalamus_grpc.RemoteNodeMessage.data)
}
void RemoteNodeMessage::set_allocated_ping(::thalamus_grpc::Ping* ping) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (ping) {
    ::google::protobuf::Arena* submessage_arena = ping->GetArena();
    if (message_arena != submessage_arena) {
      ping = ::google::protobuf::internal::GetOwnedMessage(message_arena, ping, submessage_arena);
    }
    set_has_ping();
    _impl_.body_.ping_ = ping;
  }
  // @@protoc_insertion_point(field_set_allocated:thalamus_grpc.RemoteNodeMessage.ping)
}
void RemoteNodeMessage::set_allocated_pong(::thalamus_grpc::Pong* pong) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (pong) {
    ::google::protobuf::Arena* submessage_arena = pong->GetArena();
    if (message_arena != submessage_arena) {
      pong = ::google::protobuf::internal::GetOwnedMessage(message_arena, pong, submessage_arena);
    }
    set_has_pong();
    _impl_.body_.pong_ = pong;
  }
  // @@protoc_insertion_point(field_set_allocated:thalamus_grpc.RemoteNodeMessage.pong)
}
RemoteNodeMessage::RemoteNodeMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.RemoteNodeMessage)
}
inline PROTOBUF_NDEBUG_INLINE RemoteNodeMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::RemoteNodeMessage& from_msg)
      : body_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

RemoteNodeMessage::RemoteNodeMessage(
    ::google::protobuf::Arena* arena,
    const RemoteNodeMessage& from)
    : ::google::protobuf::Message(arena) {
  RemoteNodeMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (body_case()) {
    case BODY_NOT_SET:
      break;
      case kRequest:
        _impl_.body_.request_ = ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::AnalogRequest>(arena, *from._impl_.body_.request_);
        break;
      case kData:
        _impl_.body_.data_ = ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::AnalogResponse>(arena, *from._impl_.body_.data_);
        break;
      case kPing:
        _impl_.body_.ping_ = ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::Ping>(arena, *from._impl_.body_.ping_);
        break;
      case kPong:
        _impl_.body_.pong_ = ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::Pong>(arena, *from._impl_.body_.pong_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.RemoteNodeMessage)
}
inline PROTOBUF_NDEBUG_INLINE RemoteNodeMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : body_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void RemoteNodeMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RemoteNodeMessage::~RemoteNodeMessage() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.RemoteNodeMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RemoteNodeMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_body()) {
    clear_body();
  }
  _impl_.~Impl_();
}

void RemoteNodeMessage::clear_body() {
// @@protoc_insertion_point(one_of_clear_start:thalamus_grpc.RemoteNodeMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (body_case()) {
    case kRequest: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.request_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.request_);
      }
      break;
    }
    case kData: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.data_);
      }
      break;
    }
    case kPing: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.ping_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.ping_);
      }
      break;
    }
    case kPong: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.pong_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.pong_);
      }
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BODY_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
RemoteNodeMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(RemoteNodeMessage, _impl_._cached_size_),
              false,
          },
          &RemoteNodeMessage::MergeImpl,
          &RemoteNodeMessage::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2> RemoteNodeMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_RemoteNodeMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::RemoteNodeMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .thalamus_grpc.AnalogRequest request = 1;
    {PROTOBUF_FIELD_OFFSET(RemoteNodeMessage, _impl_.body_.request_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .thalamus_grpc.AnalogResponse data = 2;
    {PROTOBUF_FIELD_OFFSET(RemoteNodeMessage, _impl_.body_.data_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .thalamus_grpc.Ping ping = 3;
    {PROTOBUF_FIELD_OFFSET(RemoteNodeMessage, _impl_.body_.ping_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .thalamus_grpc.Pong pong = 4;
    {PROTOBUF_FIELD_OFFSET(RemoteNodeMessage, _impl_.body_.pong_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::AnalogRequest>()},
    {::_pbi::TcParser::GetTable<::thalamus_grpc::AnalogResponse>()},
    {::_pbi::TcParser::GetTable<::thalamus_grpc::Ping>()},
    {::_pbi::TcParser::GetTable<::thalamus_grpc::Pong>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void RemoteNodeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.RemoteNodeMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_body();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* RemoteNodeMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.RemoteNodeMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (body_case()) {
    case kRequest: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *_impl_.body_.request_, _impl_.body_.request_->GetCachedSize(), target, stream);
      break;
    }
    case kData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.body_.data_, _impl_.body_.data_->GetCachedSize(), target, stream);
      break;
    }
    case kPing: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *_impl_.body_.ping_, _impl_.body_.ping_->GetCachedSize(), target, stream);
      break;
    }
    case kPong: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.body_.pong_, _impl_.body_.pong_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.RemoteNodeMessage)
  return target;
}

::size_t RemoteNodeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.RemoteNodeMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (body_case()) {
    // .thalamus_grpc.AnalogRequest request = 1;
    case kRequest: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_.request_);
      break;
    }
    // .thalamus_grpc.AnalogResponse data = 2;
    case kData: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_.data_);
      break;
    }
    // .thalamus_grpc.Ping ping = 3;
    case kPing: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_.ping_);
      break;
    }
    // .thalamus_grpc.Pong pong = 4;
    case kPong: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_.pong_);
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void RemoteNodeMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoteNodeMessage*>(&to_msg);
  auto& from = static_cast<const RemoteNodeMessage&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.RemoteNodeMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_body();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kRequest: {
        if (oneof_needs_init) {
          _this->_impl_.body_.request_ =
              ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::AnalogRequest>(arena, *from._impl_.body_.request_);
        } else {
          _this->_impl_.body_.request_->MergeFrom(from._internal_request());
        }
        break;
      }
      case kData: {
        if (oneof_needs_init) {
          _this->_impl_.body_.data_ =
              ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::AnalogResponse>(arena, *from._impl_.body_.data_);
        } else {
          _this->_impl_.body_.data_->MergeFrom(from._internal_data());
        }
        break;
      }
      case kPing: {
        if (oneof_needs_init) {
          _this->_impl_.body_.ping_ =
              ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::Ping>(arena, *from._impl_.body_.ping_);
        } else {
          _this->_impl_.body_.ping_->MergeFrom(from._internal_ping());
        }
        break;
      }
      case kPong: {
        if (oneof_needs_init) {
          _this->_impl_.body_.pong_ =
              ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::Pong>(arena, *from._impl_.body_.pong_);
        } else {
          _this->_impl_.body_.pong_->MergeFrom(from._internal_pong());
        }
        break;
      }
      case BODY_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoteNodeMessage::CopyFrom(const RemoteNodeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.RemoteNodeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoteNodeMessage::InternalSwap(RemoteNodeMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.body_, other->_impl_.body_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata RemoteNodeMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReplayRequest::_Internal {
 public:
};

ReplayRequest::ReplayRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.ReplayRequest)
}
inline PROTOBUF_NDEBUG_INLINE ReplayRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::ReplayRequest& from_msg)
      : nodes_{visibility, arena, from.nodes_},
        filename_(arena, from.filename_),
        _cached_size_{0} {}

ReplayRequest::ReplayRequest(
    ::google::protobuf::Arena* arena,
    const ReplayRequest& from)
    : ::google::protobuf::Message(arena) {
  ReplayRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.ReplayRequest)
}
inline PROTOBUF_NDEBUG_INLINE ReplayRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : nodes_{visibility, arena},
        filename_(arena),
        _cached_size_{0} {}

inline void ReplayRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ReplayRequest::~ReplayRequest() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.ReplayRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReplayRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.filename_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReplayRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ReplayRequest, _impl_._cached_size_),
              false,
          },
          &ReplayRequest::MergeImpl,
          &ReplayRequest::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2> ReplayRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReplayRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::ReplayRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string nodes = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ReplayRequest, _impl_.nodes_)}},
    // string filename = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReplayRequest, _impl_.filename_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string filename = 1;
    {PROTOBUF_FIELD_OFFSET(ReplayRequest, _impl_.filename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string nodes = 2;
    {PROTOBUF_FIELD_OFFSET(ReplayRequest, _impl_.nodes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\33\10\5\0\0\0\0\0"
    "thalamus_grpc.ReplayRequest"
    "filename"
    "nodes"
  }},
};

PROTOBUF_NOINLINE void ReplayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.ReplayRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.nodes_.Clear();
  _impl_.filename_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ReplayRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.ReplayRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string filename = 1;
  if (!this->_internal_filename().empty()) {
    const std::string& _s = this->_internal_filename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.ReplayRequest.filename");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated string nodes = 2;
  for (int i = 0, n = this->_internal_nodes_size(); i < n; ++i) {
    const auto& s = this->_internal_nodes().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.ReplayRequest.nodes");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.ReplayRequest)
  return target;
}

::size_t ReplayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.ReplayRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string nodes = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_nodes().size());
  for (int i = 0, n = _internal_nodes().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_nodes().Get(i));
  }
  // string filename = 1;
  if (!this->_internal_filename().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_filename());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReplayRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReplayRequest*>(&to_msg);
  auto& from = static_cast<const ReplayRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.ReplayRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_nodes()->MergeFrom(from._internal_nodes());
  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReplayRequest::CopyFrom(const ReplayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.ReplayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReplayRequest::InternalSwap(ReplayRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.nodes_.InternalSwap(&other->_impl_.nodes_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, &other->_impl_.filename_, arena);
}

::google::protobuf::Metadata ReplayRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class XsensSegment::_Internal {
 public:
};

XsensSegment::XsensSegment(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.XsensSegment)
}
XsensSegment::XsensSegment(
    ::google::protobuf::Arena* arena, const XsensSegment& from)
    : XsensSegment(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE XsensSegment::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void XsensSegment::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, time_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::time_));
}
XsensSegment::~XsensSegment() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.XsensSegment)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void XsensSegment::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
XsensSegment::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_._cached_size_),
              false,
          },
          &XsensSegment::MergeImpl,
          &XsensSegment::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 0, 0, 2> XsensSegment::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_XsensSegment_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::XsensSegment>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(XsensSegment, _impl_.id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.id_)}},
    // float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.x_)}},
    // float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.y_)}},
    // float z = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.z_)}},
    // float q0 = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.q0_)}},
    // float q1 = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.q1_)}},
    // float q2 = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.q2_)}},
    // float q3 = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.q3_)}},
    // uint32 frame = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(XsensSegment, _impl_.frame_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.frame_)}},
    // uint32 time = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(XsensSegment, _impl_.time_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.time_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float x = 2;
    {PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 3;
    {PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 4;
    {PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float q0 = 5;
    {PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.q0_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float q1 = 6;
    {PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.q1_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float q2 = 7;
    {PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.q2_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float q3 = 8;
    {PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.q3_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // uint32 frame = 9;
    {PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.frame_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 time = 10;
    {PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void XsensSegment::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.XsensSegment)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.time_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.time_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* XsensSegment::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.XsensSegment)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // float x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_x(), target);
  }

  // float y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_y(), target);
  }

  // float z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_z(), target);
  }

  // float q0 = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_q0 = this->_internal_q0();
  ::uint32_t raw_q0;
  memcpy(&raw_q0, &tmp_q0, sizeof(tmp_q0));
  if (raw_q0 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_q0(), target);
  }

  // float q1 = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_q1 = this->_internal_q1();
  ::uint32_t raw_q1;
  memcpy(&raw_q1, &tmp_q1, sizeof(tmp_q1));
  if (raw_q1 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_q1(), target);
  }

  // float q2 = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_q2 = this->_internal_q2();
  ::uint32_t raw_q2;
  memcpy(&raw_q2, &tmp_q2, sizeof(tmp_q2));
  if (raw_q2 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_q2(), target);
  }

  // float q3 = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_q3 = this->_internal_q3();
  ::uint32_t raw_q3;
  memcpy(&raw_q3, &tmp_q3, sizeof(tmp_q3));
  if (raw_q3 != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_q3(), target);
  }

  // uint32 frame = 9;
  if (this->_internal_frame() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_frame(), target);
  }

  // uint32 time = 10;
  if (this->_internal_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        10, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.XsensSegment)
  return target;
}

::size_t XsensSegment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.XsensSegment)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  // float x = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float y = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  // float z = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 5;
  }

  // float q0 = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_q0 = this->_internal_q0();
  ::uint32_t raw_q0;
  memcpy(&raw_q0, &tmp_q0, sizeof(tmp_q0));
  if (raw_q0 != 0) {
    total_size += 5;
  }

  // float q1 = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_q1 = this->_internal_q1();
  ::uint32_t raw_q1;
  memcpy(&raw_q1, &tmp_q1, sizeof(tmp_q1));
  if (raw_q1 != 0) {
    total_size += 5;
  }

  // float q2 = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_q2 = this->_internal_q2();
  ::uint32_t raw_q2;
  memcpy(&raw_q2, &tmp_q2, sizeof(tmp_q2));
  if (raw_q2 != 0) {
    total_size += 5;
  }

  // float q3 = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_q3 = this->_internal_q3();
  ::uint32_t raw_q3;
  memcpy(&raw_q3, &tmp_q3, sizeof(tmp_q3));
  if (raw_q3 != 0) {
    total_size += 5;
  }

  // uint32 frame = 9;
  if (this->_internal_frame() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_frame());
  }

  // uint32 time = 10;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void XsensSegment::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<XsensSegment*>(&to_msg);
  auto& from = static_cast<const XsensSegment&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.XsensSegment)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_q0 = from._internal_q0();
  ::uint32_t raw_q0;
  memcpy(&raw_q0, &tmp_q0, sizeof(tmp_q0));
  if (raw_q0 != 0) {
    _this->_impl_.q0_ = from._impl_.q0_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_q1 = from._internal_q1();
  ::uint32_t raw_q1;
  memcpy(&raw_q1, &tmp_q1, sizeof(tmp_q1));
  if (raw_q1 != 0) {
    _this->_impl_.q1_ = from._impl_.q1_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_q2 = from._internal_q2();
  ::uint32_t raw_q2;
  memcpy(&raw_q2, &tmp_q2, sizeof(tmp_q2));
  if (raw_q2 != 0) {
    _this->_impl_.q2_ = from._impl_.q2_;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_q3 = from._internal_q3();
  ::uint32_t raw_q3;
  memcpy(&raw_q3, &tmp_q3, sizeof(tmp_q3));
  if (raw_q3 != 0) {
    _this->_impl_.q3_ = from._impl_.q3_;
  }
  if (from._internal_frame() != 0) {
    _this->_impl_.frame_ = from._impl_.frame_;
  }
  if (from._internal_time() != 0) {
    _this->_impl_.time_ = from._impl_.time_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void XsensSegment::CopyFrom(const XsensSegment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.XsensSegment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void XsensSegment::InternalSwap(XsensSegment* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.time_)
      + sizeof(XsensSegment::_impl_.time_)
      - PROTOBUF_FIELD_OFFSET(XsensSegment, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata XsensSegment::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class XsensResponse::_Internal {
 public:
};

XsensResponse::XsensResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.XsensResponse)
}
inline PROTOBUF_NDEBUG_INLINE XsensResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::XsensResponse& from_msg)
      : segments_{visibility, arena, from.segments_},
        pose_name_(arena, from.pose_name_),
        _cached_size_{0} {}

XsensResponse::XsensResponse(
    ::google::protobuf::Arena* arena,
    const XsensResponse& from)
    : ::google::protobuf::Message(arena) {
  XsensResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.XsensResponse)
}
inline PROTOBUF_NDEBUG_INLINE XsensResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : segments_{visibility, arena},
        pose_name_(arena),
        _cached_size_{0} {}

inline void XsensResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
XsensResponse::~XsensResponse() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.XsensResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void XsensResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.pose_name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
XsensResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(XsensResponse, _impl_._cached_size_),
              false,
          },
          &XsensResponse::MergeImpl,
          &XsensResponse::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 45, 2> XsensResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_XsensResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::XsensResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string pose_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(XsensResponse, _impl_.pose_name_)}},
    // repeated .thalamus_grpc.XsensSegment segments = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(XsensResponse, _impl_.segments_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .thalamus_grpc.XsensSegment segments = 1;
    {PROTOBUF_FIELD_OFFSET(XsensResponse, _impl_.segments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string pose_name = 2;
    {PROTOBUF_FIELD_OFFSET(XsensResponse, _impl_.pose_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::XsensSegment>()},
  }}, {{
    "\33\0\11\0\0\0\0\0"
    "thalamus_grpc.XsensResponse"
    "pose_name"
  }},
};

PROTOBUF_NOINLINE void XsensResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.XsensResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.segments_.Clear();
  _impl_.pose_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* XsensResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.XsensResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .thalamus_grpc.XsensSegment segments = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_segments_size());
       i < n; i++) {
    const auto& repfield = this->_internal_segments().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string pose_name = 2;
  if (!this->_internal_pose_name().empty()) {
    const std::string& _s = this->_internal_pose_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.XsensResponse.pose_name");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.XsensResponse)
  return target;
}

::size_t XsensResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.XsensResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .thalamus_grpc.XsensSegment segments = 1;
  total_size += 1UL * this->_internal_segments_size();
  for (const auto& msg : this->_internal_segments()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string pose_name = 2;
  if (!this->_internal_pose_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_pose_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void XsensResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<XsensResponse*>(&to_msg);
  auto& from = static_cast<const XsensResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.XsensResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_segments()->MergeFrom(
      from._internal_segments());
  if (!from._internal_pose_name().empty()) {
    _this->_internal_set_pose_name(from._internal_pose_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void XsensResponse::CopyFrom(const XsensResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.XsensResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void XsensResponse::InternalSwap(XsensResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.segments_.InternalSwap(&other->_impl_.segments_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pose_name_, &other->_impl_.pose_name_, arena);
}

::google::protobuf::Metadata XsensResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StringMessage::_Internal {
 public:
};

StringMessage::StringMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.StringMessage)
}
inline PROTOBUF_NDEBUG_INLINE StringMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::StringMessage& from_msg)
      : value_(arena, from.value_),
        _cached_size_{0} {}

StringMessage::StringMessage(
    ::google::protobuf::Arena* arena,
    const StringMessage& from)
    : ::google::protobuf::Message(arena) {
  StringMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.StringMessage)
}
inline PROTOBUF_NDEBUG_INLINE StringMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_(arena),
        _cached_size_{0} {}

inline void StringMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StringMessage::~StringMessage() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.StringMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StringMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StringMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StringMessage, _impl_._cached_size_),
              false,
          },
          &StringMessage::MergeImpl,
          &StringMessage::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2> StringMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StringMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::StringMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StringMessage, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string value = 1;
    {PROTOBUF_FIELD_OFFSET(StringMessage, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\5\0\0\0\0\0\0"
    "thalamus_grpc.StringMessage"
    "value"
  }},
};

PROTOBUF_NOINLINE void StringMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.StringMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StringMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.StringMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string value = 1;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.StringMessage.value");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.StringMessage)
  return target;
}

::size_t StringMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.StringMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StringMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StringMessage*>(&to_msg);
  auto& from = static_cast<const StringMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.StringMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StringMessage::CopyFrom(const StringMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.StringMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StringMessage::InternalSwap(StringMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata StringMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ModalitiesMessage::_Internal {
 public:
};

ModalitiesMessage::ModalitiesMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.ModalitiesMessage)
}
inline PROTOBUF_NDEBUG_INLINE ModalitiesMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::ModalitiesMessage& from_msg)
      : values_{visibility, arena, from.values_},
        _values_cached_byte_size_{0},
        _cached_size_{0} {}

ModalitiesMessage::ModalitiesMessage(
    ::google::protobuf::Arena* arena,
    const ModalitiesMessage& from)
    : ::google::protobuf::Message(arena) {
  ModalitiesMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.ModalitiesMessage)
}
inline PROTOBUF_NDEBUG_INLINE ModalitiesMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _values_cached_byte_size_{0},
        _cached_size_{0} {}

inline void ModalitiesMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ModalitiesMessage::~ModalitiesMessage() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.ModalitiesMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ModalitiesMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ModalitiesMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ModalitiesMessage, _impl_._cached_size_),
              false,
          },
          &ModalitiesMessage::MergeImpl,
          &ModalitiesMessage::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ModalitiesMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ModalitiesMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::ModalitiesMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .thalamus_grpc.Modalities values = 1;
    {::_pbi::TcParser::FastV32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ModalitiesMessage, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .thalamus_grpc.Modalities values = 1;
    {PROTOBUF_FIELD_OFFSET(ModalitiesMessage, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ModalitiesMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.ModalitiesMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ModalitiesMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.ModalitiesMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .thalamus_grpc.Modalities values = 1;
  {
    std::size_t byte_size = _impl_._values_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(1, _internal_values(),
                                       byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.ModalitiesMessage)
  return target;
}

::size_t ModalitiesMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.ModalitiesMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .thalamus_grpc.Modalities values = 1;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_values_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_values().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    if (data_size > 0) {
      total_size += 1;
      total_size += ::_pbi::WireFormatLite::Int32Size(
          static_cast<int32_t>(data_size));
    }
    _impl_._values_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ModalitiesMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ModalitiesMessage*>(&to_msg);
  auto& from = static_cast<const ModalitiesMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.ModalitiesMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ModalitiesMessage::CopyFrom(const ModalitiesMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.ModalitiesMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ModalitiesMessage::InternalSwap(ModalitiesMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata ModalitiesMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StringListMessage::_Internal {
 public:
};

StringListMessage::StringListMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.StringListMessage)
}
inline PROTOBUF_NDEBUG_INLINE StringListMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::StringListMessage& from_msg)
      : value_{visibility, arena, from.value_},
        _cached_size_{0} {}

StringListMessage::StringListMessage(
    ::google::protobuf::Arena* arena,
    const StringListMessage& from)
    : ::google::protobuf::Message(arena) {
  StringListMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.StringListMessage)
}
inline PROTOBUF_NDEBUG_INLINE StringListMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{visibility, arena},
        _cached_size_{0} {}

inline void StringListMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StringListMessage::~StringListMessage() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.StringListMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StringListMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
StringListMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(StringListMessage, _impl_._cached_size_),
              false,
          },
          &StringListMessage::MergeImpl,
          &StringListMessage::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 45, 2> StringListMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_StringListMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::StringListMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string value = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StringListMessage, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string value = 1;
    {PROTOBUF_FIELD_OFFSET(StringListMessage, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\37\5\0\0\0\0\0\0"
    "thalamus_grpc.StringListMessage"
    "value"
  }},
};

PROTOBUF_NOINLINE void StringListMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.StringListMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* StringListMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.StringListMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string value = 1;
  for (int i = 0, n = this->_internal_value_size(); i < n; ++i) {
    const auto& s = this->_internal_value().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.StringListMessage.value");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.StringListMessage)
  return target;
}

::size_t StringListMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.StringListMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated string value = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_value().size());
  for (int i = 0, n = _internal_value().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_value().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void StringListMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StringListMessage*>(&to_msg);
  auto& from = static_cast<const StringListMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.StringListMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_value()->MergeFrom(from._internal_value());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StringListMessage::CopyFrom(const StringListMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.StringListMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StringListMessage::InternalSwap(StringListMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::google::protobuf::Metadata StringListMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EvalResponse::_Internal {
 public:
};

EvalResponse::EvalResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.EvalResponse)
}
inline PROTOBUF_NDEBUG_INLINE EvalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::EvalResponse& from_msg)
      : value_(arena, from.value_),
        _cached_size_{0} {}

EvalResponse::EvalResponse(
    ::google::protobuf::Arena* arena,
    const EvalResponse& from)
    : ::google::protobuf::Message(arena) {
  EvalResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.EvalResponse)
}
inline PROTOBUF_NDEBUG_INLINE EvalResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_(arena),
        _cached_size_{0} {}

inline void EvalResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
EvalResponse::~EvalResponse() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.EvalResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EvalResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
EvalResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(EvalResponse, _impl_._cached_size_),
              false,
          },
          &EvalResponse::MergeImpl,
          &EvalResponse::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 40, 2> EvalResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EvalResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::EvalResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EvalResponse, _impl_.id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EvalResponse, _impl_.id_)}},
    // string value = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EvalResponse, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string value = 1;
    {PROTOBUF_FIELD_OFFSET(EvalResponse, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 id = 2;
    {PROTOBUF_FIELD_OFFSET(EvalResponse, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\32\5\0\0\0\0\0\0"
    "thalamus_grpc.EvalResponse"
    "value"
  }},
};

PROTOBUF_NOINLINE void EvalResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.EvalResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.ClearToEmpty();
  _impl_.id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* EvalResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.EvalResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string value = 1;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.EvalResponse.value");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.EvalResponse)
  return target;
}

::size_t EvalResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.EvalResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string value = 1;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  // uint64 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void EvalResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EvalResponse*>(&to_msg);
  auto& from = static_cast<const EvalResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.EvalResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EvalResponse::CopyFrom(const EvalResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.EvalResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EvalResponse::InternalSwap(EvalResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata EvalResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EvalRequest::_Internal {
 public:
};

EvalRequest::EvalRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.EvalRequest)
}
inline PROTOBUF_NDEBUG_INLINE EvalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::EvalRequest& from_msg)
      : code_(arena, from.code_),
        _cached_size_{0} {}

EvalRequest::EvalRequest(
    ::google::protobuf::Arena* arena,
    const EvalRequest& from)
    : ::google::protobuf::Message(arena) {
  EvalRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.EvalRequest)
}
inline PROTOBUF_NDEBUG_INLINE EvalRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : code_(arena),
        _cached_size_{0} {}

inline void EvalRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
EvalRequest::~EvalRequest() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.EvalRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void EvalRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.code_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
EvalRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(EvalRequest, _impl_._cached_size_),
              false,
          },
          &EvalRequest::MergeImpl,
          &EvalRequest::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> EvalRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_EvalRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::EvalRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EvalRequest, _impl_.id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(EvalRequest, _impl_.id_)}},
    // string code = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EvalRequest, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string code = 1;
    {PROTOBUF_FIELD_OFFSET(EvalRequest, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 id = 2;
    {PROTOBUF_FIELD_OFFSET(EvalRequest, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\31\4\0\0\0\0\0\0"
    "thalamus_grpc.EvalRequest"
    "code"
  }},
};

PROTOBUF_NOINLINE void EvalRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.EvalRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_.ClearToEmpty();
  _impl_.id_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* EvalRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.EvalRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.EvalRequest.code");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint64 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.EvalRequest)
  return target;
}

::size_t EvalRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.EvalRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string code = 1;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  // uint64 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void EvalRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EvalRequest*>(&to_msg);
  auto& from = static_cast<const EvalRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.EvalRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EvalRequest::CopyFrom(const EvalRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.EvalRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EvalRequest::InternalSwap(EvalRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata EvalRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AnalogRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<AnalogRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AnalogRequest, _impl_._has_bits_);
};

AnalogRequest::AnalogRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.AnalogRequest)
}
inline PROTOBUF_NDEBUG_INLINE AnalogRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::AnalogRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        channels_{visibility, arena, from.channels_},
        _channels_cached_byte_size_{0},
        channel_names_{visibility, arena, from.channel_names_} {}

AnalogRequest::AnalogRequest(
    ::google::protobuf::Arena* arena,
    const AnalogRequest& from)
    : ::google::protobuf::Message(arena) {
  AnalogRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::NodeSelector>(
                              arena, *from._impl_.node_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.AnalogRequest)
}
inline PROTOBUF_NDEBUG_INLINE AnalogRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        channels_{visibility, arena},
        _channels_cached_byte_size_{0},
        channel_names_{visibility, arena} {}

inline void AnalogRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.node_ = {};
}
AnalogRequest::~AnalogRequest() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.AnalogRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AnalogRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.node_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AnalogRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AnalogRequest, _impl_._cached_size_),
              false,
          },
          &AnalogRequest::MergeImpl,
          &AnalogRequest::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 49, 2> AnalogRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AnalogRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AnalogRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::AnalogRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .thalamus_grpc.NodeSelector node = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AnalogRequest, _impl_.node_)}},
    // repeated int32 channels = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnalogRequest, _impl_.channels_)}},
    // repeated string channel_names = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AnalogRequest, _impl_.channel_names_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .thalamus_grpc.NodeSelector node = 1;
    {PROTOBUF_FIELD_OFFSET(AnalogRequest, _impl_.node_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 channels = 2;
    {PROTOBUF_FIELD_OFFSET(AnalogRequest, _impl_.channels_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated string channel_names = 3;
    {PROTOBUF_FIELD_OFFSET(AnalogRequest, _impl_.channel_names_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::NodeSelector>()},
  }}, {{
    "\33\0\0\15\0\0\0\0"
    "thalamus_grpc.AnalogRequest"
    "channel_names"
  }},
};

PROTOBUF_NOINLINE void AnalogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.AnalogRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channels_.Clear();
  _impl_.channel_names_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_ != nullptr);
    _impl_.node_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* AnalogRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.AnalogRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .thalamus_grpc.NodeSelector node = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.node_, _impl_.node_->GetCachedSize(), target, stream);
  }

  // repeated int32 channels = 2;
  {
    int byte_size = _impl_._channels_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_channels(), byte_size, target);
    }
  }

  // repeated string channel_names = 3;
  for (int i = 0, n = this->_internal_channel_names_size(); i < n; ++i) {
    const auto& s = this->_internal_channel_names().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.AnalogRequest.channel_names");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.AnalogRequest)
  return target;
}

::size_t AnalogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.AnalogRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated int32 channels = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_channels())
    ;
    _impl_._channels_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated string channel_names = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_channel_names().size());
  for (int i = 0, n = _internal_channel_names().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_channel_names().Get(i));
  }
  // .thalamus_grpc.NodeSelector node = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.node_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AnalogRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnalogRequest*>(&to_msg);
  auto& from = static_cast<const AnalogRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.AnalogRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channels()->MergeFrom(from._internal_channels());
  _this->_internal_mutable_channel_names()->MergeFrom(from._internal_channel_names());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_ != nullptr);
    if (_this->_impl_.node_ == nullptr) {
      _this->_impl_.node_ =
          ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::NodeSelector>(arena, *from._impl_.node_);
    } else {
      _this->_impl_.node_->MergeFrom(*from._impl_.node_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnalogRequest::CopyFrom(const AnalogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.AnalogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AnalogRequest::InternalSwap(AnalogRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.channels_.InternalSwap(&other->_impl_.channels_);
  _impl_.channel_names_.InternalSwap(&other->_impl_.channel_names_);
  swap(_impl_.node_, other->_impl_.node_);
}

::google::protobuf::Metadata AnalogRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InjectAnalogRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::thalamus_grpc::InjectAnalogRequest, _impl_._oneof_case_);
};

void InjectAnalogRequest::set_allocated_signal(::thalamus_grpc::AnalogResponse* signal) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (signal) {
    ::google::protobuf::Arena* submessage_arena = signal->GetArena();
    if (message_arena != submessage_arena) {
      signal = ::google::protobuf::internal::GetOwnedMessage(message_arena, signal, submessage_arena);
    }
    set_has_signal();
    _impl_.body_.signal_ = signal;
  }
  // @@protoc_insertion_point(field_set_allocated:thalamus_grpc.InjectAnalogRequest.signal)
}
InjectAnalogRequest::InjectAnalogRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.InjectAnalogRequest)
}
inline PROTOBUF_NDEBUG_INLINE InjectAnalogRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::InjectAnalogRequest& from_msg)
      : body_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

InjectAnalogRequest::InjectAnalogRequest(
    ::google::protobuf::Arena* arena,
    const InjectAnalogRequest& from)
    : ::google::protobuf::Message(arena) {
  InjectAnalogRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (body_case()) {
    case BODY_NOT_SET:
      break;
      case kNode:
        new (&_impl_.body_.node_) decltype(_impl_.body_.node_){arena, from._impl_.body_.node_};
        break;
      case kSignal:
        _impl_.body_.signal_ = ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::AnalogResponse>(arena, *from._impl_.body_.signal_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.InjectAnalogRequest)
}
inline PROTOBUF_NDEBUG_INLINE InjectAnalogRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : body_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void InjectAnalogRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InjectAnalogRequest::~InjectAnalogRequest() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.InjectAnalogRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InjectAnalogRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_body()) {
    clear_body();
  }
  _impl_.~Impl_();
}

void InjectAnalogRequest::clear_body() {
// @@protoc_insertion_point(one_of_clear_start:thalamus_grpc.InjectAnalogRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (body_case()) {
    case kNode: {
      _impl_.body_.node_.Destroy();
      break;
    }
    case kSignal: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.signal_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.signal_);
      }
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BODY_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
InjectAnalogRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(InjectAnalogRequest, _impl_._cached_size_),
              false,
          },
          &InjectAnalogRequest::MergeImpl,
          &InjectAnalogRequest::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 46, 2> InjectAnalogRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InjectAnalogRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::InjectAnalogRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string node = 1;
    {PROTOBUF_FIELD_OFFSET(InjectAnalogRequest, _impl_.body_.node_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .thalamus_grpc.AnalogResponse signal = 2;
    {PROTOBUF_FIELD_OFFSET(InjectAnalogRequest, _impl_.body_.signal_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::AnalogResponse>()},
  }}, {{
    "\41\4\0\0\0\0\0\0"
    "thalamus_grpc.InjectAnalogRequest"
    "node"
  }},
};

PROTOBUF_NOINLINE void InjectAnalogRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.InjectAnalogRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_body();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* InjectAnalogRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.InjectAnalogRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (body_case()) {
    case kNode: {
      const std::string& _s = this->_internal_node();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.InjectAnalogRequest.node");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kSignal: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.body_.signal_, _impl_.body_.signal_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.InjectAnalogRequest)
  return target;
}

::size_t InjectAnalogRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.InjectAnalogRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (body_case()) {
    // string node = 1;
    case kNode: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_node());
      break;
    }
    // .thalamus_grpc.AnalogResponse signal = 2;
    case kSignal: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_.signal_);
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void InjectAnalogRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InjectAnalogRequest*>(&to_msg);
  auto& from = static_cast<const InjectAnalogRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.InjectAnalogRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_body();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kNode: {
        if (oneof_needs_init) {
          _this->_impl_.body_.node_.InitDefault();
        }
        _this->_impl_.body_.node_.Set(from._internal_node(), arena);
        break;
      }
      case kSignal: {
        if (oneof_needs_init) {
          _this->_impl_.body_.signal_ =
              ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::AnalogResponse>(arena, *from._impl_.body_.signal_);
        } else {
          _this->_impl_.body_.signal_->MergeFrom(from._internal_signal());
        }
        break;
      }
      case BODY_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InjectAnalogRequest::CopyFrom(const InjectAnalogRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.InjectAnalogRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InjectAnalogRequest::InternalSwap(InjectAnalogRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.body_, other->_impl_.body_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata InjectAnalogRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InjectTextRequest::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::thalamus_grpc::InjectTextRequest, _impl_._oneof_case_);
};

void InjectTextRequest::set_allocated_text(::thalamus_grpc::Text* text) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_body();
  if (text) {
    ::google::protobuf::Arena* submessage_arena = text->GetArena();
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(message_arena, text, submessage_arena);
    }
    set_has_text();
    _impl_.body_.text_ = text;
  }
  // @@protoc_insertion_point(field_set_allocated:thalamus_grpc.InjectTextRequest.text)
}
InjectTextRequest::InjectTextRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.InjectTextRequest)
}
inline PROTOBUF_NDEBUG_INLINE InjectTextRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::InjectTextRequest& from_msg)
      : body_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

InjectTextRequest::InjectTextRequest(
    ::google::protobuf::Arena* arena,
    const InjectTextRequest& from)
    : ::google::protobuf::Message(arena) {
  InjectTextRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (body_case()) {
    case BODY_NOT_SET:
      break;
      case kNode:
        new (&_impl_.body_.node_) decltype(_impl_.body_.node_){arena, from._impl_.body_.node_};
        break;
      case kText:
        _impl_.body_.text_ = ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::Text>(arena, *from._impl_.body_.text_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.InjectTextRequest)
}
inline PROTOBUF_NDEBUG_INLINE InjectTextRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : body_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void InjectTextRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InjectTextRequest::~InjectTextRequest() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.InjectTextRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InjectTextRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_body()) {
    clear_body();
  }
  _impl_.~Impl_();
}

void InjectTextRequest::clear_body() {
// @@protoc_insertion_point(one_of_clear_start:thalamus_grpc.InjectTextRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (body_case()) {
    case kNode: {
      _impl_.body_.node_.Destroy();
      break;
    }
    case kText: {
      if (GetArena() == nullptr) {
        delete _impl_.body_.text_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.body_.text_);
      }
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BODY_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
InjectTextRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(InjectTextRequest, _impl_._cached_size_),
              false,
          },
          &InjectTextRequest::MergeImpl,
          &InjectTextRequest::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 44, 2> InjectTextRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_InjectTextRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::InjectTextRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string node = 1;
    {PROTOBUF_FIELD_OFFSET(InjectTextRequest, _impl_.body_.node_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .thalamus_grpc.Text text = 2;
    {PROTOBUF_FIELD_OFFSET(InjectTextRequest, _impl_.body_.text_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::Text>()},
  }}, {{
    "\37\4\0\0\0\0\0\0"
    "thalamus_grpc.InjectTextRequest"
    "node"
  }},
};

PROTOBUF_NOINLINE void InjectTextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.InjectTextRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_body();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* InjectTextRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.InjectTextRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (body_case()) {
    case kNode: {
      const std::string& _s = this->_internal_node();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.InjectTextRequest.node");
      target = stream->WriteStringMaybeAliased(1, _s, target);
      break;
    }
    case kText: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *_impl_.body_.text_, _impl_.body_.text_->GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.InjectTextRequest)
  return target;
}

::size_t InjectTextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.InjectTextRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (body_case()) {
    // string node = 1;
    case kNode: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_node());
      break;
    }
    // .thalamus_grpc.Text text = 2;
    case kText: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.body_.text_);
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void InjectTextRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InjectTextRequest*>(&to_msg);
  auto& from = static_cast<const InjectTextRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.InjectTextRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_body();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kNode: {
        if (oneof_needs_init) {
          _this->_impl_.body_.node_.InitDefault();
        }
        _this->_impl_.body_.node_.Set(from._internal_node(), arena);
        break;
      }
      case kText: {
        if (oneof_needs_init) {
          _this->_impl_.body_.text_ =
              ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::Text>(arena, *from._impl_.body_.text_);
        } else {
          _this->_impl_.body_.text_->MergeFrom(from._internal_text());
        }
        break;
      }
      case BODY_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InjectTextRequest::CopyFrom(const InjectTextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.InjectTextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InjectTextRequest::InternalSwap(InjectTextRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.body_, other->_impl_.body_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata InjectTextRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AnalogResponse::_Internal {
 public:
};

AnalogResponse::AnalogResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.AnalogResponse)
}
inline PROTOBUF_NDEBUG_INLINE AnalogResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::AnalogResponse& from_msg)
      : data_{visibility, arena, from.data_},
        spans_{visibility, arena, from.spans_},
        sample_intervals_{visibility, arena, from.sample_intervals_},
        _sample_intervals_cached_byte_size_{0},
        _cached_size_{0} {}

AnalogResponse::AnalogResponse(
    ::google::protobuf::Arena* arena,
    const AnalogResponse& from)
    : ::google::protobuf::Message(arena) {
  AnalogResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.channels_changed_ = from._impl_.channels_changed_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.AnalogResponse)
}
inline PROTOBUF_NDEBUG_INLINE AnalogResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_{visibility, arena},
        spans_{visibility, arena},
        sample_intervals_{visibility, arena},
        _sample_intervals_cached_byte_size_{0},
        _cached_size_{0} {}

inline void AnalogResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.channels_changed_ = {};
}
AnalogResponse::~AnalogResponse() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.AnalogResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AnalogResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
AnalogResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(AnalogResponse, _impl_._cached_size_),
              false,
          },
          &AnalogResponse::MergeImpl,
          &AnalogResponse::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> AnalogResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AnalogResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::AnalogResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool channels_changed = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AnalogResponse, _impl_.channels_changed_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AnalogResponse, _impl_.channels_changed_)}},
    // repeated double data = 1;
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AnalogResponse, _impl_.data_)}},
    // repeated .thalamus_grpc.Span spans = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AnalogResponse, _impl_.spans_)}},
    // repeated uint64 sample_intervals = 3;
    {::_pbi::TcParser::FastV64P1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AnalogResponse, _impl_.sample_intervals_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double data = 1;
    {PROTOBUF_FIELD_OFFSET(AnalogResponse, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated .thalamus_grpc.Span spans = 2;
    {PROTOBUF_FIELD_OFFSET(AnalogResponse, _impl_.spans_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated uint64 sample_intervals = 3;
    {PROTOBUF_FIELD_OFFSET(AnalogResponse, _impl_.sample_intervals_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedUInt64)},
    // bool channels_changed = 4;
    {PROTOBUF_FIELD_OFFSET(AnalogResponse, _impl_.channels_changed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::Span>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void AnalogResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.AnalogResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.spans_.Clear();
  _impl_.sample_intervals_.Clear();
  _impl_.channels_changed_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* AnalogResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.AnalogResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double data = 1;
  if (this->_internal_data_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_data(), target);
  }

  // repeated .thalamus_grpc.Span spans = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_spans_size());
       i < n; i++) {
    const auto& repfield = this->_internal_spans().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated uint64 sample_intervals = 3;
  {
    int byte_size = _impl_._sample_intervals_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          3, _internal_sample_intervals(), byte_size, target);
    }
  }

  // bool channels_changed = 4;
  if (this->_internal_channels_changed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_channels_changed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.AnalogResponse)
  return target;
}

::size_t AnalogResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.AnalogResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated double data = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_data_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .thalamus_grpc.Span spans = 2;
  total_size += 1UL * this->_internal_spans_size();
  for (const auto& msg : this->_internal_spans()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated uint64 sample_intervals = 3;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt64Size(
        this->_internal_sample_intervals())
    ;
    _impl_._sample_intervals_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // bool channels_changed = 4;
  if (this->_internal_channels_changed() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void AnalogResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AnalogResponse*>(&to_msg);
  auto& from = static_cast<const AnalogResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.AnalogResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_mutable_spans()->MergeFrom(
      from._internal_spans());
  _this->_internal_mutable_sample_intervals()->MergeFrom(from._internal_sample_intervals());
  if (from._internal_channels_changed() != 0) {
    _this->_impl_.channels_changed_ = from._impl_.channels_changed_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AnalogResponse::CopyFrom(const AnalogResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.AnalogResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AnalogResponse::InternalSwap(AnalogResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  _impl_.spans_.InternalSwap(&other->_impl_.spans_);
  _impl_.sample_intervals_.InternalSwap(&other->_impl_.sample_intervals_);
        swap(_impl_.channels_changed_, other->_impl_.channels_changed_);
}

::google::protobuf::Metadata AnalogResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GraphRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_._has_bits_);
};

GraphRequest::GraphRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.GraphRequest)
}
inline PROTOBUF_NDEBUG_INLINE GraphRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::GraphRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        channels_{visibility, arena, from.channels_},
        _channels_cached_byte_size_{0},
        channel_names_{visibility, arena, from.channel_names_} {}

GraphRequest::GraphRequest(
    ::google::protobuf::Arena* arena,
    const GraphRequest& from)
    : ::google::protobuf::Message(arena) {
  GraphRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.node_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::NodeSelector>(
                              arena, *from._impl_.node_)
                        : nullptr;
  _impl_.bin_ns_ = from._impl_.bin_ns_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.GraphRequest)
}
inline PROTOBUF_NDEBUG_INLINE GraphRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        channels_{visibility, arena},
        _channels_cached_byte_size_{0},
        channel_names_{visibility, arena} {}

inline void GraphRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, node_),
           0,
           offsetof(Impl_, bin_ns_) -
               offsetof(Impl_, node_) +
               sizeof(Impl_::bin_ns_));
}
GraphRequest::~GraphRequest() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.GraphRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GraphRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.node_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GraphRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_._cached_size_),
              false,
          },
          &GraphRequest::MergeImpl,
          &GraphRequest::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 48, 2> GraphRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GraphRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::GraphRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string channel_names = 4;
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_.channel_names_)}},
    // .thalamus_grpc.NodeSelector node = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_.node_)}},
    // repeated int32 channels = 2;
    {::_pbi::TcParser::FastV32P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_.channels_)}},
    // uint64 bin_ns = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GraphRequest, _impl_.bin_ns_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_.bin_ns_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .thalamus_grpc.NodeSelector node = 1;
    {PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_.node_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 channels = 2;
    {PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_.channels_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // uint64 bin_ns = 3;
    {PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_.bin_ns_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // repeated string channel_names = 4;
    {PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_.channel_names_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::NodeSelector>()},
  }}, {{
    "\32\0\0\0\15\0\0\0"
    "thalamus_grpc.GraphRequest"
    "channel_names"
  }},
};

PROTOBUF_NOINLINE void GraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.GraphRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.channels_.Clear();
  _impl_.channel_names_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.node_ != nullptr);
    _impl_.node_->Clear();
  }
  _impl_.bin_ns_ = ::uint64_t{0u};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* GraphRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.GraphRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .thalamus_grpc.NodeSelector node = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.node_, _impl_.node_->GetCachedSize(), target, stream);
  }

  // repeated int32 channels = 2;
  {
    int byte_size = _impl_._channels_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_channels(), byte_size, target);
    }
  }

  // uint64 bin_ns = 3;
  if (this->_internal_bin_ns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        3, this->_internal_bin_ns(), target);
  }

  // repeated string channel_names = 4;
  for (int i = 0, n = this->_internal_channel_names_size(); i < n; ++i) {
    const auto& s = this->_internal_channel_names().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.GraphRequest.channel_names");
    target = stream->WriteString(4, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.GraphRequest)
  return target;
}

::size_t GraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.GraphRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated int32 channels = 2;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_channels())
    ;
    _impl_._channels_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated string channel_names = 4;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_channel_names().size());
  for (int i = 0, n = _internal_channel_names().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_channel_names().Get(i));
  }
  // .thalamus_grpc.NodeSelector node = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.node_);
  }

  // uint64 bin_ns = 3;
  if (this->_internal_bin_ns() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_bin_ns());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GraphRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphRequest*>(&to_msg);
  auto& from = static_cast<const GraphRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.GraphRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_channels()->MergeFrom(from._internal_channels());
  _this->_internal_mutable_channel_names()->MergeFrom(from._internal_channel_names());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.node_ != nullptr);
    if (_this->_impl_.node_ == nullptr) {
      _this->_impl_.node_ =
          ::google::protobuf::Message::CopyConstruct<::thalamus_grpc::NodeSelector>(arena, *from._impl_.node_);
    } else {
      _this->_impl_.node_->MergeFrom(*from._impl_.node_);
    }
  }
  if (from._internal_bin_ns() != 0) {
    _this->_impl_.bin_ns_ = from._impl_.bin_ns_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphRequest::CopyFrom(const GraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.GraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphRequest::InternalSwap(GraphRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.channels_.InternalSwap(&other->_impl_.channels_);
  _impl_.channel_names_.InternalSwap(&other->_impl_.channel_names_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_.bin_ns_)
      + sizeof(GraphRequest::_impl_.bin_ns_)
      - PROTOBUF_FIELD_OFFSET(GraphRequest, _impl_.node_)>(
          reinterpret_cast<char*>(&_impl_.node_),
          reinterpret_cast<char*>(&other->_impl_.node_));
}

::google::protobuf::Metadata GraphRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Span::_Internal {
 public:
};

Span::Span(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.Span)
}
inline PROTOBUF_NDEBUG_INLINE Span::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::Span& from_msg)
      : name_(arena, from.name_),
        _cached_size_{0} {}

Span::Span(
    ::google::protobuf::Arena* arena,
    const Span& from)
    : ::google::protobuf::Message(arena) {
  Span* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, begin_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, begin_),
           offsetof(Impl_, end_) -
               offsetof(Impl_, begin_) +
               sizeof(Impl_::end_));

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.Span)
}
inline PROTOBUF_NDEBUG_INLINE Span::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : name_(arena),
        _cached_size_{0} {}

inline void Span::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, begin_),
           0,
           offsetof(Impl_, end_) -
               offsetof(Impl_, begin_) +
               sizeof(Impl_::end_));
}
Span::~Span() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.Span)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Span::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Span::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Span, _impl_._cached_size_),
              false,
          },
          &Span::MergeImpl,
          &Span::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 31, 2> Span::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Span_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::Span>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 begin = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Span, _impl_.begin_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Span, _impl_.begin_)}},
    // uint32 end = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Span, _impl_.end_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Span, _impl_.end_)}},
    // string name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Span, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 begin = 1;
    {PROTOBUF_FIELD_OFFSET(Span, _impl_.begin_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 end = 2;
    {PROTOBUF_FIELD_OFFSET(Span, _impl_.end_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string name = 3;
    {PROTOBUF_FIELD_OFFSET(Span, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\0\0\4\0\0\0\0"
    "thalamus_grpc.Span"
    "name"
  }},
};

PROTOBUF_NOINLINE void Span::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.Span)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.begin_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.end_) -
      reinterpret_cast<char*>(&_impl_.begin_)) + sizeof(_impl_.end_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Span::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.Span)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 begin = 1;
  if (this->_internal_begin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_begin(), target);
  }

  // uint32 end = 2;
  if (this->_internal_end() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_end(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.Span.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.Span)
  return target;
}

::size_t Span::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.Span)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // uint32 begin = 1;
  if (this->_internal_begin() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_begin());
  }

  // uint32 end = 2;
  if (this->_internal_end() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_end());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Span::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Span*>(&to_msg);
  auto& from = static_cast<const Span&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.Span)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_begin() != 0) {
    _this->_impl_.begin_ = from._impl_.begin_;
  }
  if (from._internal_end() != 0) {
    _this->_impl_.end_ = from._impl_.end_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Span::CopyFrom(const Span& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.Span)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Span::InternalSwap(Span* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Span, _impl_.end_)
      + sizeof(Span::_impl_.end_)
      - PROTOBUF_FIELD_OFFSET(Span, _impl_.begin_)>(
          reinterpret_cast<char*>(&_impl_.begin_),
          reinterpret_cast<char*>(&other->_impl_.begin_));
}

::google::protobuf::Metadata Span::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphResponse::_Internal {
 public:
};

GraphResponse::GraphResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.GraphResponse)
}
inline PROTOBUF_NDEBUG_INLINE GraphResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::GraphResponse& from_msg)
      : bins_{visibility, arena, from.bins_},
        spans_{visibility, arena, from.spans_},
        _cached_size_{0} {}

GraphResponse::GraphResponse(
    ::google::protobuf::Arena* arena,
    const GraphResponse& from)
    : ::google::protobuf::Message(arena) {
  GraphResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.channels_changed_ = from._impl_.channels_changed_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.GraphResponse)
}
inline PROTOBUF_NDEBUG_INLINE GraphResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bins_{visibility, arena},
        spans_{visibility, arena},
        _cached_size_{0} {}

inline void GraphResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.channels_changed_ = {};
}
GraphResponse::~GraphResponse() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.GraphResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GraphResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
GraphResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(GraphResponse, _impl_._cached_size_),
              false,
          },
          &GraphResponse::MergeImpl,
          &GraphResponse::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> GraphResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_GraphResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::GraphResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated double bins = 1;
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GraphResponse, _impl_.bins_)}},
    // repeated .thalamus_grpc.Span spans = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GraphResponse, _impl_.spans_)}},
    // bool channels_changed = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GraphResponse, _impl_.channels_changed_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(GraphResponse, _impl_.channels_changed_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double bins = 1;
    {PROTOBUF_FIELD_OFFSET(GraphResponse, _impl_.bins_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // repeated .thalamus_grpc.Span spans = 2;
    {PROTOBUF_FIELD_OFFSET(GraphResponse, _impl_.spans_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool channels_changed = 3;
    {PROTOBUF_FIELD_OFFSET(GraphResponse, _impl_.channels_changed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::thalamus_grpc::Span>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.GraphResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bins_.Clear();
  _impl_.spans_.Clear();
  _impl_.channels_changed_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* GraphResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.GraphResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double bins = 1;
  if (this->_internal_bins_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_bins(), target);
  }

  // repeated .thalamus_grpc.Span spans = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_spans_size());
       i < n; i++) {
    const auto& repfield = this->_internal_spans().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool channels_changed = 3;
  if (this->_internal_channels_changed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_channels_changed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.GraphResponse)
  return target;
}

::size_t GraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.GraphResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated double bins = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_bins_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .thalamus_grpc.Span spans = 2;
  total_size += 1UL * this->_internal_spans_size();
  for (const auto& msg : this->_internal_spans()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bool channels_changed = 3;
  if (this->_internal_channels_changed() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void GraphResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphResponse*>(&to_msg);
  auto& from = static_cast<const GraphResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.GraphResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bins()->MergeFrom(from._internal_bins());
  _this->_internal_mutable_spans()->MergeFrom(
      from._internal_spans());
  if (from._internal_channels_changed() != 0) {
    _this->_impl_.channels_changed_ = from._impl_.channels_changed_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphResponse::CopyFrom(const GraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.GraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphResponse::InternalSwap(GraphResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bins_.InternalSwap(&other->_impl_.bins_);
  _impl_.spans_.InternalSwap(&other->_impl_.spans_);
        swap(_impl_.channels_changed_, other->_impl_.channels_changed_);
}

::google::protobuf::Metadata GraphResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Event::_Internal {
 public:
};

Event::Event(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.Event)
}
inline PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::Event& from_msg)
      : payload_(arena, from.payload_),
        _cached_size_{0} {}

Event::Event(
    ::google::protobuf::Arena* arena,
    const Event& from)
    : ::google::protobuf::Message(arena) {
  Event* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.time_ = from._impl_.time_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.Event)
}
inline PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_(arena),
        _cached_size_{0} {}

inline void Event::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.time_ = {};
}
Event::~Event() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.Event)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Event::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.payload_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Event::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Event, _impl_._cached_size_),
              false,
          },
          &Event::MergeImpl,
          &Event::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> Event::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Event_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::Event>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint64 time = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Event, _impl_.time_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.time_)}},
    // bytes payload = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.payload_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes payload = 1;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // uint64 time = 2;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.Event)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  _impl_.time_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Event::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.Event)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes payload = 1;
  if (!this->_internal_payload().empty()) {
    const std::string& _s = this->_internal_payload();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  // uint64 time = 2;
  if (this->_internal_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        2, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.Event)
  return target;
}

::size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.Event)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // bytes payload = 1;
  if (!this->_internal_payload().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_payload());
  }

  // uint64 time = 2;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Event::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Event*>(&to_msg);
  auto& from = static_cast<const Event&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.Event)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (from._internal_time() != 0) {
    _this->_impl_.time_ = from._impl_.time_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Event::InternalSwap(Event* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
        swap(_impl_.time_, other->_impl_.time_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ObservableChange::_Internal {
 public:
};

ObservableChange::ObservableChange(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.ObservableChange)
}
inline PROTOBUF_NDEBUG_INLINE ObservableChange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::ObservableChange& from_msg)
      : address_(arena, from.address_),
        value_(arena, from.value_),
        _cached_size_{0} {}

ObservableChange::ObservableChange(
    ::google::protobuf::Arena* arena,
    const ObservableChange& from)
    : ::google::protobuf::Message(arena) {
  ObservableChange* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, action_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::action_));

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.ObservableChange)
}
inline PROTOBUF_NDEBUG_INLINE ObservableChange::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : address_(arena),
        value_(arena),
        _cached_size_{0} {}

inline void ObservableChange::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           0,
           offsetof(Impl_, action_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::action_));
}
ObservableChange::~ObservableChange() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.ObservableChange)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ObservableChange::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.address_.Destroy();
  _impl_.value_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ObservableChange::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_._cached_size_),
              false,
          },
          &ObservableChange::MergeImpl,
          &ObservableChange::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 51, 2> ObservableChange::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ObservableChange_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::ObservableChange>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string address = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_.address_)}},
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_.value_)}},
    // .thalamus_grpc.ObservableChange.Action action = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ObservableChange, _impl_.action_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_.action_)}},
    // uint64 id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ObservableChange, _impl_.id_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_.id_)}},
    // uint64 acknowledged = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ObservableChange, _impl_.acknowledged_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_.acknowledged_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string address = 1;
    {PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_.address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .thalamus_grpc.ObservableChange.Action action = 3;
    {PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_.action_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint64 id = 4;
    {PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 acknowledged = 5;
    {PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_.acknowledged_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
  }},
  // no aux_entries
  {{
    "\36\7\5\0\0\0\0\0"
    "thalamus_grpc.ObservableChange"
    "address"
    "value"
  }},
};

PROTOBUF_NOINLINE void ObservableChange::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.ObservableChange)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.address_.ClearToEmpty();
  _impl_.value_.ClearToEmpty();
  ::memset(&_impl_.id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.action_) -
      reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.action_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ObservableChange::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.ObservableChange)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    const std::string& _s = this->_internal_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.ObservableChange.address");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    const std::string& _s = this->_internal_value();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.ObservableChange.value");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .thalamus_grpc.ObservableChange.Action action = 3;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_action(), target);
  }

  // uint64 id = 4;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        4, this->_internal_id(), target);
  }

  // uint64 acknowledged = 5;
  if (this->_internal_acknowledged() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
        5, this->_internal_acknowledged(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.ObservableChange)
  return target;
}

::size_t ObservableChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.ObservableChange)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_address());
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_value());
  }

  // uint64 id = 4;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_id());
  }

  // uint64 acknowledged = 5;
  if (this->_internal_acknowledged() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
        this->_internal_acknowledged());
  }

  // .thalamus_grpc.ObservableChange.Action action = 3;
  if (this->_internal_action() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ObservableChange::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ObservableChange*>(&to_msg);
  auto& from = static_cast<const ObservableChange&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.ObservableChange)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _this->_internal_set_address(from._internal_address());
  }
  if (!from._internal_value().empty()) {
    _this->_internal_set_value(from._internal_value());
  }
  if (from._internal_id() != 0) {
    _this->_impl_.id_ = from._impl_.id_;
  }
  if (from._internal_acknowledged() != 0) {
    _this->_impl_.acknowledged_ = from._impl_.acknowledged_;
  }
  if (from._internal_action() != 0) {
    _this->_impl_.action_ = from._impl_.action_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ObservableChange::CopyFrom(const ObservableChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.ObservableChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ObservableChange::InternalSwap(ObservableChange* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.address_, &other->_impl_.address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_.action_)
      + sizeof(ObservableChange::_impl_.action_)
      - PROTOBUF_FIELD_OFFSET(ObservableChange, _impl_.id_)>(
          reinterpret_cast<char*>(&_impl_.id_),
          reinterpret_cast<char*>(&other->_impl_.id_));
}

::google::protobuf::Metadata ObservableChange::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Notification::_Internal {
 public:
};

Notification::Notification(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:thalamus_grpc.Notification)
}
inline PROTOBUF_NDEBUG_INLINE Notification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::thalamus_grpc::Notification& from_msg)
      : title_(arena, from.title_),
        message_(arena, from.message_),
        _cached_size_{0} {}

Notification::Notification(
    ::google::protobuf::Arena* arena,
    const Notification& from)
    : ::google::protobuf::Message(arena) {
  Notification* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.type_ = from._impl_.type_;

  // @@protoc_insertion_point(copy_constructor:thalamus_grpc.Notification)
}
inline PROTOBUF_NDEBUG_INLINE Notification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : title_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void Notification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.type_ = {};
}
Notification::~Notification() {
  // @@protoc_insertion_point(destructor:thalamus_grpc.Notification)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Notification::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.title_.Destroy();
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Notification::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Notification, _impl_._cached_size_),
              false,
          },
          &Notification::MergeImpl,
          &Notification::kDescriptorMethods,
          &descriptor_table_thalamus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 47, 2> Notification::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Notification_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::thalamus_grpc::Notification>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .thalamus_grpc.Notification.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Notification, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Notification, _impl_.type_)}},
    // string title = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Notification, _impl_.title_)}},
    // string message = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Notification, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .thalamus_grpc.Notification.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(Notification, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string title = 2;
    {PROTOBUF_FIELD_OFFSET(Notification, _impl_.title_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 3;
    {PROTOBUF_FIELD_OFFSET(Notification, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\0\5\7\0\0\0\0"
    "thalamus_grpc.Notification"
    "title"
    "message"
  }},
};

PROTOBUF_NOINLINE void Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:thalamus_grpc.Notification)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.title_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Notification::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:thalamus_grpc.Notification)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .thalamus_grpc.Notification.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_type(), target);
  }

  // string title = 2;
  if (!this->_internal_title().empty()) {
    const std::string& _s = this->_internal_title();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.Notification.title");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "thalamus_grpc.Notification.message");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:thalamus_grpc.Notification)
  return target;
}

::size_t Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:thalamus_grpc.Notification)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string title = 2;
  if (!this->_internal_title().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_title());
  }

  // string message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  // .thalamus_grpc.Notification.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Notification::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Notification*>(&to_msg);
  auto& from = static_cast<const Notification&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:thalamus_grpc.Notification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Notification::CopyFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:thalamus_grpc.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Notification::InternalSwap(Notification* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.title_, &other->_impl_.title_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.type_, other->_impl_.type_);
}

::google::protobuf::Metadata Notification::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace thalamus_grpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_thalamus_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
