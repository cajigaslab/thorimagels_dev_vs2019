<UserControl x:Class="CaptureSetupDll.View.BleachControlView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:View="clr-namespace:CaptureSetupDll.View"
             xmlns:ViewModel="clr-namespace:CaptureSetupDll.ViewModel"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:validator="clr-namespace:Validations;assembly=Validations"
             xmlns:sharedTypes="clr-namespace:ThorSharedTypes;assembly=ThorSharedTypes"
             Height="Auto"
             Width="360">
    <UserControl.Resources>
        <ResourceDictionary>
            <DataTemplate DataType="{x:Type ViewModel:CaptureSetupViewModel}" />
            <ViewModel:DoubleCultureConverter x:Key="doubleCulture" />
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ThemeControl;component/ThorStyleDark.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="120" />
        </Grid.ColumnDefinitions>
        <StackPanel Margin="1"
                    Grid.Row="0">
            <!--<StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center">
                <Label Content="Rec. Width: "
                       HorizontalAlignment="Center"
                       Foreground="White"
                       VerticalAlignment="Center" />
                <Label Content="{Binding Path=ROIWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource doubleCulture}}"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       Width="60"
                       VerticalAlignment="Center"
                       ToolTip="Rectangle ROI Width" />
                <Label Content="[um]"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       VerticalAlignment="Center" />
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        Margin="0,0,3,0">
                <Label Content="Rec. Height: "
                       HorizontalAlignment="Center"
                       Foreground="White"
                       VerticalAlignment="Center" />
                <Label Content="{Binding Path=ROIHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource doubleCulture}}"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       Width="60"
                       VerticalAlignment="Center"
                       ToolTip="Rectangle ROI Height" />
                <Label Content="[um]"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       VerticalAlignment="Center" />
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        Margin="15,0,0,0">
                <Label Content="Offset X: "
                       HorizontalAlignment="Center"
                       Foreground="White"
                       VerticalAlignment="Center" />
                <Label Content="{Binding Path=ROIOffsetX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource doubleCulture}}"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       Width="60"
                       VerticalAlignment="Center"
                       ToolTip="Offset X from center of image" />
                <Label Content="[um]"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       VerticalAlignment="Center" />
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        Margin="15,0,0,0">
                <Label Content="Offset Y: "
                       HorizontalAlignment="Center"
                       Foreground="White"
                       VerticalAlignment="Center" />
                <Label Content="{Binding Path=ROIOffsetY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource doubleCulture}}"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       Width="60"
                       VerticalAlignment="Center"
                       ToolTip="Offset Y from center of image" />
                <Label Content="[um]"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       VerticalAlignment="Center" />
            </StackPanel>-->
            <Border>
                <Expander IsExpanded="{Binding ElementName=cbBleachPower, Path=IsChecked, Mode=OneWay}"
                          Foreground="White">
                    <Expander.Header>
                        <CheckBox Name="cbBleachPower"
                                  Content="Enable Stimulation Power"
                                  Foreground="White"
                                  IsChecked="{Binding Path=BleachPowerEnable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Expander.Header>
                    <StackPanel Orientation="Horizontal"
                                Margin="1">
                        <TextBox Text="{Binding Path=BleachPower, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True,ValidatesOnDataErrors=True}"
                                 validator:Validation.ValidationType="{x:Type system:Double}"
                                 validator:Validation.MinValue="0.0"
                                 validator:Validation.NoEmptyValue="False"
                                 validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                 ToolTip="Enter the power for bleaching"
                                 Width="60"
                                 Name="tbBleachPower"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Margin="20,3,3,3">
                        </TextBox>
                        <Button Width="30"
                                Content="&#x2713;">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbBleachPower}"
                                                     Value="True">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </Expander>
            </Border>
            <Border>
                <Expander IsExpanded="{Binding ElementName=cbBleachWavelength, Path=IsChecked, Mode=OneWay}"
                          Foreground="White">
                    <Expander.Header>
                        <CheckBox Name="cbBleachWavelength"
                                  Content="Enable Stimulation Wavelength"
                                  Foreground="White"
                                  IsChecked="{Binding Path=BleachWavelengthEnable, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Expander.Header>
                    <StackPanel Orientation="Horizontal"
                                Margin="20,3,3,3">
                        <TextBox Text="{Binding Path=BleachWavelength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True,ValidatesOnDataErrors=True}"
                                 validator:Validation.ValidationType="{x:Type system:Int32}"
                                 validator:Validation.MinValue="0"
                                 validator:Validation.NoEmptyValue="False"
                                 validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                 ToolTip="Enter the wavelength for bleaching"
                                 Width="60"
                                 Name="tbBleachWavelength"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Margin="1">
                        </TextBox>
                        <Button Width="30"
                                Content="&#x2713;">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Visibility"
                                            Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbBleachWavelength}"
                                                     Value="True">
                                            <Setter Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Label Content="[nm]"
                               HorizontalAlignment="Center"
                               Foreground="White"
                               VerticalAlignment="Center"
                               Margin="1" />
                    </StackPanel>
                </Expander>
            </Border>
            <CheckBox Name="cbBleachQuery"
                      Content="Query Before Stimulation"
                      Margin="1"
                      HorizontalAlignment="Left"
                      IsChecked="{Binding Path=BleachQuery, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Foreground="White" />
        </StackPanel>
        <StackPanel Grid.Row="1"
                    Margin="1"
                    Orientation="Vertical">
            <StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center">
                <Label Content="Stimulation Cycles: "
                       HorizontalAlignment="Center"
                       Foreground="White"
                       VerticalAlignment="Center" />
                <TextBox Text="{Binding Path=BleachFrames, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True,ValidatesOnDataErrors=True}"
                         validator:Validation.ValidationType="{x:Type system:Int32}"
                         validator:Validation.MinValue="1"
                         validator:Validation.NoEmptyValue="True"
                         validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                         ToolTip="Enter the number of iterations"
                         Width="60"
                         Name="tbBleachFrames"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center">
                </TextBox>
                <Button Width="30"
                        Content="&#x2713;">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbBleachFrames}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            <Label Name="lblCalibrationDate"
                   Content="{Binding Path=LSMLastCalibrationDate}"
                   Foreground="Yellow" />
        </StackPanel>
        <StackPanel Grid.Row="0"
                    Grid.Column="1"
                    Margin="1">
            <!--<Button ToolTip="Command to extract Rectangle ROI"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Height="30"
                    Width="100"
                    Margin="1"
                    Command="{Binding Path=ExtractBleachROICommand}">
                <TextBlock ToolTip="Extract Rectangle ROI parameters">Extract ROIs</TextBlock>
            </Button>-->
            <Button ToolTip="Command to generate waveform"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Height="30"
                    Width="100"
                    Margin="1"
                    Command="{Binding Path=GenWaveformCommand}"
                    IsEnabled="{Binding Path=IsProgressWindowOff, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBlock ToolTip="Extract ROI data, update settings and generate waveform">ROIs Settings</TextBlock>
            </Button>
            <Button ToolTip="Command to display Rectangle ROI"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Height="30"
                    Width="100"
                    Margin="1"
                    Command="{Binding Path=DisplayBleachROICommand}">
                <TextBlock ToolTip="Display Rectangle ROI based on parameters">Display ROIs</TextBlock>
            </Button>
            <!--<StackPanel Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        Margin="0,8,3,1">
                <CheckBox Content="Spot Scan"
                          Foreground="White"
                          Width="90"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Left"
                          IsChecked="{Binding Path=EnableSpotScan, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="Enable center spot scan" 
                          Visibility="Collapsed"/>
            </StackPanel>-->
        </StackPanel>
        <StackPanel Grid.Row="1"
                    Grid.Column="1"
                    Margin="1"
                    Orientation="Vertical"
                    VerticalAlignment="Center">
            <Button ToolTip="Command to Bleach"
                    Style="{x:Null}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Height="30"
                    Width="100"
                    Margin="1"
                    Foreground="White"
                    Background="LimeGreen"
                    Command="{Binding Path=BleachNowCommand}"
                    IsEnabled="{Binding Path=BleachNowEnable, UpdateSourceTrigger=PropertyChanged}">
                <TextBlock ToolTip="Start Activation Scan">Stimulate Now</TextBlock>
            </Button>
        </StackPanel>
        <StackPanel Name="stpBleacherControl"
                    Grid.Row="2"
                    Grid.ColumnSpan="2"
                    Margin="1"
                    Orientation="Horizontal"
                    VerticalAlignment="Center">
            <Button Content="UnCalib.&#x0a; Center"
                    ToolTip="Center bleach scanner at non-calibrated imaging center"
                    Width="60"
                    Height="40"
                    Margin="1"
                    IsEnabled="{Binding LiveStartButtonStatus}"
                    Command="{Binding CenterScannersCommand}"
                    CommandParameter="{x:Static sharedTypes:SelectedHardware.SELECTED_BLEACHINGSCANNER}" />
            <Button Name="btCenterBleacher"
                    Content=" Calib.&#x0a;Center"
                    ToolTip="Center bleach scanner at calibrated center"
                    Width="60"
                    Height="40"
                    Margin="1"
                    IsEnabled="{Binding LiveStartButtonStatus}"
                    Command="{Binding ImagingCenterScannersCommand}"
                    CommandParameter="{x:Static sharedTypes:SelectedHardware.SELECTED_BLEACHINGSCANNER}" />
            <StackPanel Name="stkBleachPockel" Orientation="Horizontal" HorizontalAlignment="Left">
                <Label Content="Pockels"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       VerticalAlignment="Center" />
                <ComboBox MinWidth="40"
                          Height="30"
                          HorizontalAlignment="Left"
                          HorizontalContentAlignment="Left"
                          ToolTip="Select the pockels ID, those have to be set as visible."
                          ItemsSource="{Binding BleacherPockelsList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedIndex="{Binding Path=BleacherPowerID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                </ComboBox>
                <Label Content=":"
                       HorizontalAlignment="Center"
                       Foreground="White"
                       VerticalAlignment="Center" />
                <TextBox Name="tbBleacherPower"
                         Text="{Binding Path=BleacherPowerGo, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True,ValidatesOnDataErrors=True}"
                         ToolTip="Enter the power value of bleach scanner to go to"
                         Width="40"
                         VerticalAlignment="Center"
                         validator:Validation.ValidationType="{x:Type system:Double}"
                         validator:Validation.NoEmptyValue="False"
                         validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                         validator:Validation.MinValue="0"
                         validator:Validation.MaxValue="100">
                </TextBox>
                <Button Width="30"
                        Content="&#x2713;">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Visibility"
                                    Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsFocused, ElementName=tbBleacherPower}"
                                             Value="True">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Go"
                        ToolTip="Command to set pockels Power of bleach scanner"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Command="{Binding Path=SetBleacherPowerCommand}"
                        MinWidth="25"
                        Margin="1">
                </Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>