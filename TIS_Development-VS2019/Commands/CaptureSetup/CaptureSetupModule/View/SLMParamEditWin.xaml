<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        x:Class="CaptureSetupDll.View.SLMParamEditWin"
        xmlns:ViewModel="clr-namespace:CaptureSetupDll.ViewModel"
        xmlns:View="clr-namespace:CaptureSetupDll.View"
        xmlns:Spin="clr-namespace:SpinnerProgress;assembly=SpinnerProgress"
        xmlns:validator="clr-namespace:Validations;assembly=Validations"
        xmlns:sharedType="clr-namespace:ThorSharedTypes;assembly=ThorSharedTypes"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        d:DesignWidth="470"
        d:DesignHeight="780"
        MaxHeight="780"
        MaxWidth="470"
        WindowStyle="ThreeDBorderWindow"
        SizeToContent="WidthAndHeight"
        ResizeMode="NoResize"
        Background="#333">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/ThemeControl;component/ThorStyleDark.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ViewModel:DoubleCultureConverter x:Key="doubleCulture" />
            <ViewModel:BrushColorConverter x:Key="brushColorConverter" />
            <sharedType:StringToVisibilityConverter x:Key="stringToVisConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="3">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <StackPanel Name="stpParams"
                    Grid.Column="0">
            <StackPanel Name="stpName"
                        Grid.Column="0"
                        Grid.ColumnSpan="1"
                        Grid.Row="0"
                        Grid.RowSpan="1"
                        Orientation="Vertical"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top">
                <StackPanel Height="30"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top"
                            ToolTip="Name of the SLM pattern">
                    <Label Content="Name"
                           Width="60"
                           HorizontalContentAlignment="Center"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                    <TextBox Name="txtName"
                             Text="{Binding Path=.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Width="160"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Margin="3,3,3,3" />
                    <Button Width="25"
                            Height="25"
                            Content="✓">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtName}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Label BorderBrush="White"
                           BorderThickness="1"
                           Width="30"
                           Margin="3">
                        <Label.Background>
                            <MultiBinding Converter="{StaticResource brushColorConverter}">
                                <Binding Path="Value"
                                         ElementName="sliderR" />
                                <Binding Path="Value"
                                         ElementName="sliderG" />
                                <Binding Path="Value"
                                         ElementName="sliderB" />
                            </MultiBinding>
                        </Label.Background>
                    </Label>
                </StackPanel>
                <Border Width="200"
                        Height="Auto"
                        Margin="3">
                    <StackPanel Orientation="Vertical"
                                Margin="3"
                                HorizontalAlignment="Stretch">
                        <StackPanel Orientation="Horizontal"
                                    Margin="3"
                                    HorizontalAlignment="Right">
                            <Label Content="ROI Width: "
                                   Height="30"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                            <TextBox Name="txtWidth"
                                     Width="60"
                                     MaxWidth="100"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Margin="3,3,3,3"
                                     Foreground="White"
                                     validator:Validation.ValidationType="{x:Type system:Double}"
                                     validator:Validation.MinValue="0.0"
                                     validator:Validation.NoEmptyValue="True"
                                     validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                     Text="{Binding Path=.BleachWaveParams.ROIWidthUM, Mode =TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" />
                            <Button Width="25"
                                    Height="25"
                                    Content="✓">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtWidth}"
                                                         Value="True">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Label Content="[um]"
                                   Width="45"
                                   Height="30"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    Margin="3"
                                    HorizontalAlignment="Right">
                            <Label Content="ROI Height: "
                                   Height="30"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                            <TextBox Name="txtHeight"
                                     Width="60"
                                     MaxWidth="100"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Margin="3,3,3,3"
                                     Foreground="White"
                                     validator:Validation.ValidationType="{x:Type system:Double}"
                                     validator:Validation.MinValue="0.0"
                                     validator:Validation.NoEmptyValue="True"
                                     validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                                     Text="{Binding Path=.BleachWaveParams.ROIHeightUM, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" />
                            <Button Width="25"
                                    Height="25"
                                    Content="✓">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Visibility"
                                                Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtHeight}"
                                                         Value="True">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Label Content="[um]"
                                   Width="45"
                                   Height="30"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        </StackPanel>
                    </StackPanel>
                </Border>
            </StackPanel>
            <StackPanel Name="stpSpacing"
                        Grid.Column="0"
                        Grid.Row="1"
                        Orientation="Vertical"
                        Margin="3"
                        HorizontalAlignment="Center">
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            ToolTip="Pixel spacing per step.">
                    <Label Content="Pixel Spacing"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                    <TextBox Name="txtPxSpacing"
                             Width="60"
                             Foreground="White"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Margin="3,3,3,3"
                             validator:Validation.ValidationType="{x:Type system:Int32}"
                             validator:Validation.MinValue="1"
                             validator:Validation.NoEmptyValue="True"
                             validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                             Text="{Binding Path=.PixelSpacing, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" />
                    <Button Width="25"
                            Height="25"
                            Content="✓">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtPxSpacing}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Label Content="[pixel]"
                           Width="50"
                           Height="30"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            ToolTip="Total dwell time per iteration, excluding pre or post iteration idle time.">
                    <Label Content="Duration"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                    <TextBox Name="txtDuration"
                             Width="60"
                             Foreground="White"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Margin="3,3,3,3"
                             validator:Validation.ValidationType="{x:Type system:Double}"
                             validator:Validation.MinValue="0.0"
                             validator:Validation.NoEmptyValue="True"
                             validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                             Text="{Binding Path=.Duration, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" />
                    <Button Width="25"
                            Height="25"
                            Content="✓">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtDuration}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Label Content="[ms]"
                           Width="50"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right">
                    <Label Content="Iterations"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                    <TextBox Name="txtIteration"
                             Width="60"
                             Foreground="White"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Margin="3,3,3,3"
                             validator:Validation.ValidationType="{x:Type system:Int32}"
                             validator:Validation.MinValue="1"
                             validator:Validation.NoEmptyValue="True"
                             validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                             Text="{Binding Path=.BleachWaveParams.Iterations, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" />
                    <Button Width="25"
                            Height="25"
                            Content="✓">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtIteration}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Label Content=""
                           Width="50"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right">
                    <Label Content="Power"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                    <TextBox Name="txtPower"
                             Width="60"
                             Foreground="White"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Margin="3,3,3,3"
                             validator:Validation.ValidationType="{x:Type system:Double}"
                             validator:Validation.MinValue="0.0"
                             validator:Validation.NoEmptyValue="True"
                             validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                             Text="{Binding Path=.BleachWaveParams.Power, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" />
                    <Button Width="25"
                            Height="25"
                            Content="✓">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtPower}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Label Content="[%]"
                           Width="50"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                </StackPanel>
            </StackPanel>
            <StackPanel Name="stpMPower"
                        Grid.Column="0"
                        Grid.Row="2"
                        Orientation="Vertical"
                        Margin="3"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top">
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Width="240"
                            Margin="3">
                    <Label Content="Measured Power"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                    <TextBox Name="txtmPower"
                             Width="60"
                             Foreground="White"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Margin="3,3,3,3"
                             validator:Validation.ValidationType="{x:Type system:Double}"
                             validator:Validation.MinValue="0.0"
                             validator:Validation.NoEmptyValue="False"
                             validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                             Text="{Binding Path=.BleachWaveParams.MeasurePower, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" />
                    <Button Width="25"
                            Height="25"
                            Content="✓">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtmPower}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Label Content="[mW]"
                           Width="50"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Width="280"
                            Margin="3">
                    <Label Content="Approx. Power Density"
                           Width="140"
                           Height="30"
                           HorizontalContentAlignment="Right"
                           VerticalAlignment="Center" />
                    <TextBlock Text="{Binding Path=.SLMMeasurePowerArea, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                               Foreground="White"
                               Background="#FF595959"
                               Width="60"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Margin="3,3,3,3" />
                    <Label Content="[mW/um^2]"
                           Width="80"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Width="240"
                            Margin="3">
                    <Label Content="  Pattern Pre Idle"
                           Height="30"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center" />
                    <TextBox Name="txtPatPreIdle"
                             Width="60"
                             Foreground="White"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Margin="3,3,3,3"
                             validator:Validation.ValidationType="{x:Type system:Double}"
                             validator:Validation.MinValue="0.0"
                             validator:Validation.NoEmptyValue="True"
                             validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                             Text="{Binding Path=.BleachWaveParams.PrePatIdleTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" />
                    <Button Width="25"
                            Height="25"
                            Content="✓">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtPatPreIdle}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Label Content="[ms]"
                           Width="74"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Margin="3">
                    <Label Content="Pattern Post Idle"
                           Height="30"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center" />
                    <TextBox Name="txtPatPostIdle"
                             Width="60"
                             Foreground="White"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Margin="3,3,3,3"
                             validator:Validation.ValidationType="{x:Type system:Double}"
                             validator:Validation.MinValue="0.0"
                             validator:Validation.NoEmptyValue="True"
                             validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                             Text="{Binding Path=.BleachWaveParams.PostPatIdleTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" />
                    <Button Width="25"
                            Height="25"
                            Content="✓">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtPatPostIdle}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Label Content="[ms]"
                           Width="76"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Width="240"
                            Margin="3">
                    <Label Content="Iteration Pre Idle"
                           Height="30"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center" />
                    <TextBox Name="txtPreIdle"
                             Width="60"
                             Foreground="White"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Margin="3,3,3,3"
                             validator:Validation.ValidationType="{x:Type system:Double}"
                             validator:Validation.MinValue="0.0"
                             validator:Validation.NoEmptyValue="True"
                             validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                             Text="{Binding Path=.BleachWaveParams.PreIdleTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" />
                    <Button Width="25"
                            Height="25"
                            Content="✓">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtPreIdle}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Label Content="[ms]"
                           Width="74"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Margin="3">
                    <Label Content="Iteration Post Idle"
                           Height="30"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center" />
                    <TextBox Name="txtPostIdle"
                             Width="60"
                             Foreground="White"
                             HorizontalAlignment="Center"
                             VerticalAlignment="Center"
                             Margin="3,3,3,3"
                             validator:Validation.ValidationType="{x:Type system:Double}"
                             validator:Validation.MinValue="0.0"
                             validator:Validation.NoEmptyValue="True"
                             validator:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text"
                             Text="{Binding Path=.BleachWaveParams.PostIdleTime, Mode=TwoWay, UpdateSourceTrigger=LostFocus, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" />
                    <Button Width="25"
                            Height="25"
                            Content="✓">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsFocused, ElementName=txtPostIdle}"
                                                 Value="True">
                                        <Setter Property="Visibility"
                                                Value="Visible" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Label Content="[ms]"
                           Width="76"
                           Height="30"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center" />
                </StackPanel>
            </StackPanel>
        </StackPanel>
        <StackPanel Name="stpRGB"
                    Height="250"
                    Grid.Column="1"
                    Grid.ColumnSpan="1"
                    Grid.Row="0"
                    Grid.RowSpan="3"
                    Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top">
            <!--Grid.RowSpan can be 2 if necessary -->
            <Border BorderThickness="1,1,1,1"
                    BorderBrush="#FFFFFFFF"
                    CornerRadius="1"
                    Margin="1">
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top">
                    <StackPanel>
                        <Label VerticalAlignment="Top"
                               HorizontalContentAlignment="Center"
                               Content="R" />
                        <Label Width="30"
                               Content="{Binding Value, ConverterParameter=0, Converter={StaticResource doubleCulture}, ElementName=sliderR, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               Margin="1" />
                        <Slider x:Name="sliderR"
                                Maximum="255"
                                Minimum="0"
                                Orientation="Vertical"
                                Margin="1"
                                Height="180"
                                SmallChange="1"
                                Value="{Binding Path=.Red, Mode=TwoWay}"
                                ValueChanged="Color_Changed"
                                MouseWheel="ColorDelta_Changed" />
                    </StackPanel>
                    <StackPanel>
                        <Label VerticalAlignment="Top"
                               HorizontalContentAlignment="Center"
                               Content="G" />
                        <Label Width="30"
                               Content="{Binding Value, ConverterParameter=0, Converter={StaticResource doubleCulture}, ElementName=sliderG, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               Margin="1" />
                        <Slider x:Name="sliderG"
                                Maximum="255"
                                Minimum="0"
                                Orientation="Vertical"
                                Margin="1"
                                Height="180"
                                SmallChange="1"
                                Value="{Binding Path=.Green, Mode=TwoWay}"
                                ValueChanged="Color_Changed"
                                MouseWheel="ColorDelta_Changed" />
                    </StackPanel>
                    <StackPanel>
                        <Label VerticalAlignment="Top"
                               HorizontalContentAlignment="Center"
                               Content="B" />
                        <Label Width="30"
                               Content="{Binding Value, ConverterParameter=0, Converter={StaticResource doubleCulture}, ElementName=sliderB, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               Margin="1" />
                        <Slider x:Name="sliderB"
                                Maximum="255"
                                Minimum="0"
                                Orientation="Vertical"
                                Margin="1"
                                Height="180"
                                SmallChange="1"
                                Value="{Binding Path=.Blue, Mode=TwoWay}"
                                ValueChanged="Color_Changed"
                                MouseWheel="ColorDelta_Changed" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </StackPanel>
        <StackPanel Name="stpCalib"
                    Grid.Column="0"
                    Grid.Row="3"
                    Grid.ColumnSpan="2"
                    Grid.RowSpan="1"
                    Height="Auto"
                    Orientation="Vertical">
            <StackPanel HorizontalAlignment="Center"
                        Orientation="Vertical">
                <Label Name="lblSLMCalibTitle"
                       Content="{Binding Path=.CalibTitle}"
                       MaxWidth="340"
                       MaxHeight="30"
                       HorizontalAlignment="Left"
                       HorizontalContentAlignment="Left"
                       Margin="1" />
                <Label Name="lblSLMCalibBody"
                       Content="{Binding Path=.CalibBody}"
                       MaxWidth="340"
                       MaxHeight="400"
                       HorizontalAlignment="Left"
                       HorizontalContentAlignment="Left"
                       Margin="1" />
            </StackPanel>
            <StackPanel Name="stpCalibBtns"
                        Orientation="Horizontal"
                        HorizontalAlignment="Right">
                <Button HorizontalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalAlignment="Center"
                        Height="30"
                        Width="60"
                        Margin="3"
                        Click="btnCalibration_Click"
                        Tag="{Binding Path=.CalibYes}">
                    <TextBlock Text="Yes"
                               ToolTip=""></TextBlock>
                </Button>
                <Button HorizontalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalAlignment="Center"
                        Height="30"
                        Width="60"
                        Margin="3"
                        Click="btnCalibration_Click"
                        Tag="{Binding Path=.CalibNo}">
                    <TextBlock Text="No"
                               ToolTip=""></TextBlock>
                </Button>
            </StackPanel>
        </StackPanel>
        <StackPanel Name="stpImport"
                    Grid.Column="0"
                    Grid.Row="4"
                    Grid.ColumnSpan="2"
                    Grid.RowSpan="1"
                    Height="Auto"
                    Orientation="Vertical"
                    Margin="3">
            <StackPanel Name="stpImportBrowse"
                        Height="Auto"
                        Orientation="Horizontal"
                        HorizontalAlignment="Center"
                        Visibility="{Binding ElementName=lblSLMPatternStatus, Path=Content, Converter={StaticResource stringToVisConverter}, ConverterParameter=Inverted, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        Margin="3">
                <Label Content="Import "
                       Width="50" />
                <TextBox Name="tbImport"
                         Text="{Binding .ImportFilePath, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         Width="220" />
                <Button Content="Browse"
                        Width="70"
                        Margin="1"
                        Click="btnSLMBrowse_Click"
                        Tag="{Binding Path=.Browse}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal"
                        Visibility="{Binding ElementName=lblSLMPatternStatus, Path=Content, Converter={StaticResource stringToVisConverter}, ConverterParameter=Inverted, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                        HorizontalAlignment="Right">
                <Button Name="btnImport"
                        HorizontalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalAlignment="Center"
                        Height="30"
                        Width="60"
                        Margin="3"
                        Click="btnSLMBrowse_Click"
                        Tag="{Binding Path=.Import}">
                    <TextBlock Text="OK"
                               ToolTip="Run import of SLM bleach"></TextBlock>
                </Button>
                <Button HorizontalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalAlignment="Center"
                        Height="30"
                        Width="60"
                        Margin="3"
                        Click="btnSLMBrowse_Click"
                        Tag="{Binding Path=.Cancel}">
                    <TextBlock Text="Cancel"
                               ToolTip="Cancel import of SLM bleach"></TextBlock>
                </Button>
            </StackPanel>
        </StackPanel>
        <StackPanel Name="stpSLMSequence"
                    Grid.Column="0"
                    Grid.Row="5"
                    Grid.ColumnSpan="2"
                    Grid.RowSpan="1"
                    Height="Auto"
                    HorizontalAlignment="Center"
                    Orientation="Vertical">
            <StackPanel Orientation="Horizontal">
                <Label Grid.Column="0"
                       Margin="0"
                       Content="Epochs"
                       Foreground="White"
                       HorizontalContentAlignment="Center"
                       VerticalAlignment="Center"
                       Width="155"></Label>
                <Button Grid.Column="2"
                        Content="Add Epoch"
                        Foreground="White"
                        Margin="130,0,0,0"
                        HorizontalContentAlignment="Right"                            
                        VerticalAlignment="Center"
                        Width="100" Click="AddEpochLine_Click"></Button>
            </StackPanel>
            <ScrollViewer VerticalScrollBarVisibility="Auto" MaxHeight="600">
                <StackPanel Name="linePanel" Orientation="Vertical"/>
            </ScrollViewer>
        </StackPanel>
        <StackPanel Name="stpSLMStatus"
                    Grid.Column="0"
                    Grid.Row="6"
                    Grid.ColumnSpan="2"
                    Grid.RowSpan="1"
                    Height="Auto"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal">
            <Label Name="lblSLMPatternStatus"
                   MaxWidth="340"
                   MaxHeight="80"
                   HorizontalAlignment="Left"
                   HorizontalContentAlignment="Left"
                   Margin="1"
                   Foreground="Red" />
        </StackPanel>
        <StackPanel Name="stpSLMLabel"
                    Grid.Column="0"
                    Grid.Row="7"
                    MaxHeight="140"
                    HorizontalAlignment="Center"
                    Orientation="Vertical"
                    VerticalAlignment="Center">
            <TextBlock Name="txbIntro"
                       HorizontalAlignment="Left"
                       Text="Use the Activation ROI tool to create / modify / delete the activation regions on the image."
                       Width="270"
                       Foreground="White"
                       TextWrapping="Wrap"
                       FontSize="16"
                       FontStyle="Italic" />
        </StackPanel>
        <StackPanel Name="stpSLMButton"
                    Grid.Column="1"
                    Grid.Row="7"
                    Height="140"
                    Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
            <Button ToolTip="Ready to create pattern and waveform"
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    VerticalAlignment="Center"
                    Height="30"
                    Width="60"
                    Margin="3"
                    Click="btnOk_Click">
                <TextBlock Text="OK"
                           ToolTip="Ready to create pattern and waveform"></TextBlock>
            </Button>
            <Button ToolTip="Ready to exit"
                    HorizontalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    VerticalAlignment="Center"
                    Height="30"
                    Width="60"
                    Margin="3"
                    Click="btnCancel_Click">
                <TextBlock Text="Cancel"
                           ToolTip="Ready to exit"></TextBlock>
            </Button>
        </StackPanel>
        <StackPanel Name="stpSLMSpin"
                    Grid.Column="1"
                    Grid.Row="7"
                    Height="140"
                    Orientation="Vertical"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Stretch">
            <Canvas Width="105"
                    Height="105"
                    x:Name="canvasSLMSpinProgress">
                <!--Define a boundary to enclose the control-->
                <Spin:SpinnerProgressControl  x:Name="SLMSpinProgress"
                                              SpinnerHeight="100"
                                              SpinnerWidth="100" />
            </Canvas>
        </StackPanel>
    </Grid>
</Window>
